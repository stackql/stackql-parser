package sqlparser

type SQLAstVisitor interface {
	Visit(SQLNode) error
}

func (node *AccessMode) Accept(vis SQLAstVisitor) error           { return vis.Visit(node) }
func (node *AliasedExpr) Accept(vis SQLAstVisitor) error          { return vis.Visit(node) }
func (node *AliasedTableExpr) Accept(vis SQLAstVisitor) error     { return vis.Visit(node) }
func (node *AndExpr) Accept(vis SQLAstVisitor) error              { return vis.Visit(node) }
func (node *Auth) Accept(vis SQLAstVisitor) error                 { return vis.Visit(node) }
func (node *AuthRevoke) Accept(vis SQLAstVisitor) error           { return vis.Visit(node) }
func (node *AutoIncSpec) Accept(vis SQLAstVisitor) error          { return vis.Visit(node) }
func (node *Begin) Accept(vis SQLAstVisitor) error                { return vis.Visit(node) }
func (node *BinaryExpr) Accept(vis SQLAstVisitor) error           { return vis.Visit(node) }
func (node BoolVal) Accept(vis SQLAstVisitor) error               { return vis.Visit(node) }
func (node *CaseExpr) Accept(vis SQLAstVisitor) error             { return vis.Visit(node) }
func (node ColIdent) Accept(vis SQLAstVisitor) error              { return vis.Visit(node) }
func (node *ColName) Accept(vis SQLAstVisitor) error              { return vis.Visit(node) }
func (node *CollateExpr) Accept(vis SQLAstVisitor) error          { return vis.Visit(node) }
func (node *ColumnDefinition) Accept(vis SQLAstVisitor) error     { return vis.Visit(node) }
func (node Columns) Accept(vis SQLAstVisitor) error               { return vis.Visit(node) }
func (node *ColumnType) Accept(vis SQLAstVisitor) error           { return vis.Visit(node) }
func (node Comments) Accept(vis SQLAstVisitor) error              { return vis.Visit(node) }
func (node *Commit) Accept(vis SQLAstVisitor) error               { return vis.Visit(node) }
func (node *ComparisonExpr) Accept(vis SQLAstVisitor) error       { return vis.Visit(node) }
func (node *ConstraintDefinition) Accept(vis SQLAstVisitor) error { return vis.Visit(node) }
func (node *ConvertExpr) Accept(vis SQLAstVisitor) error          { return vis.Visit(node) }
func (node *ConvertType) Accept(vis SQLAstVisitor) error          { return vis.Visit(node) }
func (node *ConvertUsingExpr) Accept(vis SQLAstVisitor) error     { return vis.Visit(node) }
func (node *CurTimeFuncExpr) Accept(vis SQLAstVisitor) error      { return vis.Visit(node) }
func (node *DBDDL) Accept(vis SQLAstVisitor) error                { return vis.Visit(node) }
func (node *DDL) Accept(vis SQLAstVisitor) error                  { return vis.Visit(node) }
func (node *Default) Accept(vis SQLAstVisitor) error              { return vis.Visit(node) }
func (node *Delete) Accept(vis SQLAstVisitor) error               { return vis.Visit(node) }
func (node *DescribeTable) Accept(vis SQLAstVisitor) error        { return vis.Visit(node) }
func (node *Exec) Accept(vis SQLAstVisitor) error                 { return vis.Visit(node) }
func (node *ExecSubquery) Accept(vis SQLAstVisitor) error         { return vis.Visit(node) }
func (node *ExistsExpr) Accept(vis SQLAstVisitor) error           { return vis.Visit(node) }
func (node *Explain) Accept(vis SQLAstVisitor) error              { return vis.Visit(node) }
func (node Exprs) Accept(vis SQLAstVisitor) error                 { return vis.Visit(node) }
func (node *ForeignKeyDefinition) Accept(vis SQLAstVisitor) error { return vis.Visit(node) }
func (node *FuncExpr) Accept(vis SQLAstVisitor) error             { return vis.Visit(node) }
func (node GroupBy) Accept(vis SQLAstVisitor) error               { return vis.Visit(node) }
func (node *GroupConcatExpr) Accept(vis SQLAstVisitor) error      { return vis.Visit(node) }
func (node *IndexDefinition) Accept(vis SQLAstVisitor) error      { return vis.Visit(node) }
func (node *IndexHints) Accept(vis SQLAstVisitor) error           { return vis.Visit(node) }
func (node *IndexInfo) Accept(vis SQLAstVisitor) error            { return vis.Visit(node) }
func (node *Insert) Accept(vis SQLAstVisitor) error               { return vis.Visit(node) }
func (node *IntervalExpr) Accept(vis SQLAstVisitor) error         { return vis.Visit(node) }
func (node *IsExpr) Accept(vis SQLAstVisitor) error               { return vis.Visit(node) }
func (node *IsolationLevel) Accept(vis SQLAstVisitor) error       { return vis.Visit(node) }
func (node JoinCondition) Accept(vis SQLAstVisitor) error         { return vis.Visit(node) }
func (node *JoinTableExpr) Accept(vis SQLAstVisitor) error        { return vis.Visit(node) }
func (node *Limit) Accept(vis SQLAstVisitor) error                { return vis.Visit(node) }
func (node ListArg) Accept(vis SQLAstVisitor) error               { return vis.Visit(node) }
func (node *MatchExpr) Accept(vis SQLAstVisitor) error            { return vis.Visit(node) }
func (node Nextval) Accept(vis SQLAstVisitor) error               { return vis.Visit(node) }
func (node *NotExpr) Accept(vis SQLAstVisitor) error              { return vis.Visit(node) }
func (node *NullVal) Accept(vis SQLAstVisitor) error              { return vis.Visit(node) }
func (node *OptLike) Accept(vis SQLAstVisitor) error              { return vis.Visit(node) }
func (node OnDup) Accept(vis SQLAstVisitor) error                 { return vis.Visit(node) }
func (node OrderBy) Accept(vis SQLAstVisitor) error               { return vis.Visit(node) }
func (node *OrExpr) Accept(vis SQLAstVisitor) error               { return vis.Visit(node) }
func (node *Order) Accept(vis SQLAstVisitor) error                { return vis.Visit(node) }
func (node *OtherAdmin) Accept(vis SQLAstVisitor) error           { return vis.Visit(node) }
func (node *OtherRead) Accept(vis SQLAstVisitor) error            { return vis.Visit(node) }
func (node *ParenSelect) Accept(vis SQLAstVisitor) error          { return vis.Visit(node) }
func (node *ParenTableExpr) Accept(vis SQLAstVisitor) error       { return vis.Visit(node) }
func (node *PartitionDefinition) Accept(vis SQLAstVisitor) error  { return vis.Visit(node) }
func (node Partitions) Accept(vis SQLAstVisitor) error            { return vis.Visit(node) }
func (node *PartitionSpec) Accept(vis SQLAstVisitor) error        { return vis.Visit(node) }
func (node *Purge) Accept(vis SQLAstVisitor) error                { return vis.Visit(node) }
func (node *NativeQuery) Accept(vis SQLAstVisitor) error          { return vis.Visit(node) }
func (node *RangeCond) Accept(vis SQLAstVisitor) error            { return vis.Visit(node) }
func (node ReferenceAction) Accept(vis SQLAstVisitor) error       { return vis.Visit(node) }
func (node *Registry) Accept(vis SQLAstVisitor) error             { return vis.Visit(node) }
func (node *Release) Accept(vis SQLAstVisitor) error              { return vis.Visit(node) }
func (node *Rollback) Accept(vis SQLAstVisitor) error             { return vis.Visit(node) }
func (node *SQLVal) Accept(vis SQLAstVisitor) error               { return vis.Visit(node) }
func (node *SRollback) Accept(vis SQLAstVisitor) error            { return vis.Visit(node) }
func (node *Savepoint) Accept(vis SQLAstVisitor) error            { return vis.Visit(node) }
func (node *Select) Accept(vis SQLAstVisitor) error               { return vis.Visit(node) }
func (node SelectExprs) Accept(vis SQLAstVisitor) error           { return vis.Visit(node) }
func (node *Set) Accept(vis SQLAstVisitor) error                  { return vis.Visit(node) }
func (node *SetExpr) Accept(vis SQLAstVisitor) error              { return vis.Visit(node) }
func (node SetExprs) Accept(vis SQLAstVisitor) error              { return vis.Visit(node) }
func (node *SetTransaction) Accept(vis SQLAstVisitor) error       { return vis.Visit(node) }
func (node *Show) Accept(vis SQLAstVisitor) error                 { return vis.Visit(node) }
func (node *ShowFilter) Accept(vis SQLAstVisitor) error           { return vis.Visit(node) }
func (node *Sleep) Accept(vis SQLAstVisitor) error                { return vis.Visit(node) }
func (node *StarExpr) Accept(vis SQLAstVisitor) error             { return vis.Visit(node) }
func (node *Stream) Accept(vis SQLAstVisitor) error               { return vis.Visit(node) }
func (node *Subquery) Accept(vis SQLAstVisitor) error             { return vis.Visit(node) }
func (node *SubstrExpr) Accept(vis SQLAstVisitor) error           { return vis.Visit(node) }
func (node TableExprs) Accept(vis SQLAstVisitor) error            { return vis.Visit(node) }
func (node TableIdent) Accept(vis SQLAstVisitor) error            { return vis.Visit(node) }
func (node TableName) Accept(vis SQLAstVisitor) error             { return vis.Visit(node) }
func (node TableNames) Accept(vis SQLAstVisitor) error            { return vis.Visit(node) }
func (node *TableSpec) Accept(vis SQLAstVisitor) error            { return vis.Visit(node) }
func (node *TimestampFuncExpr) Accept(vis SQLAstVisitor) error    { return vis.Visit(node) }
func (node *UnaryExpr) Accept(vis SQLAstVisitor) error            { return vis.Visit(node) }
func (node *Union) Accept(vis SQLAstVisitor) error                { return vis.Visit(node) }
func (node *UnionSelect) Accept(vis SQLAstVisitor) error          { return vis.Visit(node) }
func (node *Update) Accept(vis SQLAstVisitor) error               { return vis.Visit(node) }
func (node *UpdateExpr) Accept(vis SQLAstVisitor) error           { return vis.Visit(node) }
func (node UpdateExprs) Accept(vis SQLAstVisitor) error           { return vis.Visit(node) }
func (node *Use) Accept(vis SQLAstVisitor) error                  { return vis.Visit(node) }
func (node ValTuple) Accept(vis SQLAstVisitor) error              { return vis.Visit(node) }
func (node Values) Accept(vis SQLAstVisitor) error                { return vis.Visit(node) }
func (node *ValuesFuncExpr) Accept(vis SQLAstVisitor) error       { return vis.Visit(node) }
func (node VindexParam) Accept(vis SQLAstVisitor) error           { return vis.Visit(node) }
func (node *VindexSpec) Accept(vis SQLAstVisitor) error           { return vis.Visit(node) }
func (node *When) Accept(vis SQLAstVisitor) error                 { return vis.Visit(node) }
func (node *Where) Accept(vis SQLAstVisitor) error                { return vis.Visit(node) }
func (node *XorExpr) Accept(vis SQLAstVisitor) error              { return vis.Visit(node) }
