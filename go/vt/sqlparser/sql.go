// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "strings"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:55
type yySymType struct {
	yys                  int
	empty                struct{}
	statement            Statement
	selStmt              SelectStatement
	ddl                  *DDL
	ins                  *Insert
	byt                  byte
	bytes                []byte
	bytes2               [][]byte
	str                  string
	strs                 []string
	selectExprs          SelectExprs
	selectExpr           SelectExpr
	columns              Columns
	partitions           Partitions
	colName              *ColName
	tableExprs           TableExprs
	tableExpr            TableExpr
	joinCondition        JoinCondition
	tableName            TableName
	tableNames           TableNames
	indexHints           *IndexHints
	expr                 Expr
	exprs                Exprs
	boolVal              BoolVal
	sqlVal               *SQLVal
	colTuple             ColTuple
	values               Values
	valTuple             ValTuple
	subquery             *Subquery
	execsubquery         *ExecSubquery
	whens                []*When
	when                 *When
	orderBy              OrderBy
	order                *Order
	limit                *Limit
	updateExprs          UpdateExprs
	setExprs             SetExprs
	updateExpr           *UpdateExpr
	setExpr              *SetExpr
	characteristic       Characteristic
	characteristics      []Characteristic
	colIdent             ColIdent
	tableIdent           TableIdent
	convertType          *ConvertType
	aliasedTableName     *AliasedTableExpr
	TableSpec            *TableSpec
	columnType           ColumnType
	colKeyOpt            ColumnKeyOption
	optVal               Expr
	LengthScaleOption    LengthScaleOption
	columnDefinition     *ColumnDefinition
	indexDefinition      *IndexDefinition
	indexInfo            *IndexInfo
	indexOption          *IndexOption
	indexOptions         []*IndexOption
	indexColumn          *IndexColumn
	indexColumns         []*IndexColumn
	constraintDefinition *ConstraintDefinition
	constraintInfo       ConstraintInfo
	ReferenceAction      ReferenceAction
	partDefs             []*PartitionDefinition
	partDef              *PartitionDefinition
	partSpec             *PartitionSpec
	vindexParam          VindexParam
	vindexParams         []VindexParam
	showFilter           *ShowFilter
	optLike              *OptLike
	execVarDef           ExecVarDef
	execVarDefOpt        *ExecVarDef
	execVarDefs          []ExecVarDef
	listArgsConcat       []ListArg
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const AS = 57364
const EXISTS = 57365
const ASC = 57366
const DESC = 57367
const INTO = 57368
const DUPLICATE = 57369
const KEY = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const DISTINCTROW = 57377
const VALUES = 57378
const LAST_INSERT_ID = 57379
const NEXT = 57380
const VALUE = 57381
const SHARE = 57382
const MODE = 57383
const SQL_NO_CACHE = 57384
const SQL_CACHE = 57385
const SQL_CALC_FOUND_ROWS = 57386
const JOIN = 57387
const STRAIGHT_JOIN = 57388
const LEFT = 57389
const RIGHT = 57390
const INNER = 57391
const OUTER = 57392
const CROSS = 57393
const NATURAL = 57394
const USE = 57395
const FORCE = 57396
const ON = 57397
const USING = 57398
const ID = 57399
const AT_ID = 57400
const AT_AT_ID = 57401
const HEX = 57402
const STRING = 57403
const INTEGRAL = 57404
const FLOAT = 57405
const HEXNUM = 57406
const VALUE_ARG = 57407
const LIST_ARG = 57408
const COMMENT = 57409
const COMMENT_KEYWORD = 57410
const BIT_LITERAL = 57411
const NULL = 57412
const TRUE = 57413
const FALSE = 57414
const OFF = 57415
const OR = 57416
const XOR = 57417
const AND = 57418
const NOT = 57419
const BETWEEN = 57420
const CASE = 57421
const WHEN = 57422
const THEN = 57423
const ELSE = 57424
const END = 57425
const LE = 57426
const GE = 57427
const NE = 57428
const NULL_SAFE_EQUAL = 57429
const IS = 57430
const LIKE = 57431
const REGEXP = 57432
const IN = 57433
const SHIFT_LEFT = 57434
const SHIFT_RIGHT = 57435
const DIV = 57436
const MOD = 57437
const UNARY = 57438
const COLLATE = 57439
const BINARY = 57440
const UNDERSCORE_BINARY = 57441
const UNDERSCORE_UTF8MB4 = 57442
const UNDERSCORE_UTF8 = 57443
const UNDERSCORE_LATIN1 = 57444
const INTERVAL = 57445
const JSON_EXTRACT_OP = 57446
const JSON_UNQUOTE_EXTRACT_OP = 57447
const CREATE = 57448
const ALTER = 57449
const DROP = 57450
const RENAME = 57451
const ANALYZE = 57452
const ADD = 57453
const FLUSH = 57454
const SCHEMA = 57455
const TABLE = 57456
const INDEX = 57457
const VIEW = 57458
const TO = 57459
const IGNORE = 57460
const IF = 57461
const UNIQUE = 57462
const PRIMARY = 57463
const COLUMN = 57464
const SPATIAL = 57465
const FULLTEXT = 57466
const KEY_BLOCK_SIZE = 57467
const CHECK = 57468
const INDEXES = 57469
const ACTION = 57470
const CASCADE = 57471
const CONSTRAINT = 57472
const FOREIGN = 57473
const NO = 57474
const REFERENCES = 57475
const RESTRICT = 57476
const SHOW = 57477
const DESCRIBE = 57478
const EXPLAIN = 57479
const DATE = 57480
const ESCAPE = 57481
const REPAIR = 57482
const OPTIMIZE = 57483
const TRUNCATE = 57484
const MAXVALUE = 57485
const PARTITION = 57486
const REORGANIZE = 57487
const LESS = 57488
const THAN = 57489
const PROCEDURE = 57490
const TRIGGER = 57491
const VINDEX = 57492
const VINDEXES = 57493
const STATUS = 57494
const VARIABLES = 57495
const WARNINGS = 57496
const SEQUENCE = 57497
const BEGIN = 57498
const START = 57499
const TRANSACTION = 57500
const COMMIT = 57501
const ROLLBACK = 57502
const SAVEPOINT = 57503
const RELEASE = 57504
const WORK = 57505
const BIT = 57506
const TINYINT = 57507
const SMALLINT = 57508
const MEDIUMINT = 57509
const INT = 57510
const INTEGER = 57511
const BIGINT = 57512
const INTNUM = 57513
const REAL = 57514
const DOUBLE = 57515
const FLOAT_TYPE = 57516
const DECIMAL = 57517
const NUMERIC = 57518
const TIME = 57519
const TIMESTAMP = 57520
const DATETIME = 57521
const YEAR = 57522
const CHAR = 57523
const VARCHAR = 57524
const BOOL = 57525
const CHARACTER = 57526
const VARBINARY = 57527
const NCHAR = 57528
const TEXT = 57529
const TINYTEXT = 57530
const MEDIUMTEXT = 57531
const LONGTEXT = 57532
const BLOB = 57533
const TINYBLOB = 57534
const MEDIUMBLOB = 57535
const LONGBLOB = 57536
const JSON = 57537
const ENUM = 57538
const GEOMETRY = 57539
const POINT = 57540
const LINESTRING = 57541
const POLYGON = 57542
const GEOMETRYCOLLECTION = 57543
const MULTIPOINT = 57544
const MULTILINESTRING = 57545
const MULTIPOLYGON = 57546
const NULLX = 57547
const AUTO_INCREMENT = 57548
const APPROXNUM = 57549
const SIGNED = 57550
const UNSIGNED = 57551
const ZEROFILL = 57552
const COLLATION = 57553
const DATABASES = 57554
const TABLES = 57555
const VITESS_METADATA = 57556
const VSCHEMA = 57557
const FULL = 57558
const PROCESSLIST = 57559
const COLUMNS = 57560
const FIELDS = 57561
const ENGINES = 57562
const PLUGINS = 57563
const EXTENDED = 57564
const NAMES = 57565
const CHARSET = 57566
const GLOBAL = 57567
const SESSION = 57568
const ISOLATION = 57569
const LEVEL = 57570
const READ = 57571
const WRITE = 57572
const ONLY = 57573
const REPEATABLE = 57574
const COMMITTED = 57575
const UNCOMMITTED = 57576
const SERIALIZABLE = 57577
const CURRENT_TIMESTAMP = 57578
const DATABASE = 57579
const CURRENT_DATE = 57580
const CURRENT_TIME = 57581
const LOCALTIME = 57582
const LOCALTIMESTAMP = 57583
const UTC_DATE = 57584
const UTC_TIME = 57585
const UTC_TIMESTAMP = 57586
const REPLACE = 57587
const CONVERT = 57588
const CAST = 57589
const SUBSTR = 57590
const SUBSTRING = 57591
const GROUP_CONCAT = 57592
const SEPARATOR = 57593
const TIMESTAMPADD = 57594
const TIMESTAMPDIFF = 57595
const MATCH = 57596
const AGAINST = 57597
const BOOLEAN = 57598
const LANGUAGE = 57599
const WITH = 57600
const QUERY = 57601
const EXPANSION = 57602
const UNUSED = 57603
const ARRAY = 57604
const CUME_DIST = 57605
const DESCRIPTION = 57606
const DENSE_RANK = 57607
const EMPTY = 57608
const EXCEPT = 57609
const FIRST_VALUE = 57610
const GROUPING = 57611
const GROUPS = 57612
const JSON_TABLE = 57613
const LAG = 57614
const LAST_VALUE = 57615
const LATERAL = 57616
const LEAD = 57617
const MEMBER = 57618
const NTH_VALUE = 57619
const NTILE = 57620
const OF = 57621
const OVER = 57622
const PERCENT_RANK = 57623
const RANK = 57624
const RECURSIVE = 57625
const ROW_NUMBER = 57626
const SYSTEM = 57627
const WINDOW = 57628
const ACTIVE = 57629
const ADMIN = 57630
const BUCKETS = 57631
const CLONE = 57632
const COMPONENT = 57633
const DEFINITION = 57634
const ENFORCED = 57635
const EXCLUDE = 57636
const FOLLOWING = 57637
const GEOMCOLLECTION = 57638
const GET_MASTER_PUBLIC_KEY = 57639
const HISTOGRAM = 57640
const HISTORY = 57641
const INACTIVE = 57642
const INVISIBLE = 57643
const LOCKED = 57644
const MASTER_COMPRESSION_ALGORITHMS = 57645
const MASTER_PUBLIC_KEY_PATH = 57646
const MASTER_TLS_CIPHERSUITES = 57647
const MASTER_ZSTD_COMPRESSION_LEVEL = 57648
const NESTED = 57649
const NETWORK_NAMESPACE = 57650
const NOWAIT = 57651
const NULLS = 57652
const OJ = 57653
const OLD = 57654
const OPTIONAL = 57655
const ORDINALITY = 57656
const ORGANIZATION = 57657
const OTHERS = 57658
const PATH = 57659
const PERSIST = 57660
const PERSIST_ONLY = 57661
const PRECEDING = 57662
const PRIVILEGE_CHECKS_USER = 57663
const PROCESS = 57664
const RANDOM = 57665
const REFERENCE = 57666
const REQUIRE_ROW_FORMAT = 57667
const RESOURCE = 57668
const RESPECT = 57669
const RESTART = 57670
const RETAIN = 57671
const REUSE = 57672
const ROLE = 57673
const SECONDARY = 57674
const SECONDARY_ENGINE = 57675
const SECONDARY_LOAD = 57676
const SECONDARY_UNLOAD = 57677
const SKIP = 57678
const SRID = 57679
const THREAD_PRIORITY = 57680
const TIES = 57681
const UNBOUNDED = 57682
const VCPU = 57683
const VISIBLE = 57684
const FORMAT = 57685
const TREE = 57686
const VITESS = 57687
const TRADITIONAL = 57688
const AUTH = 57689
const INTERACTIVE = 57690
const LOGIN = 57691
const REVOKE = 57692
const SA = 57693
const SERVICEACCOUNT = 57694
const SLEEP = 57695
const MATERIALIZED = 57696
const TEMP = 57697
const TEMPORARY = 57698
const JSON_ARRAY_ELEMENTS_TEXT = 57699
const JSON_EACH = 57700
const UNNEST = 57701
const REGISTRY = 57702
const PULL = 57703
const LIST = 57704
const EXEC = 57705
const PURGE = 57706
const NATIVEQUERY = 57707
const STACKQL = 57708

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"AUTH",
	"INTERACTIVE",
	"LOGIN",
	"REVOKE",
	"SA",
	"SERVICEACCOUNT",
	"SLEEP",
	"MATERIALIZED",
	"TEMP",
	"TEMPORARY",
	"JSON_ARRAY_ELEMENTS_TEXT",
	"JSON_EACH",
	"UNNEST",
	"REGISTRY",
	"PULL",
	"LIST",
	"EXEC",
	"PURGE",
	"NATIVEQUERY",
	"STACKQL",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	364, 94,
	377, 94,
	-2, 34,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 48,
	169, 353,
	170, 353,
	230, 341,
	234, 341,
	235, 341,
	236, 341,
	-2, 339,
	-1, 53,
	134, 363,
	-2, 361,
	-1, 56,
	6, 369,
	8, 369,
	9, 369,
	10, 369,
	57, 369,
	262, 369,
	-2, 341,
	-1, 82,
	38, 399,
	-2, 407,
	-1, 103,
	133, 84,
	-2, 959,
	-1, 104,
	132, 1037,
	-2, 82,
	-1, 105,
	132, 1038,
	-2, 83,
	-1, 360,
	80, 908,
	82, 908,
	88, 908,
	89, 908,
	90, 908,
	91, 908,
	92, 908,
	93, 908,
	94, 908,
	96, 908,
	97, 908,
	98, 908,
	99, 908,
	100, 908,
	101, 908,
	102, 908,
	103, 908,
	104, 908,
	105, 908,
	106, 908,
	107, 908,
	108, 908,
	109, 908,
	110, 908,
	113, 908,
	120, 908,
	121, 908,
	122, 908,
	-2, 501,
	-1, 420,
	120, 748,
	-2, 744,
	-1, 421,
	120, 749,
	-2, 745,
	-1, 441,
	38, 400,
	-2, 412,
	-1, 442,
	38, 401,
	-2, 413,
	-1, 465,
	88, 1025,
	-2, 80,
	-1, 466,
	88, 929,
	-2, 81,
	-1, 471,
	88, 896,
	134, 896,
	-2, 710,
	-1, 473,
	88, 967,
	134, 967,
	-2, 712,
	-1, 789,
	1, 421,
	5, 421,
	11, 421,
	12, 421,
	13, 421,
	14, 421,
	15, 421,
	17, 421,
	19, 421,
	31, 421,
	55, 421,
	58, 421,
	59, 421,
	268, 421,
	384, 421,
	-2, 498,
	-1, 810,
	57, 574,
	-2, 941,
	-1, 811,
	57, 575,
	-2, 942,
	-1, 812,
	56, 62,
	58, 62,
	-2, 66,
	-1, 1000,
	120, 751,
	-2, 747,
	-1, 1476,
	5, 666,
	17, 666,
	19, 666,
	31, 666,
	59, 666,
	-2, 442,
}

const yyPrivate = 57344

const yyLast = 19516

var yyAct = [...]int{
	420, 1727, 1717, 1518, 1684, 1395, 364, 1529, 1297, 1597,
	1633, 1120, 1319, 1456, 434, 379, 1490, 1149, 1088, 1298,
	1116, 470, 1285, 1457, 393, 1453, 1119, 81, 3, 1129,
	638, 727, 362, 1462, 1163, 1468, 916, 350, 1058, 780,
	627, 773, 1040, 106, 987, 1418, 659, 311, 1224, 1361,
	311, 938, 1372, 1133, 825, 106, 808, 1089, 1073, 778,
	1020, 800, 443, 994, 1084, 33, 801, 783, 428, 964,
	366, 1159, 824, 79, 796, 594, 1066, 459, 464, 77,
	791, 929, 456, 601, 96, 814, 76, 678, 311, 106,
	82, 740, 595, 311, 355, 311, 351, 765, 766, 354,
	889, 949, 636, 309, 349, 422, 324, 741, 1263, 7,
	616, 1265, 1264, 35, 36, 69, 38, 39, 423, 467,
	763, 764, 6, 5, 1720, 1704, 1715, 84, 85, 86,
	87, 88, 73, 1692, 1712, 1519, 1703, 40, 59, 60,
	1691, 62, 1435, 429, 458, 1552, 599, 1333, 1484, 596,
	1332, 598, 449, 1334, 826, 424, 827, 426, 427, 1107,
	49, 1485, 1486, 945, 68, 1659, 688, 687, 697, 698,
	690, 691, 692, 693, 694, 695, 696, 689, 1108, 1109,
	699, 661, 603, 604, 336, 353, 405, 658, 411, 412,
	409, 410, 408, 407, 406, 1143, 307, 303, 304, 305,
	352, 1186, 413, 414, 1142, 35, 1352, 69, 38, 39,
	339, 1397, 653, 1586, 1150, 1185, 654, 651, 652, 299,
	1543, 1541, 297, 343, 301, 947, 108, 109, 110, 345,
	42, 43, 45, 44, 47, 341, 61, 905, 646, 647,
	656, 904, 1399, 902, 1714, 1711, 108, 109, 110, 657,
	950, 951, 952, 1685, 1394, 1067, 68, 1184, 1678, 48,
	72, 71, 1731, 1134, 57, 58, 46, 1398, 1735, 602,
	1641, 617, 997, 301, 1634, 1320, 1322, 903, 906, 318,
	50, 51, 828, 52, 53, 54, 55, 1400, 321, 1636,
	909, 662, 1170, 600, 1479, 1136, 328, 1117, 311, 608,
	609, 1391, 1478, 311, 1477, 618, 597, 1393, 606, 311,
	1181, 1178, 1179, 605, 1177, 108, 109, 110, 311, 625,
	306, 300, 631, 106, 317, 640, 302, 106, 829, 106,
	326, 1198, 711, 712, 1197, 660, 333, 348, 891, 1666,
	335, 1567, 1660, 298, 1526, 1329, 106, 1188, 1191, 1290,
	1253, 1232, 699, 1203, 607, 820, 795, 1321, 725, 615,
	1635, 1690, 1243, 623, 1103, 622, 319, 1150, 1046, 70,
	108, 109, 110, 689, 624, 666, 699, 943, 1729, 1642,
	1640, 1730, 1676, 1728, 1240, 1650, 633, 1183, 635, 91,
	671, 672, 939, 330, 322, 1466, 331, 332, 339, 1135,
	859, 1445, 323, 325, 336, 930, 320, 338, 337, 1182,
	1273, 1392, 613, 1390, 670, 1437, 619, 620, 621, 894,
	632, 634, 641, 629, 1503, 311, 1021, 311, 92, 645,
	1680, 648, 709, 1136, 688, 687, 697, 698, 690, 691,
	692, 693, 694, 695, 696, 689, 787, 643, 699, 1187,
	1350, 962, 106, 664, 311, 311, 311, 669, 771, 1697,
	728, 70, 296, 106, 1189, 108, 109, 110, 770, 106,
	667, 668, 711, 712, 108, 109, 110, 65, 1695, 940,
	610, 767, 611, 768, 847, 612, 1592, 64, 66, 67,
	74, 1225, 931, 467, 711, 712, 1736, 679, 743, 745,
	747, 749, 751, 753, 754, 1591, 784, 628, 1365, 630,
	798, 1238, 812, 1237, 744, 746, 679, 750, 752, 799,
	755, 679, 772, 677, 679, 860, 674, 1364, 1353, 334,
	676, 674, 675, 676, 674, 425, 1677, 1135, 813, 789,
	1737, 823, 677, 818, 1613, 1589, 642, 677, 453, 454,
	677, 873, 876, 877, 878, 879, 880, 881, 644, 882,
	883, 884, 885, 886, 861, 862, 863, 864, 845, 846,
	874, 1419, 848, 1556, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 865, 866, 867, 868, 869, 870,
	871, 872, 930, 629, 311, 1021, 1139, 1250, 887, 68,
	1443, 311, 893, 1140, 895, 311, 1042, 311, 106, 106,
	106, 967, 1421, 971, 311, 1362, 1211, 311, 921, 769,
	311, 914, 915, 438, 311, 1647, 106, 969, 970, 968,
	679, 106, 106, 106, 311, 106, 106, 1268, 675, 676,
	674, 1272, 1646, 875, 1499, 918, 1439, 106, 106, 1423,
	837, 1427, 1137, 1422, 78, 1420, 677, 892, 1603, 1713,
	1425, 896, 1097, 898, 815, 311, 1048, 920, 1465, 1424,
	907, 1136, 1563, 458, 1699, 438, 913, 628, 1286, 931,
	673, 933, 1426, 1428, 890, 1217, 1218, 1219, 1649, 897,
	926, 690, 691, 692, 693, 694, 695, 696, 689, 910,
	988, 699, 1507, 108, 109, 110, 1047, 965, 438, 990,
	899, 900, 901, 782, 108, 109, 110, 679, 108, 109,
	110, 948, 932, 106, 1070, 675, 676, 674, 919, 958,
	960, 961, 934, 923, 924, 925, 959, 927, 928, 1454,
	1009, 1012, 1465, 677, 991, 992, 1022, 1000, 1070, 935,
	936, 1603, 1688, 966, 593, 1337, 998, 106, 106, 1051,
	1052, 1106, 999, 1256, 660, 660, 1036, 1037, 1004, 692,
	693, 694, 695, 696, 689, 1135, 728, 699, 1603, 438,
	1132, 1130, 106, 1131, 1060, 1043, 1603, 1668, 816, 311,
	1128, 1134, 679, 106, 1255, 1053, 1603, 1638, 311, 816,
	675, 676, 674, 1059, 679, 80, 1001, 311, 311, 311,
	1034, 1035, 675, 676, 674, 311, 311, 1000, 677, 311,
	311, 311, 106, 1030, 1031, 815, 998, 1093, 1049, 1239,
	677, 1465, 1065, 817, 1086, 819, 106, 595, 908, 108,
	109, 110, 918, 989, 817, 1062, 815, 1061, 1059, 108,
	109, 110, 467, 1336, 1068, 697, 698, 690, 691, 692,
	693, 694, 695, 696, 689, 1069, 1121, 699, 1151, 1152,
	1153, 821, 1099, 1063, 1603, 1602, 679, 1582, 1581, 1098,
	1569, 438, 68, 1100, 675, 676, 674, 1566, 438, 1096,
	311, 1509, 1508, 1070, 106, 1105, 106, 1101, 311, 1190,
	1104, 1060, 677, 311, 311, 311, 311, 311, 1705, 311,
	311, 1599, 1124, 311, 106, 1396, 1168, 1144, 108, 109,
	110, 1165, 1267, 1505, 1506, 421, 35, 108, 109, 110,
	311, 1038, 431, 311, 35, 311, 1505, 1504, 311, 1574,
	311, 311, 1059, 438, 35, 311, 1169, 106, 1059, 106,
	1070, 438, 673, 438, 1175, 1161, 1162, 1164, 1292, 1192,
	1193, 1194, 1195, 1196, 1293, 1199, 1200, 1495, 107, 1201,
	836, 835, 312, 1406, 1620, 312, 1340, 68, 1160, 1208,
	107, 1155, 1154, 68, 1722, 68, 1204, 1469, 1470, 1205,
	1600, 798, 1167, 965, 1207, 68, 1172, 329, 1174, 1718,
	1497, 1212, 1005, 1006, 1472, 1454, 1011, 1014, 1015, 1206,
	1366, 944, 912, 312, 107, 1475, 1202, 1309, 312, 1234,
	312, 1474, 1310, 382, 381, 384, 385, 386, 387, 1306,
	1305, 1029, 383, 388, 1032, 1033, 1709, 1266, 1220, 966,
	1702, 1145, 1146, 1147, 1148, 1075, 1078, 1079, 1080, 1076,
	1447, 1077, 1081, 1275, 346, 1469, 1470, 1156, 1157, 1158,
	781, 311, 1075, 1078, 1079, 1080, 1076, 429, 1077, 1081,
	1233, 311, 311, 311, 311, 311, 1299, 1307, 444, 1707,
	1249, 1284, 1308, 311, 1311, 1274, 1079, 1080, 311, 1283,
	1017, 311, 445, 774, 1294, 1279, 1357, 834, 311, 785,
	786, 447, 626, 446, 1018, 775, 1349, 1682, 1681, 1278,
	1618, 1347, 1342, 1561, 1595, 1317, 1173, 911, 1335, 1325,
	106, 1327, 444, 1328, 1289, 1288, 1512, 1287, 1368, 1341,
	1171, 1338, 1300, 660, 660, 1303, 445, 1083, 1301, 1302,
	1312, 1304, 888, 441, 442, 447, 1282, 446, 1318, 435,
	1121, 432, 433, 1560, 1281, 436, 80, 1559, 1450, 1324,
	1286, 1330, 1326, 1354, 1355, 655, 1724, 1723, 106, 1244,
	1356, 311, 1358, 1359, 1360, 1241, 937, 788, 1724, 1345,
	1346, 1664, 1587, 1045, 431, 1343, 1344, 78, 1085, 29,
	83, 75, 1, 1039, 1269, 1270, 1716, 1025, 1271, 1370,
	1041, 1520, 106, 1596, 311, 1363, 1180, 1683, 1632, 1489,
	1127, 1118, 90, 592, 1371, 89, 1675, 639, 1126, 1125,
	1639, 1585, 1138, 312, 1351, 918, 1141, 1369, 312, 1496,
	1348, 1387, 1679, 106, 312, 842, 840, 841, 839, 988,
	1402, 844, 843, 312, 838, 327, 1404, 462, 107, 946,
	342, 1082, 107, 830, 107, 1166, 1403, 790, 93, 1407,
	1389, 1388, 1176, 1415, 942, 649, 650, 707, 1229, 1230,
	1408, 107, 1280, 1416, 100, 1000, 1417, 1331, 468, 437,
	461, 311, 1405, 1429, 1440, 1430, 1460, 1436, 1050, 1247,
	999, 106, 777, 1558, 1449, 1414, 106, 106, 1248, 1299,
	737, 1455, 1019, 805, 1401, 365, 1446, 957, 807, 380,
	377, 1444, 378, 1054, 1291, 681, 363, 357, 1458, 804,
	1074, 1415, 1072, 1071, 106, 457, 1471, 1467, 803, 802,
	440, 809, 1262, 1551, 1658, 439, 1464, 1448, 106, 1473,
	106, 106, 1016, 56, 660, 660, 1214, 347, 37, 1483,
	312, 1488, 312, 448, 63, 32, 31, 1480, 1502, 28,
	30, 27, 22, 21, 1487, 1482, 20, 311, 1121, 19,
	1121, 1492, 18, 24, 17, 1500, 1501, 107, 16, 312,
	312, 312, 15, 614, 41, 26, 25, 14, 107, 311,
	1493, 1494, 13, 12, 107, 106, 1511, 1521, 106, 106,
	106, 311, 11, 10, 9, 8, 4, 106, 665, 23,
	1513, 726, 2, 0, 0, 0, 0, 0, 0, 438,
	359, 0, 0, 1510, 0, 1514, 0, 1516, 0, 0,
	0, 1534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1527, 1515, 1528, 0, 1531, 0,
	0, 0, 0, 0, 0, 0, 0, 1525, 1539, 688,
	687, 697, 698, 690, 691, 692, 693, 694, 695, 696,
	689, 0, 1299, 699, 0, 0, 0, 0, 1557, 0,
	0, 1562, 0, 0, 0, 1571, 0, 1570, 106, 0,
	0, 0, 0, 0, 0, 0, 106, 1580, 0, 1338,
	0, 0, 0, 1584, 0, 0, 0, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 0, 0, 1121, 312,
	106, 0, 1588, 0, 1590, 0, 312, 311, 0, 0,
	312, 0, 312, 107, 107, 107, 0, 0, 1606, 312,
	1594, 0, 312, 0, 0, 312, 394, 34, 918, 312,
	1598, 107, 0, 0, 0, 1605, 107, 107, 107, 312,
	107, 107, 0, 1601, 0, 0, 1612, 106, 106, 0,
	106, 0, 107, 107, 0, 106, 1604, 106, 106, 106,
	311, 34, 1626, 106, 1627, 1629, 1630, 1619, 1458, 0,
	312, 0, 1617, 1621, 0, 0, 0, 0, 1631, 1637,
	106, 311, 0, 1643, 106, 0, 0, 1651, 0, 1644,
	1625, 1645, 0, 1593, 0, 1536, 1537, 0, 1538, 0,
	0, 1540, 0, 1542, 430, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1665, 1674, 0, 0, 0, 0,
	1667, 0, 0, 1673, 1672, 1458, 0, 0, 107, 0,
	106, 106, 0, 0, 0, 0, 0, 1652, 0, 1686,
	0, 0, 1687, 0, 0, 1382, 0, 106, 0, 0,
	0, 1299, 0, 1693, 0, 0, 0, 0, 0, 311,
	1598, 1121, 107, 107, 0, 0, 106, 1583, 0, 0,
	0, 0, 0, 0, 1701, 0, 0, 1378, 1379, 1380,
	0, 0, 0, 0, 1706, 1708, 106, 107, 1555, 0,
	0, 0, 0, 1710, 312, 0, 0, 0, 107, 1721,
	0, 0, 0, 312, 0, 0, 1732, 0, 0, 0,
	0, 0, 312, 312, 312, 1696, 0, 0, 0, 0,
	312, 312, 0, 0, 312, 312, 312, 107, 0, 688,
	687, 697, 698, 690, 691, 692, 693, 694, 695, 696,
	689, 107, 1554, 699, 0, 0, 0, 0, 0, 1381,
	0, 0, 0, 0, 1386, 1383, 1374, 1384, 1377, 0,
	1373, 0, 0, 0, 1375, 1376, 0, 0, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 1385, 1549,
	0, 0, 0, 688, 687, 697, 698, 690, 691, 692,
	693, 694, 695, 696, 689, 312, 0, 699, 0, 107,
	1409, 107, 0, 312, 0, 0, 0, 0, 312, 312,
	312, 312, 312, 0, 312, 312, 0, 0, 312, 107,
	688, 687, 697, 698, 690, 691, 692, 693, 694, 695,
	696, 689, 0, 0, 699, 312, 0, 0, 312, 0,
	312, 0, 0, 312, 0, 312, 312, 0, 0, 637,
	312, 0, 107, 637, 107, 637, 0, 0, 0, 688,
	687, 697, 698, 690, 691, 692, 693, 694, 695, 696,
	689, 0, 1226, 699, 34, 688, 687, 697, 698, 690,
	691, 692, 693, 694, 695, 696, 689, 708, 710, 699,
	0, 0, 688, 687, 697, 698, 690, 691, 692, 693,
	694, 695, 696, 689, 1002, 1003, 699, 0, 0, 0,
	391, 0, 0, 0, 0, 0, 0, 0, 724, 0,
	0, 0, 729, 730, 731, 732, 733, 734, 735, 736,
	0, 739, 742, 742, 742, 748, 742, 742, 748, 742,
	756, 757, 758, 759, 760, 761, 762, 0, 0, 1044,
	0, 0, 0, 102, 0, 0, 0, 34, 0, 0,
	0, 0, 0, 0, 1548, 344, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 312, 312, 312,
	312, 806, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 312, 0, 0, 312, 0, 0, 469,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 0,
	683, 0, 686, 0, 0, 0, 0, 0, 700, 701,
	702, 703, 704, 705, 706, 107, 684, 685, 682, 688,
	687, 697, 698, 690, 691, 692, 693, 694, 695, 696,
	689, 0, 0, 699, 688, 687, 697, 698, 690, 691,
	692, 693, 694, 695, 696, 689, 0, 0, 699, 687,
	697, 698, 690, 691, 692, 693, 694, 695, 696, 689,
	0, 0, 699, 107, 0, 0, 312, 0, 0, 0,
	0, 0, 963, 0, 0, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	0, 0, 0, 0, 0, 0, 0, 107, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1547, 0, 637, 637, 637, 0, 107, 0,
	0, 0, 0, 1026, 0, 0, 0, 0, 0, 0,
	0, 0, 637, 0, 0, 0, 0, 637, 637, 637,
	0, 637, 637, 0, 0, 0, 0, 0, 1227, 0,
	0, 0, 1228, 637, 637, 0, 0, 0, 0, 0,
	0, 0, 0, 1235, 1236, 0, 312, 0, 0, 1242,
	0, 0, 1245, 1246, 1546, 0, 107, 0, 0, 0,
	1252, 107, 107, 0, 1254, 0, 0, 1257, 1258, 1259,
	1260, 1261, 688, 687, 697, 698, 690, 691, 692, 693,
	694, 695, 696, 689, 0, 0, 699, 0, 0, 107,
	0, 0, 0, 469, 0, 0, 0, 469, 0, 469,
	0, 0, 0, 107, 0, 107, 107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 663, 0, 0, 0,
	0, 0, 1314, 1315, 1316, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 688, 687, 697, 698, 690, 691,
	692, 693, 694, 695, 696, 689, 0, 0, 699, 0,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	107, 451, 0, 107, 107, 107, 312, 0, 0, 0,
	0, 0, 107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1087, 0, 0, 1095, 0, 0, 0,
	0, 806, 0, 0, 0, 806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 793, 0, 356, 0, 0, 0, 0, 0,
	1221, 1222, 1223, 469, 0, 0, 0, 0, 0, 831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 107, 0, 0, 0, 0, 0, 0,
	0, 107, 0, 0, 0, 0, 0, 1412, 1413, 0,
	0, 0, 0, 0, 0, 34, 107, 0, 0, 0,
	637, 0, 637, 0, 0, 107, 0, 0, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 107, 107, 0, 107, 0, 0, 0, 0,
	107, 0, 107, 107, 107, 312, 0, 0, 107, 0,
	0, 0, 0, 0, 0, 1476, 0, 0, 0, 0,
	0, 0, 1481, 0, 0, 107, 312, 0, 0, 107,
	0, 0, 0, 0, 0, 0, 0, 0, 469, 469,
	469, 0, 0, 0, 0, 1231, 0, 0, 430, 0,
	0, 0, 0, 0, 0, 0, 469, 0, 0, 0,
	0, 469, 469, 469, 0, 469, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 107, 107, 469, 469, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	0, 0, 107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 0, 806, 0, 0,
	0, 107, 1533, 1295, 1296, 0, 1535, 806, 806, 806,
	806, 806, 0, 0, 0, 0, 0, 1544, 1545, 0,
	0, 107, 0, 310, 1087, 0, 340, 0, 0, 0,
	0, 1323, 0, 0, 806, 0, 1410, 1411, 0, 0,
	0, 0, 0, 993, 0, 0, 469, 1564, 1565, 0,
	1568, 1431, 1432, 0, 1433, 1434, 0, 0, 0, 0,
	1023, 452, 0, 0, 460, 0, 1441, 1442, 1579, 310,
	680, 310, 0, 0, 0, 0, 0, 1027, 1028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1055, 0, 0, 0, 356, 0, 34, 0,
	0, 0, 0, 793, 0, 738, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 469, 0, 0, 0, 0, 776, 779, 0,
	0, 0, 0, 0, 0, 0, 469, 0, 0, 0,
	1498, 0, 0, 0, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1654, 1655, 1656, 1657, 0,
	1661, 0, 1662, 1663, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 469, 1669, 469, 1670, 1671, 0,
	1532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1459, 0, 34, 0, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1689, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1213, 0, 1215,
	0, 1698, 0, 0, 310, 0, 0, 0, 0, 310,
	0, 0, 0, 0, 0, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 34, 0, 0, 0, 0,
	0, 0, 0, 1733, 1734, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 922, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1607, 1608, 1609,
	1610, 1611, 0, 0, 0, 1614, 1615, 941, 0, 0,
	0, 0, 1550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 953, 954, 955, 956, 0,
	1023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1576, 1577, 1578, 452, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 310, 310, 0, 0, 0, 0, 0, 0, 0,
	469, 0, 0, 1007, 1008, 0, 0, 637, 0, 34,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1459, 0, 34, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 469, 0, 0, 0, 0, 0, 0, 0,
	1725, 0, 1648, 0, 0, 0, 0, 0, 0, 0,
	1112, 1115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 1459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 0, 0, 0, 469, 0, 0, 310, 0, 0,
	0, 310, 0, 310, 0, 0, 0, 0, 0, 0,
	310, 0, 0, 310, 0, 0, 310, 0, 0, 0,
	917, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 469, 0, 1023, 0, 0, 1461, 1463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 1463, 0, 0, 0, 0, 0,
	0, 1719, 0, 0, 0, 0, 0, 0, 469, 0,
	469, 1491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 452, 917, 0, 0, 0, 452, 452, 0, 0,
	452, 452, 452, 0, 0, 1517, 1024, 0, 1522, 1523,
	1524, 0, 0, 0, 0, 0, 0, 1530, 0, 0,
	0, 0, 0, 1251, 0, 452, 452, 452, 452, 452,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1276,
	1277, 779, 0, 0, 0, 310, 0, 0, 0, 0,
	0, 0, 917, 0, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 1091, 1091, 1023, 0, 0, 0,
	0, 310, 310, 0, 0, 310, 1102, 917, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 469, 0,
	0, 0, 0, 0, 0, 0, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 0, 0, 0, 0,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 310,
	310, 310, 310, 310, 0, 310, 310, 1622, 1623, 310,
	1624, 0, 0, 0, 0, 1530, 0, 1530, 1530, 1530,
	0, 0, 0, 1491, 0, 0, 310, 0, 0, 310,
	0, 310, 0, 0, 310, 0, 1209, 1210, 0, 0,
	1530, 310, 0, 0, 1653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1438, 0, 0, 0, 0, 0, 0, 0,
	469, 469, 452, 452, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1023, 0, 1694, 0, 0,
	0, 0, 0, 452, 0, 0, 0, 0, 1451, 0,
	0, 0, 0, 0, 0, 0, 1700, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 452, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 1024, 310, 310, 310,
	310, 310, 0, 0, 0, 0, 0, 0, 0, 1313,
	0, 0, 0, 0, 310, 0, 0, 1091, 0, 0,
	0, 0, 452, 0, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 0,
	0, 1553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 1572, 0,
	917, 1573, 0, 0, 1575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 452, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	917, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1024,
	0, 1616, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1024, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 917, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 578,
	566, 0, 524, 581, 496, 514, 589, 515, 518, 554,
	482, 536, 205, 512, 0, 500, 477, 508, 478, 498,
	526, 142, 173, 138, 568, 539, 580, 175, 0, 501,
	587, 177, 545, 0, 256, 192, 0, 0, 0, 528,
	570, 534, 563, 523, 555, 487, 544, 582, 513, 552,
	583, 0, 0, 0, 108, 109, 110, 0, 1122, 1123,
	0, 1024, 0, 0, 0, 131, 0, 549, 577, 510,
	551, 553, 591, 476, 546, 310, 480, 483, 588, 573,
	504, 505, 1339, 0, 0, 0, 0, 0, 0, 527,
	535, 560, 521, 0, 0, 0, 0, 0, 0, 0,
	0, 502, 0, 543, 0, 0, 0, 484, 481, 0,
	0, 0, 0, 525, 0, 0, 0, 486, 0, 503,
	561, 0, 474, 151, 565, 572, 522, 316, 576, 520,
	519, 579, 224, 0, 261, 154, 174, 127, 168, 112,
	123, 0, 153, 202, 233, 237, 569, 499, 509, 135,
	506, 235, 212, 277, 542, 214, 234, 178, 267, 225,
	276, 286, 287, 264, 284, 291, 252, 116, 263, 275,
	132, 246, 0, 0, 0, 118, 273, 259, 190, 164,
	165, 117, 0, 231, 141, 149, 137, 204, 270, 271,
	136, 294, 124, 283, 120, 125, 282, 198, 266, 274,
	191, 183, 119, 272, 189, 182, 170, 145, 156, 222,
	180, 223, 157, 194, 193, 195, 0, 479, 0, 257,
	280, 295, 129, 495, 265, 289, 290, 0, 226, 130,
	150, 144, 221, 148, 196, 126, 159, 254, 169, 179,
	230, 293, 211, 236, 133, 279, 255, 491, 494, 489,
	490, 537, 538, 584, 585, 586, 562, 485, 0, 492,
	493, 0, 567, 574, 575, 541, 111, 121, 176, 292,
	228, 147, 281, 475, 488, 140, 497, 0, 0, 511,
	516, 517, 529, 530, 531, 532, 533, 540, 547, 548,
	550, 556, 557, 558, 559, 564, 571, 590, 113, 114,
	122, 128, 134, 139, 143, 146, 152, 155, 158, 160,
	161, 162, 167, 181, 185, 186, 187, 188, 199, 200,
	201, 203, 206, 207, 208, 209, 210, 213, 215, 216,
	217, 218, 219, 220, 229, 232, 238, 239, 240, 241,
	242, 243, 245, 248, 249, 250, 251, 258, 262, 268,
	269, 278, 285, 288, 0, 0, 0, 0, 115, 166,
	184, 244, 247, 253, 260, 313, 314, 315, 171, 172,
	0, 0, 0, 0, 507, 227, 197, 163, 578, 566,
	0, 524, 581, 496, 514, 589, 515, 518, 554, 482,
	536, 205, 512, 0, 500, 477, 508, 478, 498, 526,
	142, 173, 138, 568, 539, 580, 175, 0, 501, 587,
	177, 545, 0, 256, 192, 0, 0, 0, 528, 570,
	534, 563, 523, 555, 487, 544, 582, 513, 552, 583,
	0, 0, 0, 108, 109, 110, 0, 1122, 1123, 0,
	0, 0, 0, 0, 131, 0, 549, 577, 510, 551,
	553, 591, 476, 546, 0, 480, 483, 588, 573, 504,
	505, 0, 0, 0, 0, 0, 0, 0, 527, 535,
	560, 521, 0, 0, 0, 0, 0, 0, 0, 0,
	502, 0, 543, 0, 0, 0, 484, 481, 0, 0,
	0, 0, 525, 0, 0, 0, 486, 0, 503, 561,
	0, 474, 151, 565, 572, 522, 316, 576, 520, 519,
	579, 224, 0, 261, 154, 174, 127, 168, 112, 123,
	0, 153, 202, 233, 237, 569, 499, 509, 135, 506,
	235, 212, 277, 542, 214, 234, 178, 267, 225, 276,
	286, 287, 264, 284, 291, 252, 116, 263, 275, 132,
	246, 0, 0, 0, 118, 273, 259, 190, 164, 165,
	117, 0, 231, 141, 149, 137, 204, 270, 271, 136,
	294, 124, 283, 120, 125, 282, 198, 266, 274, 191,
	183, 119, 272, 189, 182, 170, 145, 156, 222, 180,
	223, 157, 194, 193, 195, 0, 479, 0, 257, 280,
	295, 129, 495, 265, 289, 290, 0, 226, 130, 150,
	144, 221, 148, 196, 126, 159, 254, 169, 179, 230,
	293, 211, 236, 133, 279, 255, 491, 494, 489, 490,
	537, 538, 584, 585, 586, 562, 485, 0, 492, 493,
	0, 567, 574, 575, 541, 111, 121, 176, 292, 228,
	147, 281, 475, 488, 140, 497, 0, 0, 511, 516,
	517, 529, 530, 531, 532, 533, 540, 547, 548, 550,
	556, 557, 558, 559, 564, 571, 590, 113, 114, 122,
	128, 134, 139, 143, 146, 152, 155, 158, 160, 161,
	162, 167, 181, 185, 186, 187, 188, 199, 200, 201,
	203, 206, 207, 208, 209, 210, 213, 215, 216, 217,
	218, 219, 220, 229, 232, 238, 239, 240, 241, 242,
	243, 245, 248, 249, 250, 251, 258, 262, 268, 269,
	278, 285, 288, 0, 0, 0, 0, 115, 166, 184,
	244, 247, 253, 260, 313, 314, 315, 171, 172, 0,
	0, 0, 0, 507, 227, 197, 163, 578, 566, 0,
	524, 581, 496, 514, 589, 515, 518, 554, 482, 536,
	205, 512, 0, 500, 477, 508, 478, 498, 526, 142,
	173, 138, 568, 539, 580, 175, 0, 501, 587, 177,
	545, 0, 256, 192, 0, 0, 0, 528, 570, 534,
	563, 523, 555, 487, 544, 582, 513, 552, 583, 68,
	0, 0, 108, 109, 110, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 549, 577, 510, 551, 553,
	591, 476, 546, 0, 480, 483, 588, 573, 504, 505,
	0, 0, 0, 0, 0, 0, 0, 527, 535, 560,
	521, 0, 0, 0, 0, 0, 0, 0, 0, 502,
	0, 543, 0, 0, 0, 484, 481, 0, 0, 0,
	0, 525, 0, 0, 0, 486, 0, 503, 561, 0,
	474, 151, 565, 572, 522, 316, 576, 520, 519, 579,
	224, 0, 261, 154, 174, 127, 168, 112, 123, 0,
	153, 202, 233, 237, 569, 499, 509, 135, 506, 235,
	212, 277, 542, 214, 234, 178, 267, 225, 276, 286,
	287, 264, 284, 291, 252, 116, 263, 275, 132, 246,
	0, 0, 0, 118, 273, 259, 190, 164, 165, 117,
	0, 231, 141, 149, 137, 204, 270, 271, 136, 294,
	124, 283, 120, 125, 282, 198, 266, 274, 191, 183,
	119, 272, 189, 182, 170, 145, 156, 222, 180, 223,
	157, 194, 193, 195, 0, 479, 0, 257, 280, 295,
	129, 495, 265, 289, 290, 0, 226, 130, 150, 144,
	221, 148, 196, 126, 159, 254, 169, 179, 230, 293,
	211, 236, 133, 279, 255, 491, 494, 489, 490, 537,
	538, 584, 585, 586, 562, 485, 0, 492, 493, 0,
	567, 574, 575, 541, 111, 121, 176, 292, 228, 147,
	281, 475, 488, 140, 497, 0, 0, 511, 516, 517,
	529, 530, 531, 532, 533, 540, 547, 548, 550, 556,
	557, 558, 559, 564, 571, 590, 113, 114, 122, 128,
	134, 139, 143, 146, 152, 155, 158, 160, 161, 162,
	167, 181, 185, 186, 187, 188, 199, 200, 201, 203,
	206, 207, 208, 209, 210, 213, 215, 216, 217, 218,
	219, 220, 229, 232, 238, 239, 240, 241, 242, 243,
	245, 248, 249, 250, 251, 258, 262, 268, 269, 278,
	285, 288, 0, 0, 0, 0, 115, 166, 184, 244,
	247, 253, 260, 313, 314, 315, 171, 172, 0, 0,
	0, 0, 507, 227, 197, 163, 578, 566, 0, 524,
	581, 496, 514, 589, 515, 518, 554, 482, 536, 205,
	512, 0, 500, 477, 508, 478, 498, 526, 142, 173,
	138, 568, 539, 580, 175, 0, 501, 587, 177, 545,
	0, 256, 192, 0, 0, 0, 528, 570, 534, 563,
	523, 555, 487, 544, 582, 513, 552, 583, 0, 0,
	0, 108, 109, 110, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 0, 549, 577, 510, 551, 553, 591,
	476, 546, 0, 480, 483, 588, 573, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 527, 535, 560, 521,
	0, 0, 0, 0, 0, 0, 1452, 0, 502, 0,
	543, 0, 0, 0, 484, 481, 0, 0, 0, 0,
	525, 0, 0, 0, 486, 0, 503, 561, 0, 474,
	151, 565, 572, 522, 316, 576, 520, 519, 579, 224,
	0, 261, 154, 174, 127, 168, 112, 123, 0, 153,
	202, 233, 237, 569, 499, 509, 135, 506, 235, 212,
	277, 542, 214, 234, 178, 267, 225, 276, 286, 287,
	264, 284, 291, 252, 116, 263, 275, 132, 246, 0,
	0, 0, 118, 273, 259, 190, 164, 165, 117, 0,
	231, 141, 149, 137, 204, 270, 271, 136, 294, 124,
	283, 120, 125, 282, 198, 266, 274, 191, 183, 119,
	272, 189, 182, 170, 145, 156, 222, 180, 223, 157,
	194, 193, 195, 0, 479, 0, 257, 280, 295, 129,
	495, 265, 289, 290, 0, 226, 130, 150, 144, 221,
	148, 196, 126, 159, 254, 169, 179, 230, 293, 211,
	236, 133, 279, 255, 491, 494, 489, 490, 537, 538,
	584, 585, 586, 562, 485, 0, 492, 493, 0, 567,
	574, 575, 541, 111, 121, 176, 292, 228, 147, 281,
	475, 488, 140, 497, 0, 0, 511, 516, 517, 529,
	530, 531, 532, 533, 540, 547, 548, 550, 556, 557,
	558, 559, 564, 571, 590, 113, 114, 122, 128, 134,
	139, 143, 146, 152, 155, 158, 160, 161, 162, 167,
	181, 185, 186, 187, 188, 199, 200, 201, 203, 206,
	207, 208, 209, 210, 213, 215, 216, 217, 218, 219,
	220, 229, 232, 238, 239, 240, 241, 242, 243, 245,
	248, 249, 250, 251, 258, 262, 268, 269, 278, 285,
	288, 0, 0, 0, 0, 115, 166, 184, 244, 247,
	253, 260, 313, 314, 315, 171, 172, 0, 0, 0,
	0, 507, 227, 197, 163, 578, 566, 0, 524, 581,
	496, 514, 589, 515, 518, 554, 482, 536, 205, 512,
	0, 500, 477, 508, 478, 498, 526, 142, 173, 138,
	568, 539, 580, 175, 0, 501, 587, 177, 545, 0,
	256, 192, 0, 0, 0, 528, 570, 534, 563, 523,
	555, 487, 544, 582, 513, 552, 583, 0, 0, 0,
	108, 109, 110, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 0, 549, 577, 510, 551, 553, 591, 476,
	546, 0, 480, 483, 588, 573, 504, 505, 0, 0,
	0, 0, 0, 0, 0, 527, 535, 560, 521, 0,
	0, 0, 0, 0, 0, 1103, 0, 502, 0, 543,
	0, 0, 0, 484, 481, 0, 0, 0, 0, 525,
	0, 0, 0, 486, 0, 503, 561, 0, 474, 151,
	565, 572, 522, 316, 576, 520, 519, 579, 224, 0,
	261, 154, 174, 127, 168, 112, 123, 0, 153, 202,
	233, 237, 569, 499, 509, 135, 506, 235, 212, 277,
	542, 214, 234, 178, 267, 225, 276, 286, 287, 264,
	284, 291, 252, 116, 263, 275, 132, 246, 0, 0,
	0, 118, 273, 259, 190, 164, 165, 117, 0, 231,
	141, 149, 137, 204, 270, 271, 136, 294, 124, 283,
	120, 125, 282, 198, 266, 274, 191, 183, 119, 272,
	189, 182, 170, 145, 156, 222, 180, 223, 157, 194,
	193, 195, 0, 479, 0, 257, 280, 295, 129, 495,
	265, 289, 290, 0, 226, 130, 150, 144, 221, 148,
	196, 126, 159, 254, 169, 179, 230, 293, 211, 236,
	133, 279, 255, 491, 494, 489, 490, 537, 538, 584,
	585, 586, 562, 485, 0, 492, 493, 0, 567, 574,
	575, 541, 111, 121, 176, 292, 228, 147, 281, 475,
	488, 140, 497, 0, 0, 511, 516, 517, 529, 530,
	531, 532, 533, 540, 547, 548, 550, 556, 557, 558,
	559, 564, 571, 590, 113, 114, 122, 128, 134, 139,
	143, 146, 152, 155, 158, 160, 161, 162, 167, 181,
	185, 186, 187, 188, 199, 200, 201, 203, 206, 207,
	208, 209, 210, 213, 215, 216, 217, 218, 219, 220,
	229, 232, 238, 239, 240, 241, 242, 243, 245, 248,
	249, 250, 251, 258, 262, 268, 269, 278, 285, 288,
	0, 0, 0, 0, 115, 166, 184, 244, 247, 253,
	260, 313, 314, 315, 171, 172, 0, 0, 0, 0,
	507, 227, 197, 163, 578, 566, 0, 524, 581, 496,
	514, 589, 515, 518, 554, 482, 536, 205, 512, 0,
	500, 477, 508, 478, 498, 526, 142, 173, 138, 568,
	539, 580, 175, 0, 501, 587, 177, 545, 0, 256,
	192, 0, 0, 0, 528, 570, 534, 563, 523, 555,
	487, 544, 582, 513, 552, 583, 0, 0, 0, 108,
	109, 110, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 0, 549, 577, 510, 551, 553, 591, 476, 546,
	0, 480, 483, 588, 573, 504, 505, 0, 0, 0,
	0, 0, 0, 0, 527, 535, 560, 521, 0, 0,
	0, 0, 0, 0, 1064, 0, 502, 0, 543, 0,
	0, 0, 484, 481, 0, 0, 0, 0, 525, 0,
	0, 0, 486, 0, 503, 561, 0, 474, 151, 565,
	572, 522, 316, 576, 520, 519, 579, 224, 0, 261,
	154, 174, 127, 168, 112, 123, 0, 153, 202, 233,
	237, 569, 499, 509, 135, 506, 235, 212, 277, 542,
	214, 234, 178, 267, 225, 276, 286, 287, 264, 284,
	291, 252, 116, 263, 275, 132, 246, 0, 0, 0,
	118, 273, 259, 190, 164, 165, 117, 0, 231, 141,
	149, 137, 204, 270, 271, 136, 294, 124, 283, 120,
	125, 282, 198, 266, 274, 191, 183, 119, 272, 189,
	182, 170, 145, 156, 222, 180, 223, 157, 194, 193,
	195, 0, 479, 0, 257, 280, 295, 129, 495, 265,
	289, 290, 0, 226, 130, 150, 144, 221, 148, 196,
	126, 159, 254, 169, 179, 230, 293, 211, 236, 133,
	279, 255, 491, 494, 489, 490, 537, 538, 584, 585,
	586, 562, 485, 0, 492, 493, 0, 567, 574, 575,
	541, 111, 121, 176, 292, 228, 147, 281, 475, 488,
	140, 497, 0, 0, 511, 516, 517, 529, 530, 531,
	532, 533, 540, 547, 548, 550, 556, 557, 558, 559,
	564, 571, 590, 113, 114, 122, 128, 134, 139, 143,
	146, 152, 155, 158, 160, 161, 162, 167, 181, 185,
	186, 187, 188, 199, 200, 201, 203, 206, 207, 208,
	209, 210, 213, 215, 216, 217, 218, 219, 220, 229,
	232, 238, 239, 240, 241, 242, 243, 245, 248, 249,
	250, 251, 258, 262, 268, 269, 278, 285, 288, 0,
	0, 0, 0, 115, 166, 184, 244, 247, 253, 260,
	313, 314, 315, 171, 172, 0, 0, 0, 0, 507,
	227, 197, 163, 578, 566, 0, 524, 581, 496, 514,
	589, 515, 518, 554, 482, 536, 205, 512, 0, 500,
	477, 508, 478, 498, 526, 142, 173, 138, 568, 539,
	580, 175, 0, 501, 587, 177, 545, 0, 256, 192,
	0, 0, 0, 528, 570, 534, 563, 523, 555, 487,
	544, 582, 513, 552, 583, 0, 0, 0, 108, 109,
	110, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	0, 549, 577, 510, 551, 553, 591, 476, 546, 0,
	480, 483, 588, 573, 504, 505, 0, 0, 0, 0,
	0, 0, 0, 527, 535, 560, 521, 0, 0, 0,
	0, 0, 0, 0, 0, 502, 0, 543, 0, 0,
	0, 484, 481, 0, 0, 0, 0, 525, 0, 0,
	0, 486, 0, 503, 561, 0, 474, 151, 565, 572,
	522, 316, 576, 520, 519, 579, 224, 0, 261, 154,
	174, 127, 168, 112, 123, 0, 153, 202, 233, 237,
	569, 499, 509, 135, 506, 235, 212, 277, 542, 214,
	234, 178, 267, 225, 276, 286, 287, 264, 284, 291,
	252, 116, 263, 275, 132, 246, 0, 0, 0, 118,
	273, 259, 190, 164, 165, 117, 0, 231, 141, 149,
	137, 204, 270, 271, 136, 294, 124, 283, 120, 125,
	282, 198, 266, 274, 191, 183, 119, 272, 189, 182,
	170, 145, 156, 222, 180, 223, 157, 194, 193, 195,
	0, 479, 0, 257, 280, 295, 129, 495, 265, 289,
	290, 0, 226, 130, 150, 144, 221, 148, 196, 126,
	159, 254, 169, 179, 230, 293, 211, 236, 133, 279,
	255, 491, 494, 489, 490, 537, 538, 584, 585, 586,
	562, 485, 0, 492, 493, 0, 567, 574, 575, 541,
	111, 121, 176, 292, 228, 147, 281, 475, 488, 140,
	497, 0, 0, 511, 516, 517, 529, 530, 531, 532,
	533, 540, 547, 548, 550, 556, 557, 558, 559, 564,
	571, 590, 113, 114, 122, 128, 134, 139, 143, 146,
	152, 155, 158, 160, 161, 162, 167, 181, 185, 186,
	187, 188, 199, 200, 201, 203, 206, 207, 208, 209,
	210, 213, 215, 216, 217, 218, 219, 220, 229, 232,
	238, 239, 240, 241, 242, 243, 245, 248, 249, 250,
	251, 258, 262, 268, 269, 278, 285, 288, 0, 0,
	0, 0, 115, 166, 184, 244, 247, 253, 260, 313,
	314, 315, 171, 172, 0, 0, 0, 0, 507, 227,
	197, 163, 578, 566, 0, 524, 581, 496, 514, 589,
	515, 518, 554, 482, 536, 205, 512, 0, 500, 477,
	508, 478, 498, 526, 142, 173, 138, 568, 539, 580,
	175, 0, 501, 587, 177, 545, 0, 256, 192, 0,
	0, 0, 528, 570, 534, 563, 523, 555, 487, 544,
	582, 513, 552, 583, 0, 0, 0, 108, 109, 110,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 0,
	549, 577, 510, 551, 553, 591, 476, 546, 0, 480,
	483, 588, 573, 504, 505, 0, 0, 0, 0, 0,
	0, 0, 527, 535, 560, 521, 0, 0, 0, 0,
	0, 0, 0, 0, 502, 0, 543, 0, 0, 0,
	484, 481, 0, 0, 0, 0, 525, 0, 0, 0,
	486, 0, 503, 561, 0, 474, 151, 565, 572, 522,
	316, 576, 520, 519, 579, 224, 0, 261, 154, 174,
	127, 168, 112, 123, 0, 153, 202, 233, 237, 569,
	499, 509, 135, 506, 235, 212, 277, 542, 214, 234,
	178, 267, 225, 276, 286, 287, 264, 284, 291, 252,
	116, 263, 275, 132, 246, 0, 0, 0, 118, 273,
	259, 190, 164, 165, 117, 0, 231, 141, 149, 137,
	204, 270, 271, 136, 294, 124, 283, 120, 472, 282,
	198, 266, 274, 191, 183, 119, 272, 189, 182, 170,
	145, 156, 222, 180, 223, 157, 194, 193, 195, 0,
	479, 0, 257, 280, 295, 129, 495, 265, 289, 290,
	0, 226, 130, 150, 144, 221, 148, 473, 471, 159,
	254, 169, 179, 230, 293, 211, 236, 133, 279, 255,
	491, 494, 489, 490, 537, 538, 584, 585, 586, 562,
	485, 0, 492, 493, 0, 567, 574, 575, 541, 111,
	121, 176, 292, 228, 147, 281, 475, 488, 140, 497,
	0, 0, 511, 516, 517, 529, 530, 531, 532, 533,
	540, 547, 548, 550, 556, 557, 558, 559, 564, 571,
	590, 113, 114, 122, 128, 134, 139, 143, 146, 152,
	155, 158, 160, 161, 162, 167, 181, 185, 186, 187,
	188, 199, 200, 201, 203, 206, 207, 208, 209, 210,
	213, 215, 216, 217, 218, 219, 220, 229, 232, 238,
	239, 240, 241, 242, 243, 245, 248, 249, 250, 251,
	258, 262, 268, 269, 278, 285, 288, 0, 0, 0,
	0, 115, 166, 184, 244, 247, 253, 260, 313, 314,
	315, 171, 172, 0, 0, 0, 0, 507, 227, 197,
	163, 578, 566, 0, 524, 581, 496, 514, 589, 515,
	518, 554, 482, 536, 205, 512, 0, 500, 477, 508,
	478, 498, 526, 142, 173, 138, 568, 539, 580, 175,
	0, 501, 587, 177, 545, 0, 256, 192, 0, 0,
	0, 528, 570, 534, 563, 523, 555, 487, 544, 582,
	513, 552, 583, 0, 0, 0, 108, 109, 110, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 0, 549,
	577, 510, 551, 553, 591, 476, 546, 0, 480, 483,
	588, 573, 504, 505, 0, 0, 0, 0, 0, 0,
	0, 527, 535, 560, 521, 0, 0, 0, 0, 0,
	0, 0, 0, 502, 0, 543, 0, 0, 0, 484,
	481, 0, 0, 0, 0, 525, 0, 0, 0, 486,
	0, 503, 561, 0, 474, 151, 565, 572, 522, 316,
	576, 520, 519, 579, 224, 0, 261, 154, 174, 127,
	168, 112, 123, 0, 153, 202, 233, 237, 569, 499,
	509, 135, 506, 235, 212, 277, 542, 214, 234, 178,
	267, 225, 276, 286, 287, 264, 284, 291, 252, 116,
	263, 822, 132, 246, 0, 0, 0, 118, 273, 259,
	190, 164, 165, 117, 0, 231, 141, 149, 137, 204,
	270, 271, 136, 294, 124, 283, 120, 472, 282, 198,
	266, 274, 191, 183, 119, 272, 189, 182, 170, 145,
	156, 222, 180, 223, 157, 194, 193, 195, 0, 479,
	0, 257, 280, 295, 129, 495, 265, 289, 290, 0,
	226, 130, 150, 144, 221, 148, 473, 471, 159, 254,
	169, 179, 230, 293, 211, 236, 133, 279, 255, 491,
	494, 489, 490, 537, 538, 584, 585, 586, 562, 485,
	0, 492, 493, 0, 567, 574, 575, 541, 111, 121,
	176, 292, 228, 147, 281, 475, 488, 140, 497, 0,
	0, 511, 516, 517, 529, 530, 531, 532, 533, 540,
	547, 548, 550, 556, 557, 558, 559, 564, 571, 590,
	113, 114, 122, 128, 134, 139, 143, 146, 152, 155,
	158, 160, 161, 162, 167, 181, 185, 186, 187, 188,
	199, 200, 201, 203, 206, 207, 208, 209, 210, 213,
	215, 216, 217, 218, 219, 220, 229, 232, 238, 239,
	240, 241, 242, 243, 245, 248, 249, 250, 251, 258,
	262, 268, 269, 278, 285, 288, 0, 0, 0, 0,
	115, 166, 184, 244, 247, 253, 260, 313, 314, 315,
	171, 172, 0, 0, 0, 0, 507, 227, 197, 163,
	578, 566, 0, 524, 581, 496, 514, 589, 515, 518,
	554, 482, 536, 205, 512, 0, 500, 477, 508, 478,
	498, 526, 142, 173, 138, 568, 539, 580, 175, 0,
	501, 587, 177, 545, 0, 256, 192, 0, 0, 0,
	528, 570, 534, 563, 523, 555, 487, 544, 582, 513,
	552, 583, 0, 0, 0, 108, 109, 110, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 0, 549, 577,
	510, 551, 553, 591, 476, 546, 0, 480, 483, 588,
	573, 504, 505, 0, 0, 0, 0, 0, 0, 0,
	527, 535, 560, 521, 0, 0, 0, 0, 0, 0,
	0, 0, 502, 0, 543, 0, 0, 0, 484, 481,
	0, 0, 0, 0, 525, 0, 0, 0, 486, 0,
	503, 561, 0, 474, 151, 565, 572, 522, 316, 576,
	520, 519, 579, 224, 0, 261, 154, 174, 127, 168,
	112, 123, 0, 153, 202, 233, 237, 569, 499, 509,
	135, 506, 235, 212, 277, 542, 214, 234, 178, 267,
	225, 276, 286, 287, 264, 284, 291, 252, 116, 263,
	463, 132, 246, 0, 0, 0, 118, 273, 259, 190,
	164, 165, 117, 0, 231, 141, 149, 137, 204, 270,
	271, 136, 294, 124, 283, 120, 472, 282, 198, 266,
	274, 191, 183, 119, 272, 189, 182, 170, 145, 156,
	222, 180, 223, 157, 194, 193, 195, 0, 479, 0,
	257, 280, 295, 129, 495, 265, 289, 290, 0, 226,
	130, 150, 144, 221, 148, 473, 471, 466, 465, 169,
	179, 230, 293, 211, 236, 133, 279, 255, 491, 494,
	489, 490, 537, 538, 584, 585, 586, 562, 485, 0,
	492, 493, 0, 567, 574, 575, 541, 111, 121, 176,
	292, 228, 147, 281, 475, 488, 140, 497, 0, 0,
	511, 516, 517, 529, 530, 531, 532, 533, 540, 547,
	548, 550, 556, 557, 558, 559, 564, 571, 590, 113,
	114, 122, 128, 134, 139, 143, 146, 152, 155, 158,
	160, 161, 162, 167, 181, 185, 186, 187, 188, 199,
	200, 201, 203, 206, 207, 208, 209, 210, 213, 215,
	216, 217, 218, 219, 220, 229, 232, 238, 239, 240,
	241, 242, 243, 245, 248, 249, 250, 251, 258, 262,
	268, 269, 278, 285, 288, 0, 0, 0, 0, 115,
	166, 184, 244, 247, 253, 260, 313, 314, 315, 171,
	172, 0, 0, 0, 0, 507, 227, 197, 163, 205,
	0, 0, 995, 0, 361, 0, 0, 0, 142, 173,
	360, 0, 0, 0, 175, 0, 996, 404, 177, 0,
	0, 256, 192, 0, 0, 0, 0, 0, 395, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 108, 109, 110, 382, 381, 384, 385, 386, 387,
	0, 0, 131, 383, 388, 389, 390, 0, 0, 0,
	0, 358, 375, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 373, 450, 0, 0, 0,
	418, 0, 374, 0, 0, 367, 368, 370, 369, 371,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 417, 0, 0, 316, 0, 0, 415, 0, 224,
	0, 261, 154, 174, 127, 168, 112, 123, 0, 153,
	202, 233, 237, 0, 0, 0, 135, 0, 235, 212,
	277, 0, 214, 234, 178, 267, 225, 276, 286, 287,
	264, 284, 291, 252, 116, 263, 275, 132, 246, 0,
	0, 0, 118, 273, 259, 190, 164, 165, 117, 0,
	231, 141, 149, 137, 204, 270, 271, 136, 294, 124,
	283, 120, 125, 282, 198, 266, 274, 191, 183, 119,
	272, 189, 182, 170, 145, 156, 222, 180, 223, 157,
	194, 193, 195, 0, 0, 0, 257, 280, 295, 129,
	0, 265, 289, 290, 0, 226, 130, 150, 144, 221,
	148, 196, 126, 159, 254, 169, 179, 230, 293, 211,
	236, 133, 279, 255, 405, 416, 411, 412, 409, 410,
	408, 407, 406, 419, 397, 398, 399, 400, 402, 0,
	413, 414, 401, 111, 121, 176, 292, 228, 147, 281,
	0, 0, 140, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 114, 122, 128, 134,
	139, 143, 146, 152, 155, 158, 160, 161, 162, 167,
	181, 185, 186, 187, 188, 199, 200, 201, 203, 206,
	207, 208, 209, 210, 213, 215, 216, 217, 218, 219,
	220, 229, 232, 238, 239, 240, 241, 242, 243, 245,
	248, 249, 250, 251, 258, 262, 268, 269, 278, 285,
	288, 0, 0, 0, 0, 115, 166, 184, 244, 247,
	253, 260, 313, 314, 315, 171, 172, 0, 0, 0,
	205, 0, 227, 197, 163, 361, 0, 0, 0, 142,
	173, 360, 0, 0, 0, 175, 0, 0, 404, 177,
	0, 0, 256, 192, 0, 0, 0, 0, 0, 395,
	396, 0, 0, 0, 0, 0, 0, 1113, 0, 68,
	0, 0, 108, 109, 110, 382, 381, 384, 385, 386,
	387, 0, 0, 131, 383, 388, 389, 390, 1114, 0,
	0, 0, 358, 375, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 372, 373, 0, 0, 0,
	0, 418, 0, 374, 0, 0, 367, 368, 370, 369,
	371, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 417, 0, 0, 316, 0, 0, 415, 0,
	224, 0, 261, 154, 174, 127, 168, 112, 123, 0,
	153, 202, 233, 237, 0, 0, 0, 135, 0, 235,
	212, 277, 0, 214, 234, 178, 267, 225, 276, 286,
	287, 264, 284, 291, 252, 116, 263, 275, 132, 246,
	0, 0, 0, 118, 273, 259, 190, 164, 165, 117,
	0, 231, 141, 149, 137, 204, 270, 271, 136, 294,
	124, 283, 120, 125, 282, 198, 266, 274, 191, 183,
	119, 272, 189, 182, 170, 145, 156, 222, 180, 223,
	157, 194, 193, 195, 0, 0, 0, 257, 280, 295,
	129, 0, 265, 289, 290, 0, 226, 130, 150, 144,
	221, 148, 196, 126, 159, 254, 169, 179, 230, 293,
	211, 236, 133, 279, 255, 405, 416, 411, 412, 409,
	410, 408, 407, 406, 419, 397, 398, 399, 400, 402,
	0, 413, 414, 401, 111, 121, 176, 292, 228, 147,
	281, 0, 0, 140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 114, 122, 128,
	134, 139, 143, 146, 152, 155, 158, 160, 161, 162,
	167, 181, 185, 186, 187, 188, 199, 200, 201, 203,
	206, 207, 208, 209, 210, 213, 215, 216, 217, 218,
	219, 220, 229, 232, 238, 239, 240, 241, 242, 243,
	245, 248, 249, 250, 251, 258, 262, 268, 269, 278,
	285, 288, 0, 0, 0, 0, 115, 166, 184, 244,
	247, 253, 260, 313, 314, 315, 171, 172, 0, 0,
	0, 205, 0, 227, 197, 163, 361, 0, 0, 0,
	142, 173, 360, 0, 0, 0, 175, 0, 0, 404,
	177, 0, 0, 256, 192, 0, 0, 0, 0, 0,
	395, 396, 0, 0, 0, 0, 0, 0, 1110, 0,
	68, 0, 0, 108, 109, 110, 382, 381, 384, 385,
	386, 387, 0, 0, 131, 383, 388, 389, 390, 1111,
	0, 0, 0, 358, 375, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 372, 373, 0, 0,
	0, 0, 418, 0, 374, 0, 0, 367, 368, 370,
	369, 371, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 417, 0, 0, 316, 0, 0, 415,
	0, 224, 0, 261, 154, 174, 127, 168, 112, 123,
	0, 153, 202, 233, 237, 0, 0, 0, 135, 0,
	235, 212, 277, 0, 214, 234, 178, 267, 225, 276,
	286, 287, 264, 284, 291, 252, 116, 263, 275, 132,
	246, 0, 0, 0, 118, 273, 259, 190, 164, 165,
	117, 0, 231, 141, 149, 137, 204, 270, 271, 136,
	294, 124, 283, 120, 125, 282, 198, 266, 274, 191,
	183, 119, 272, 189, 182, 170, 145, 156, 222, 180,
	223, 157, 194, 193, 195, 0, 0, 0, 257, 280,
	295, 129, 0, 265, 289, 290, 0, 226, 130, 150,
	144, 221, 148, 196, 126, 159, 254, 169, 179, 230,
	293, 211, 236, 133, 279, 255, 405, 416, 411, 412,
	409, 410, 408, 407, 406, 419, 397, 398, 399, 400,
	402, 0, 413, 414, 401, 111, 121, 176, 292, 228,
	147, 281, 0, 0, 140, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 114, 122,
	128, 134, 139, 143, 146, 152, 155, 158, 160, 161,
	162, 167, 181, 185, 186, 187, 188, 199, 200, 201,
	203, 206, 207, 208, 209, 210, 213, 215, 216, 217,
	218, 219, 220, 229, 232, 238, 239, 240, 241, 242,
	243, 245, 248, 249, 250, 251, 258, 262, 268, 269,
	278, 285, 288, 0, 0, 0, 0, 115, 166, 184,
	244, 247, 253, 260, 313, 314, 315, 171, 172, 0,
	0, 0, 205, 0, 227, 197, 163, 361, 0, 0,
	0, 142, 173, 360, 0, 0, 0, 175, 0, 0,
	404, 177, 0, 0, 256, 192, 0, 0, 0, 0,
	0, 395, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 438, 108, 109, 110, 382, 381, 384,
	385, 386, 387, 0, 0, 131, 383, 388, 389, 390,
	0, 0, 0, 0, 358, 375, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 372, 373, 0,
	0, 0, 0, 418, 0, 374, 0, 0, 367, 368,
	370, 369, 371, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 417, 0, 0, 316, 0, 0,
	415, 0, 224, 0, 261, 154, 174, 127, 168, 112,
	123, 0, 153, 202, 233, 237, 0, 0, 0, 135,
	0, 235, 212, 277, 0, 214, 234, 178, 267, 225,
	276, 286, 287, 264, 284, 291, 252, 116, 263, 275,
	132, 246, 0, 0, 0, 118, 273, 259, 190, 164,
	165, 117, 0, 231, 141, 149, 137, 204, 270, 271,
	136, 294, 124, 283, 120, 125, 282, 198, 266, 274,
	191, 183, 119, 272, 189, 182, 170, 145, 156, 222,
	180, 223, 157, 194, 193, 195, 0, 0, 0, 257,
	280, 295, 129, 0, 265, 289, 290, 0, 226, 130,
	150, 144, 221, 148, 196, 126, 159, 254, 169, 179,
	230, 293, 211, 236, 133, 279, 255, 405, 416, 411,
	412, 409, 410, 408, 407, 406, 419, 397, 398, 399,
	400, 402, 0, 413, 414, 401, 111, 121, 176, 292,
	228, 147, 281, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 114,
	122, 128, 134, 139, 143, 146, 152, 155, 158, 160,
	161, 162, 167, 181, 185, 186, 187, 188, 199, 200,
	201, 203, 206, 207, 208, 209, 210, 213, 215, 216,
	217, 218, 219, 220, 229, 232, 238, 239, 240, 241,
	242, 243, 245, 248, 249, 250, 251, 258, 262, 268,
	269, 278, 285, 288, 0, 0, 0, 0, 115, 166,
	184, 244, 247, 253, 260, 313, 314, 315, 171, 172,
	0, 0, 0, 205, 0, 227, 197, 163, 361, 0,
	0, 0, 142, 173, 360, 0, 0, 0, 175, 0,
	0, 404, 177, 0, 0, 256, 192, 0, 0, 0,
	0, 0, 395, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 108, 109, 110, 382, 381,
	384, 385, 386, 387, 0, 0, 131, 383, 388, 389,
	390, 0, 0, 0, 0, 358, 375, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 372, 373,
	450, 0, 0, 0, 418, 0, 374, 0, 0, 367,
	368, 370, 369, 371, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 417, 0, 0, 316, 0,
	0, 415, 0, 224, 0, 261, 154, 174, 127, 168,
	112, 123, 0, 153, 202, 233, 237, 0, 0, 0,
	135, 0, 235, 212, 277, 0, 214, 234, 178, 267,
	225, 276, 286, 287, 264, 284, 291, 252, 116, 263,
	275, 132, 246, 0, 0, 0, 118, 273, 259, 190,
	164, 165, 117, 0, 231, 141, 149, 137, 204, 270,
	271, 136, 294, 124, 283, 120, 125, 282, 198, 266,
	274, 191, 183, 119, 272, 189, 182, 170, 145, 156,
	222, 180, 223, 157, 194, 193, 195, 0, 0, 0,
	257, 280, 295, 129, 0, 265, 289, 290, 0, 226,
	130, 150, 144, 221, 148, 196, 126, 159, 254, 169,
	179, 230, 293, 211, 236, 133, 279, 255, 405, 416,
	411, 412, 409, 410, 408, 407, 406, 419, 397, 398,
	399, 400, 402, 0, 413, 414, 401, 111, 121, 176,
	292, 228, 147, 281, 0, 0, 140, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 113,
	114, 122, 128, 134, 139, 143, 146, 152, 155, 158,
	160, 161, 162, 167, 181, 185, 186, 187, 188, 199,
	200, 201, 203, 206, 207, 208, 209, 210, 213, 215,
	216, 217, 218, 219, 220, 229, 232, 238, 239, 240,
	241, 242, 243, 245, 248, 249, 250, 251, 258, 262,
	268, 269, 278, 285, 288, 0, 0, 0, 0, 115,
	166, 184, 244, 247, 253, 260, 313, 314, 315, 171,
	172, 0, 0, 0, 205, 0, 227, 197, 163, 361,
	0, 0, 0, 142, 173, 360, 0, 0, 0, 175,
	0, 0, 404, 177, 0, 0, 256, 192, 0, 0,
	0, 0, 0, 395, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 108, 109, 110, 382,
	1013, 384, 385, 386, 387, 0, 0, 131, 383, 388,
	389, 390, 0, 0, 0, 0, 358, 375, 0, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 372,
	373, 450, 0, 0, 0, 418, 0, 374, 0, 0,
	367, 368, 370, 369, 371, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 417, 0, 0, 316,
	0, 0, 415, 0, 224, 0, 261, 154, 174, 127,
	168, 112, 123, 0, 153, 202, 233, 237, 0, 0,
	0, 135, 0, 235, 212, 277, 0, 214, 234, 178,
	267, 225, 276, 286, 287, 264, 284, 291, 252, 116,
	263, 275, 132, 246, 0, 0, 0, 118, 273, 259,
	190, 164, 165, 117, 0, 231, 141, 149, 137, 204,
	270, 271, 136, 294, 124, 283, 120, 125, 282, 198,
	266, 274, 191, 183, 119, 272, 189, 182, 170, 145,
	156, 222, 180, 223, 157, 194, 193, 195, 0, 0,
	0, 257, 280, 295, 129, 0, 265, 289, 290, 0,
	226, 130, 150, 144, 221, 148, 196, 126, 159, 254,
	169, 179, 230, 293, 211, 236, 133, 279, 255, 405,
	416, 411, 412, 409, 410, 408, 407, 406, 419, 397,
	398, 399, 400, 402, 0, 413, 414, 401, 111, 121,
	176, 292, 228, 147, 281, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 114, 122, 128, 134, 139, 143, 146, 152, 155,
	158, 160, 161, 162, 167, 181, 185, 186, 187, 188,
	199, 200, 201, 203, 206, 207, 208, 209, 210, 213,
	215, 216, 217, 218, 219, 220, 229, 232, 238, 239,
	240, 241, 242, 243, 245, 248, 249, 250, 251, 258,
	262, 268, 269, 278, 285, 288, 0, 0, 0, 0,
	115, 166, 184, 244, 247, 253, 260, 313, 314, 315,
	171, 172, 0, 0, 0, 205, 0, 227, 197, 163,
	361, 0, 0, 0, 142, 173, 360, 0, 0, 0,
	175, 0, 0, 404, 177, 0, 0, 256, 192, 0,
	0, 0, 0, 0, 395, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 108, 109, 110,
	382, 1010, 384, 385, 386, 387, 0, 0, 131, 383,
	388, 389, 390, 0, 0, 0, 0, 358, 375, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	372, 373, 450, 0, 0, 0, 418, 0, 374, 0,
	0, 367, 368, 370, 369, 371, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 417, 0, 0,
	316, 0, 0, 415, 0, 224, 0, 261, 154, 174,
	127, 168, 112, 123, 0, 153, 202, 233, 237, 0,
	0, 0, 135, 0, 235, 212, 277, 0, 214, 234,
	178, 267, 225, 276, 286, 287, 264, 284, 291, 252,
	116, 263, 275, 132, 246, 0, 0, 0, 118, 273,
	259, 190, 164, 165, 117, 0, 231, 141, 149, 137,
	204, 270, 271, 136, 294, 124, 283, 120, 125, 282,
	198, 266, 274, 191, 183, 119, 272, 189, 182, 170,
	145, 156, 222, 180, 223, 157, 194, 193, 195, 0,
	0, 0, 257, 280, 295, 129, 0, 265, 289, 290,
	0, 226, 130, 150, 144, 221, 148, 196, 126, 159,
	254, 169, 179, 230, 293, 211, 236, 133, 279, 255,
	405, 416, 411, 412, 409, 410, 408, 407, 406, 419,
	397, 398, 399, 400, 402, 0, 413, 414, 401, 111,
	121, 176, 292, 228, 147, 281, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 114, 122, 128, 134, 139, 143, 146, 152,
	155, 158, 160, 161, 162, 167, 181, 185, 186, 187,
	188, 199, 200, 201, 203, 206, 207, 208, 209, 210,
	213, 215, 216, 217, 218, 219, 220, 229, 232, 238,
	239, 240, 241, 242, 243, 245, 248, 249, 250, 251,
	258, 262, 268, 269, 278, 285, 288, 0, 0, 0,
	0, 115, 166, 184, 244, 247, 253, 260, 313, 314,
	315, 171, 172, 431, 0, 0, 0, 0, 227, 197,
	163, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	361, 0, 0, 0, 142, 173, 360, 0, 0, 0,
	175, 0, 0, 404, 177, 0, 0, 256, 192, 0,
	0, 0, 0, 0, 395, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 108, 109, 110,
	382, 381, 384, 385, 386, 387, 0, 0, 131, 383,
	388, 389, 390, 0, 0, 0, 0, 358, 375, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	372, 373, 0, 0, 0, 0, 418, 0, 374, 0,
	0, 367, 368, 370, 369, 371, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 417, 0, 0,
	316, 0, 0, 415, 0, 224, 0, 261, 154, 174,
	127, 168, 112, 123, 0, 153, 202, 233, 237, 0,
	0, 0, 135, 0, 235, 212, 277, 0, 214, 234,
	178, 267, 225, 276, 286, 287, 264, 284, 291, 252,
	116, 263, 275, 132, 246, 0, 0, 0, 118, 273,
	259, 190, 164, 165, 117, 0, 231, 141, 149, 137,
	204, 270, 271, 136, 294, 124, 283, 120, 125, 282,
	198, 266, 274, 191, 183, 119, 272, 189, 182, 170,
	145, 156, 222, 180, 223, 157, 194, 193, 195, 0,
	0, 0, 257, 280, 295, 129, 0, 265, 289, 290,
	0, 226, 130, 150, 144, 221, 148, 196, 126, 159,
	254, 169, 179, 230, 293, 211, 236, 133, 279, 255,
	405, 416, 411, 412, 409, 410, 408, 407, 406, 419,
	397, 398, 399, 400, 402, 0, 413, 414, 401, 111,
	121, 176, 292, 228, 147, 281, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 114, 122, 128, 134, 139, 143, 146, 152,
	155, 158, 160, 161, 162, 167, 181, 185, 186, 187,
	188, 199, 200, 201, 203, 206, 207, 208, 209, 210,
	213, 215, 216, 217, 218, 219, 220, 229, 232, 238,
	239, 240, 241, 242, 243, 245, 248, 249, 250, 251,
	258, 262, 268, 269, 278, 285, 288, 0, 0, 0,
	0, 115, 166, 184, 244, 247, 253, 260, 313, 314,
	315, 171, 172, 0, 0, 0, 205, 0, 227, 197,
	163, 361, 0, 0, 0, 142, 173, 360, 0, 0,
	0, 175, 0, 0, 404, 177, 0, 0, 256, 192,
	0, 0, 0, 0, 0, 395, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 108, 109,
	110, 382, 381, 384, 385, 386, 387, 0, 0, 131,
	383, 388, 389, 390, 0, 0, 0, 0, 358, 375,
	0, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 372, 373, 0, 0, 0, 0, 418, 0, 374,
	0, 0, 367, 368, 370, 369, 371, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 417, 0,
	0, 316, 0, 0, 415, 0, 224, 0, 261, 154,
	174, 127, 168, 112, 123, 0, 153, 202, 233, 237,
	0, 0, 0, 135, 0, 235, 212, 277, 0, 214,
	234, 178, 267, 225, 276, 286, 287, 264, 284, 291,
	252, 116, 263, 275, 132, 246, 0, 0, 0, 118,
	273, 259, 190, 164, 165, 117, 0, 231, 141, 149,
	137, 204, 270, 271, 136, 294, 124, 283, 120, 125,
	282, 198, 266, 274, 191, 183, 119, 272, 189, 182,
	170, 145, 156, 222, 180, 223, 157, 194, 193, 195,
	0, 0, 0, 257, 280, 295, 129, 0, 265, 289,
	290, 0, 226, 130, 150, 144, 221, 148, 196, 126,
	159, 254, 169, 179, 230, 293, 211, 236, 133, 279,
	255, 405, 416, 411, 412, 409, 410, 408, 407, 406,
	419, 397, 398, 399, 400, 402, 0, 413, 414, 401,
	111, 121, 176, 292, 228, 147, 281, 0, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 114, 122, 128, 134, 139, 143, 146,
	152, 155, 158, 160, 161, 162, 167, 181, 185, 186,
	187, 188, 199, 200, 201, 203, 206, 207, 208, 209,
	210, 213, 215, 216, 217, 218, 219, 220, 229, 232,
	238, 239, 240, 241, 242, 243, 245, 248, 249, 250,
	251, 258, 262, 268, 269, 278, 285, 288, 0, 0,
	0, 0, 115, 166, 184, 244, 247, 253, 260, 313,
	314, 315, 171, 172, 205, 0, 0, 0, 0, 227,
	197, 163, 0, 142, 173, 138, 0, 0, 0, 175,
	0, 0, 404, 177, 0, 0, 256, 192, 0, 0,
	0, 0, 0, 395, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 108, 109, 110, 382,
	381, 384, 385, 386, 387, 0, 0, 131, 383, 388,
	389, 390, 0, 0, 0, 0, 0, 375, 0, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 372,
	373, 0, 0, 0, 0, 418, 0, 374, 0, 0,
	367, 368, 370, 369, 371, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 417, 0, 0, 316,
	0, 0, 415, 0, 224, 0, 261, 154, 174, 127,
	168, 112, 123, 0, 153, 202, 233, 237, 0, 0,
	0, 135, 0, 235, 212, 277, 1726, 214, 234, 178,
	267, 225, 276, 286, 287, 264, 284, 291, 252, 116,
	263, 275, 132, 246, 0, 0, 0, 118, 273, 259,
	190, 164, 165, 117, 0, 231, 141, 149, 137, 204,
	270, 271, 136, 294, 124, 283, 120, 125, 282, 198,
	266, 274, 191, 183, 119, 272, 189, 182, 170, 145,
	156, 222, 180, 223, 157, 194, 193, 195, 0, 0,
	0, 257, 280, 295, 129, 0, 265, 289, 290, 0,
	226, 130, 150, 144, 221, 148, 196, 126, 159, 254,
	169, 179, 230, 293, 211, 236, 133, 279, 255, 405,
	416, 411, 412, 409, 410, 408, 407, 406, 419, 397,
	398, 399, 400, 402, 0, 413, 414, 401, 111, 121,
	176, 292, 228, 147, 281, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 114, 122, 128, 134, 139, 143, 146, 152, 155,
	158, 160, 161, 162, 167, 181, 185, 186, 187, 188,
	199, 200, 201, 203, 206, 207, 208, 209, 210, 213,
	215, 216, 217, 218, 219, 220, 229, 232, 238, 239,
	240, 241, 242, 243, 245, 248, 249, 250, 251, 258,
	262, 268, 269, 278, 285, 288, 0, 0, 0, 0,
	115, 166, 184, 244, 247, 253, 260, 313, 314, 315,
	171, 172, 205, 0, 0, 0, 0, 227, 197, 163,
	0, 142, 173, 138, 0, 0, 0, 175, 0, 0,
	404, 177, 0, 0, 256, 192, 0, 0, 0, 0,
	0, 395, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 438, 108, 109, 110, 382, 381, 384,
	385, 386, 387, 0, 0, 131, 383, 388, 389, 390,
	0, 0, 0, 0, 0, 375, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 372, 373, 0,
	0, 0, 0, 418, 0, 374, 0, 0, 367, 368,
	370, 369, 371, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 417, 0, 0, 316, 0, 0,
	415, 0, 224, 0, 261, 154, 174, 127, 168, 112,
	123, 0, 153, 202, 233, 237, 0, 0, 0, 135,
	0, 235, 212, 277, 0, 214, 234, 178, 267, 225,
	276, 286, 287, 264, 284, 291, 252, 116, 263, 275,
	132, 246, 0, 0, 0, 118, 273, 259, 190, 164,
	165, 117, 0, 231, 141, 149, 137, 204, 270, 271,
	136, 294, 124, 283, 120, 125, 282, 198, 266, 274,
	191, 183, 119, 272, 189, 182, 170, 145, 156, 222,
	180, 223, 157, 194, 193, 195, 0, 0, 0, 257,
	280, 295, 129, 0, 265, 289, 290, 0, 226, 130,
	150, 144, 221, 148, 196, 126, 159, 254, 169, 179,
	230, 293, 211, 236, 133, 279, 255, 405, 416, 411,
	412, 409, 410, 408, 407, 406, 419, 397, 398, 399,
	400, 402, 0, 413, 414, 401, 111, 121, 176, 292,
	228, 147, 281, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 114,
	122, 128, 134, 139, 143, 146, 152, 155, 158, 160,
	161, 162, 167, 181, 185, 186, 187, 188, 199, 200,
	201, 203, 206, 207, 208, 209, 210, 213, 215, 216,
	217, 218, 219, 220, 229, 232, 238, 239, 240, 241,
	242, 243, 245, 248, 249, 250, 251, 258, 262, 268,
	269, 278, 285, 288, 0, 0, 0, 0, 115, 166,
	184, 244, 247, 253, 260, 313, 314, 315, 171, 172,
	205, 0, 0, 0, 0, 227, 197, 163, 0, 142,
	173, 138, 0, 0, 0, 175, 0, 0, 404, 177,
	0, 0, 256, 192, 0, 0, 0, 0, 0, 395,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 108, 109, 110, 382, 381, 384, 385, 386,
	387, 0, 0, 131, 383, 388, 389, 390, 0, 0,
	0, 0, 0, 375, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 372, 373, 0, 0, 0,
	0, 418, 0, 374, 0, 0, 367, 368, 370, 369,
	371, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 417, 0, 0, 316, 0, 0, 415, 0,
	224, 0, 261, 154, 174, 127, 168, 112, 123, 0,
	153, 202, 233, 237, 0, 0, 0, 135, 0, 235,
	212, 277, 0, 214, 234, 178, 267, 225, 276, 286,
	287, 264, 284, 291, 252, 116, 263, 275, 132, 246,
	0, 0, 0, 118, 273, 259, 190, 164, 165, 117,
	0, 231, 141, 149, 137, 204, 270, 271, 136, 294,
	124, 283, 120, 125, 282, 198, 266, 274, 191, 183,
	119, 272, 189, 182, 170, 145, 156, 222, 180, 223,
	157, 194, 193, 195, 0, 0, 0, 257, 280, 295,
	129, 0, 265, 289, 290, 0, 226, 130, 150, 144,
	221, 148, 196, 126, 159, 254, 169, 179, 230, 293,
	211, 236, 133, 279, 255, 405, 416, 411, 412, 409,
	410, 408, 407, 406, 419, 397, 398, 399, 400, 402,
	0, 413, 414, 401, 111, 121, 176, 292, 228, 147,
	281, 0, 0, 140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 114, 122, 128,
	134, 139, 143, 146, 152, 155, 158, 160, 161, 162,
	167, 181, 185, 186, 187, 188, 199, 200, 201, 203,
	206, 207, 208, 209, 210, 213, 215, 216, 217, 218,
	219, 220, 229, 232, 238, 239, 240, 241, 242, 243,
	245, 248, 249, 250, 251, 258, 262, 268, 269, 278,
	285, 288, 0, 0, 0, 0, 115, 166, 184, 244,
	247, 253, 260, 313, 314, 315, 171, 172, 205, 0,
	0, 0, 0, 227, 197, 163, 0, 142, 173, 138,
	0, 0, 0, 175, 0, 0, 404, 177, 0, 0,
	256, 192, 0, 0, 0, 0, 0, 395, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	108, 109, 110, 382, 723, 384, 385, 386, 387, 0,
	0, 131, 383, 388, 389, 390, 0, 0, 0, 0,
	0, 375, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 372, 373, 0, 0, 0, 0, 418,
	0, 374, 0, 0, 367, 368, 370, 369, 371, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	417, 0, 0, 316, 0, 0, 415, 0, 224, 0,
	261, 154, 174, 127, 168, 112, 123, 0, 153, 202,
	233, 237, 0, 0, 0, 135, 0, 235, 212, 277,
	0, 214, 234, 178, 267, 225, 276, 286, 287, 264,
	284, 291, 252, 116, 263, 275, 132, 246, 0, 0,
	0, 118, 273, 259, 190, 164, 165, 117, 0, 231,
	141, 149, 137, 204, 270, 271, 136, 294, 124, 283,
	120, 125, 282, 198, 266, 274, 191, 183, 119, 272,
	189, 182, 170, 145, 156, 222, 180, 223, 157, 194,
	193, 195, 0, 0, 0, 257, 280, 295, 129, 0,
	265, 289, 290, 0, 226, 130, 150, 144, 221, 148,
	196, 126, 159, 254, 169, 179, 230, 293, 211, 236,
	133, 279, 255, 405, 416, 411, 412, 409, 410, 408,
	407, 406, 419, 397, 398, 399, 400, 402, 0, 413,
	414, 401, 111, 121, 176, 292, 228, 147, 281, 0,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 114, 122, 128, 134, 139,
	143, 146, 152, 155, 158, 160, 161, 162, 167, 181,
	185, 186, 187, 188, 199, 200, 201, 203, 206, 207,
	208, 209, 210, 213, 215, 216, 217, 218, 219, 220,
	229, 232, 238, 239, 240, 241, 242, 243, 245, 248,
	249, 250, 251, 258, 262, 268, 269, 278, 285, 288,
	0, 0, 0, 0, 115, 166, 184, 244, 247, 253,
	260, 313, 314, 315, 171, 172, 205, 0, 0, 0,
	0, 227, 197, 163, 0, 142, 173, 138, 0, 0,
	0, 175, 0, 0, 0, 177, 0, 0, 256, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 108, 109,
	110, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 688, 687, 697,
	698, 690, 691, 692, 693, 694, 695, 696, 689, 0,
	0, 699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 0,
	0, 316, 0, 0, 0, 0, 224, 0, 261, 154,
	174, 127, 168, 112, 123, 0, 153, 202, 233, 237,
	0, 0, 0, 135, 0, 235, 212, 277, 0, 214,
	234, 178, 267, 225, 276, 286, 287, 264, 284, 291,
	252, 116, 263, 275, 132, 246, 0, 0, 0, 118,
	273, 259, 190, 164, 165, 117, 0, 231, 141, 149,
	137, 204, 270, 271, 136, 294, 124, 283, 120, 125,
	282, 198, 266, 274, 191, 183, 119, 272, 189, 182,
	170, 145, 156, 222, 180, 223, 157, 194, 193, 195,
	0, 0, 0, 257, 280, 295, 129, 0, 265, 289,
	290, 0, 226, 130, 150, 144, 221, 148, 196, 126,
	159, 254, 169, 179, 230, 293, 211, 236, 133, 279,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 121, 176, 292, 228, 147, 281, 0, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 114, 122, 128, 134, 139, 143, 146,
	152, 155, 158, 160, 161, 162, 167, 181, 185, 186,
	187, 188, 199, 200, 201, 203, 206, 207, 208, 209,
	210, 213, 215, 216, 217, 218, 219, 220, 229, 232,
	238, 239, 240, 241, 242, 243, 245, 248, 249, 250,
	251, 258, 262, 268, 269, 278, 285, 288, 0, 0,
	0, 0, 115, 166, 184, 244, 247, 253, 260, 313,
	314, 315, 171, 172, 205, 0, 0, 0, 792, 227,
	197, 163, 0, 142, 173, 138, 0, 0, 0, 175,
	0, 0, 0, 177, 0, 0, 256, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 108, 109, 110, 0,
	794, 0, 0, 0, 0, 679, 0, 131, 0, 0,
	0, 0, 0, 675, 676, 674, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 677, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 316,
	0, 0, 0, 0, 224, 0, 261, 154, 174, 127,
	168, 112, 123, 0, 153, 202, 233, 237, 0, 0,
	0, 135, 0, 235, 212, 277, 0, 214, 234, 178,
	267, 225, 276, 286, 287, 264, 284, 291, 252, 116,
	263, 275, 132, 246, 0, 0, 0, 118, 273, 259,
	190, 164, 165, 117, 0, 231, 141, 149, 137, 204,
	270, 271, 136, 294, 124, 283, 120, 125, 282, 198,
	266, 274, 191, 183, 119, 272, 189, 182, 170, 145,
	156, 222, 180, 223, 157, 194, 193, 195, 0, 0,
	0, 257, 280, 295, 129, 0, 265, 289, 290, 0,
	226, 130, 150, 144, 221, 148, 196, 126, 159, 254,
	169, 179, 230, 293, 211, 236, 133, 279, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 121,
	176, 292, 228, 147, 281, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 114, 122, 128, 134, 139, 143, 146, 152, 155,
	158, 160, 161, 162, 167, 181, 185, 186, 187, 188,
	199, 200, 201, 203, 206, 207, 208, 209, 210, 213,
	215, 216, 217, 218, 219, 220, 229, 232, 238, 239,
	240, 241, 242, 243, 245, 248, 249, 250, 251, 258,
	262, 268, 269, 278, 285, 288, 0, 0, 0, 0,
	115, 166, 184, 244, 247, 253, 260, 313, 314, 315,
	171, 172, 205, 0, 0, 0, 0, 227, 197, 163,
	0, 142, 173, 138, 0, 0, 0, 175, 0, 0,
	0, 177, 0, 0, 256, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 108, 109, 110, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 98, 99, 0, 94, 0, 0,
	0, 101, 224, 0, 261, 154, 174, 127, 168, 112,
	123, 0, 153, 202, 233, 237, 0, 0, 0, 135,
	0, 235, 212, 277, 0, 214, 234, 178, 267, 225,
	276, 286, 287, 264, 284, 291, 252, 116, 263, 275,
	132, 246, 0, 0, 0, 118, 273, 259, 190, 164,
	165, 117, 0, 231, 141, 149, 137, 204, 270, 271,
	136, 294, 124, 283, 120, 125, 282, 198, 266, 274,
	191, 183, 119, 272, 189, 182, 170, 145, 156, 222,
	180, 223, 157, 194, 193, 195, 0, 0, 0, 257,
	280, 295, 129, 0, 265, 289, 290, 0, 226, 130,
	150, 144, 221, 148, 196, 126, 159, 254, 169, 179,
	230, 293, 211, 236, 133, 279, 255, 0, 97, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 121, 176, 292,
	228, 147, 281, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 114,
	122, 128, 134, 139, 143, 146, 152, 155, 158, 160,
	161, 162, 167, 181, 185, 186, 187, 188, 199, 200,
	201, 203, 206, 207, 208, 209, 210, 213, 215, 216,
	217, 218, 219, 220, 229, 232, 238, 239, 240, 241,
	242, 243, 245, 248, 249, 250, 251, 258, 262, 268,
	269, 278, 285, 288, 0, 0, 0, 0, 115, 166,
	184, 244, 247, 253, 260, 103, 104, 105, 171, 172,
	35, 0, 0, 0, 0, 227, 197, 163, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 173, 138, 0, 0, 0, 175, 0, 0,
	0, 177, 0, 0, 256, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 108, 109, 110, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 0, 0, 0, 316, 0, 0,
	0, 0, 224, 0, 261, 154, 174, 127, 168, 112,
	123, 0, 153, 202, 233, 237, 0, 0, 0, 135,
	0, 235, 212, 277, 0, 214, 234, 178, 267, 225,
	276, 286, 287, 264, 284, 291, 252, 116, 263, 275,
	132, 246, 0, 0, 0, 118, 273, 259, 190, 164,
	165, 117, 0, 231, 141, 149, 137, 204, 270, 271,
	136, 294, 124, 283, 120, 125, 282, 198, 266, 274,
	191, 183, 119, 272, 189, 182, 170, 145, 156, 222,
	180, 223, 157, 194, 193, 195, 0, 0, 0, 257,
	280, 295, 129, 0, 265, 289, 290, 0, 226, 130,
	150, 144, 221, 148, 196, 126, 159, 254, 169, 179,
	230, 293, 211, 236, 133, 279, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 121, 176, 292,
	228, 147, 281, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 114,
	122, 128, 134, 139, 143, 146, 152, 155, 158, 160,
	161, 162, 167, 181, 185, 186, 187, 188, 199, 200,
	201, 203, 206, 207, 208, 209, 210, 213, 215, 216,
	217, 218, 219, 220, 229, 232, 238, 239, 240, 241,
	242, 243, 245, 248, 249, 250, 251, 258, 262, 268,
	269, 278, 285, 288, 0, 0, 0, 0, 115, 166,
	184, 244, 247, 253, 260, 313, 314, 315, 810, 811,
	0, 0, 0, 0, 64, 227, 197, 163, 205, 0,
	0, 0, 1090, 0, 0, 0, 0, 142, 173, 138,
	0, 0, 0, 175, 0, 0, 0, 177, 0, 0,
	256, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	108, 109, 110, 0, 1092, 0, 0, 0, 0, 0,
	0, 131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 0, 316, 0, 0, 0, 0, 224, 0,
	261, 154, 174, 127, 168, 112, 123, 0, 153, 202,
	233, 237, 0, 0, 0, 135, 0, 235, 212, 277,
	0, 214, 234, 178, 267, 225, 276, 286, 287, 264,
	284, 291, 252, 116, 263, 275, 132, 246, 0, 0,
	0, 118, 273, 259, 190, 164, 165, 117, 0, 231,
	141, 149, 137, 204, 270, 271, 136, 294, 124, 283,
	120, 125, 282, 198, 266, 274, 191, 183, 119, 272,
	189, 182, 170, 145, 156, 222, 180, 223, 157, 194,
	193, 195, 0, 0, 0, 257, 280, 295, 129, 0,
	265, 289, 290, 0, 226, 130, 150, 144, 221, 148,
	196, 126, 159, 254, 169, 179, 230, 293, 211, 236,
	133, 279, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 121, 176, 292, 228, 147, 281, 0,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 114, 122, 128, 134, 139,
	143, 146, 152, 155, 158, 160, 161, 162, 167, 181,
	185, 186, 187, 188, 199, 200, 201, 203, 206, 207,
	208, 209, 210, 213, 215, 216, 217, 218, 219, 220,
	229, 232, 238, 239, 240, 241, 242, 243, 245, 248,
	249, 250, 251, 258, 262, 268, 269, 278, 285, 288,
	0, 0, 0, 0, 115, 166, 184, 244, 247, 253,
	260, 313, 314, 315, 171, 172, 35, 0, 0, 0,
	0, 227, 197, 163, 0, 0, 0, 0, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 142, 173, 138,
	0, 0, 0, 175, 0, 0, 0, 177, 0, 0,
	256, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	108, 109, 110, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 0, 316, 0, 0, 0, 0, 224, 0,
	261, 154, 174, 127, 168, 112, 123, 0, 153, 202,
	233, 237, 0, 0, 0, 135, 0, 235, 212, 277,
	0, 214, 234, 178, 267, 225, 276, 286, 287, 264,
	284, 291, 252, 116, 263, 275, 132, 246, 0, 0,
	0, 118, 273, 259, 190, 164, 165, 117, 0, 231,
	141, 149, 137, 204, 270, 271, 136, 294, 124, 283,
	120, 125, 282, 198, 266, 274, 191, 183, 119, 272,
	189, 182, 170, 145, 156, 222, 180, 223, 157, 194,
	193, 195, 0, 0, 0, 257, 280, 295, 129, 0,
	265, 289, 290, 0, 226, 130, 150, 144, 221, 148,
	196, 126, 159, 254, 169, 179, 230, 293, 211, 236,
	133, 279, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 121, 176, 292, 228, 147, 281, 0,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 114, 122, 128, 134, 139,
	143, 146, 152, 155, 158, 160, 161, 162, 167, 181,
	185, 186, 187, 188, 199, 200, 201, 203, 206, 207,
	208, 209, 210, 213, 215, 216, 217, 218, 219, 220,
	229, 232, 238, 239, 240, 241, 242, 243, 245, 248,
	249, 250, 251, 258, 262, 268, 269, 278, 285, 288,
	0, 0, 0, 0, 115, 166, 184, 244, 247, 253,
	260, 313, 314, 315, 171, 172, 205, 0, 0, 0,
	1090, 227, 197, 163, 0, 142, 173, 138, 0, 0,
	0, 175, 0, 0, 0, 177, 0, 0, 256, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 108, 109,
	110, 0, 1092, 0, 0, 0, 0, 0, 0, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 0,
	0, 316, 0, 0, 0, 0, 224, 0, 261, 154,
	174, 127, 168, 112, 123, 0, 153, 202, 233, 237,
	0, 0, 0, 135, 0, 235, 212, 277, 0, 1094,
	234, 178, 267, 225, 276, 286, 287, 264, 284, 291,
	252, 116, 263, 275, 132, 246, 0, 0, 0, 118,
	273, 259, 190, 164, 165, 117, 0, 231, 141, 149,
	137, 204, 270, 271, 136, 294, 124, 283, 120, 125,
	282, 198, 266, 274, 191, 183, 119, 272, 189, 182,
	170, 145, 156, 222, 180, 223, 157, 194, 193, 195,
	0, 0, 0, 257, 280, 295, 129, 0, 265, 289,
	290, 0, 226, 130, 150, 144, 221, 148, 196, 126,
	159, 254, 169, 179, 230, 293, 211, 236, 133, 279,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 121, 176, 292, 228, 147, 281, 0, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 114, 122, 128, 134, 139, 143, 146,
	152, 155, 158, 160, 161, 162, 167, 181, 185, 186,
	187, 188, 199, 200, 201, 203, 206, 207, 208, 209,
	210, 213, 215, 216, 217, 218, 219, 220, 229, 232,
	238, 239, 240, 241, 242, 243, 245, 248, 249, 250,
	251, 258, 262, 268, 269, 278, 285, 288, 0, 0,
	0, 0, 115, 166, 184, 244, 247, 253, 260, 313,
	314, 315, 171, 172, 205, 0, 0, 0, 0, 227,
	197, 163, 0, 142, 173, 138, 0, 0, 0, 175,
	0, 0, 0, 177, 0, 0, 256, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 108, 109, 110, 0,
	0, 1056, 0, 0, 1057, 0, 0, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 316,
	0, 0, 0, 0, 224, 0, 261, 154, 174, 127,
	168, 112, 123, 0, 153, 202, 233, 237, 0, 0,
	0, 135, 0, 235, 212, 277, 0, 214, 234, 178,
	267, 225, 276, 286, 287, 264, 284, 291, 252, 116,
	263, 275, 132, 246, 0, 0, 0, 118, 273, 259,
	190, 164, 165, 117, 0, 231, 141, 149, 137, 204,
	270, 271, 136, 294, 124, 283, 120, 125, 282, 198,
	266, 274, 191, 183, 119, 272, 189, 182, 170, 145,
	156, 222, 180, 223, 157, 194, 193, 195, 0, 0,
	0, 257, 280, 295, 129, 0, 265, 289, 290, 0,
	226, 130, 150, 144, 221, 148, 196, 126, 159, 254,
	169, 179, 230, 293, 211, 236, 133, 279, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 121,
	176, 292, 228, 147, 281, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 114, 122, 128, 134, 139, 143, 146, 152, 155,
	158, 160, 161, 162, 167, 181, 185, 186, 187, 188,
	199, 200, 201, 203, 206, 207, 208, 209, 210, 213,
	215, 216, 217, 218, 219, 220, 229, 232, 238, 239,
	240, 241, 242, 243, 245, 248, 249, 250, 251, 258,
	262, 268, 269, 278, 285, 288, 0, 0, 0, 0,
	115, 166, 184, 244, 247, 253, 260, 313, 314, 315,
	171, 172, 205, 0, 0, 0, 0, 227, 197, 163,
	0, 142, 173, 138, 0, 0, 0, 175, 0, 0,
	0, 177, 0, 0, 256, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 108, 109, 110, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 0, 0, 0, 316, 0, 0,
	0, 0, 224, 0, 261, 154, 174, 127, 168, 112,
	123, 0, 153, 202, 233, 237, 0, 0, 0, 135,
	0, 235, 212, 277, 0, 214, 234, 178, 267, 225,
	276, 286, 287, 264, 284, 291, 252, 116, 263, 275,
	132, 246, 0, 0, 0, 118, 273, 259, 190, 164,
	165, 117, 0, 231, 141, 149, 137, 204, 270, 271,
	136, 294, 124, 283, 120, 125, 282, 198, 266, 274,
	191, 183, 119, 272, 189, 182, 170, 145, 156, 222,
	180, 223, 157, 194, 193, 195, 0, 0, 0, 257,
	280, 295, 129, 0, 265, 289, 290, 0, 226, 130,
	150, 144, 221, 148, 196, 126, 159, 254, 169, 179,
	230, 293, 211, 236, 133, 279, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 121, 176, 292,
	228, 147, 281, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 114,
	122, 128, 134, 139, 143, 146, 152, 155, 158, 160,
	161, 162, 167, 181, 185, 186, 187, 188, 199, 200,
	201, 203, 206, 207, 208, 209, 210, 213, 215, 216,
	217, 218, 219, 220, 229, 232, 238, 239, 240, 241,
	242, 243, 245, 248, 249, 250, 251, 258, 262, 268,
	269, 278, 285, 288, 0, 0, 0, 0, 115, 166,
	184, 244, 247, 253, 260, 313, 314, 315, 171, 172,
	205, 0, 0, 0, 0, 227, 197, 163, 0, 142,
	173, 138, 0, 0, 0, 175, 0, 0, 0, 177,
	0, 0, 256, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 108, 109, 110, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 0, 316, 0, 0, 0, 0,
	224, 0, 261, 154, 174, 127, 168, 112, 123, 0,
	153, 202, 233, 237, 0, 0, 0, 135, 0, 235,
	212, 277, 0, 214, 234, 178, 267, 225, 276, 286,
	287, 264, 284, 291, 252, 116, 263, 275, 132, 246,
	0, 0, 0, 118, 273, 259, 190, 164, 165, 117,
	0, 231, 141, 149, 137, 204, 270, 271, 136, 294,
	124, 283, 120, 125, 282, 198, 266, 274, 191, 183,
	119, 272, 189, 182, 170, 145, 156, 222, 180, 223,
	157, 194, 193, 195, 0, 0, 0, 257, 280, 295,
	129, 0, 265, 289, 290, 0, 226, 130, 150, 144,
	221, 148, 196, 126, 159, 254, 169, 179, 230, 293,
	211, 236, 133, 279, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 121, 176, 292, 228, 147,
	281, 0, 0, 140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 114, 122, 128,
	134, 139, 143, 146, 152, 155, 158, 160, 161, 162,
	167, 181, 185, 186, 187, 188, 199, 200, 201, 203,
	206, 207, 208, 209, 210, 213, 215, 216, 217, 218,
	219, 220, 229, 232, 238, 239, 240, 241, 242, 243,
	245, 248, 249, 250, 251, 258, 262, 268, 269, 278,
	285, 288, 0, 0, 0, 0, 115, 166, 184, 244,
	247, 253, 260, 313, 314, 315, 810, 811, 205, 0,
	0, 0, 0, 227, 197, 163, 0, 142, 173, 138,
	0, 0, 0, 175, 0, 0, 0, 177, 0, 0,
	256, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	108, 109, 110, 0, 1092, 0, 0, 0, 0, 0,
	0, 131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 0, 316, 0, 0, 0, 0, 224, 0,
	261, 154, 174, 127, 168, 112, 123, 0, 153, 202,
	233, 237, 0, 0, 0, 135, 0, 235, 212, 277,
	0, 214, 234, 178, 267, 225, 276, 286, 287, 264,
	284, 291, 252, 116, 263, 275, 132, 246, 0, 0,
	0, 118, 273, 259, 190, 164, 165, 117, 0, 231,
	141, 149, 137, 204, 270, 271, 136, 294, 124, 283,
	120, 125, 282, 198, 266, 274, 191, 183, 119, 272,
	189, 182, 170, 145, 156, 222, 180, 223, 157, 194,
	193, 195, 0, 0, 0, 257, 280, 295, 129, 0,
	265, 289, 290, 0, 226, 130, 150, 144, 221, 148,
	196, 126, 159, 254, 169, 179, 230, 293, 211, 236,
	133, 279, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 121, 176, 292, 228, 147, 281, 0,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 114, 122, 128, 134, 139,
	143, 146, 152, 155, 158, 160, 161, 162, 167, 181,
	185, 186, 187, 188, 199, 200, 201, 203, 206, 207,
	208, 209, 210, 213, 215, 216, 217, 218, 219, 220,
	229, 232, 238, 239, 240, 241, 242, 243, 245, 248,
	249, 250, 251, 258, 262, 268, 269, 278, 285, 288,
	0, 0, 0, 0, 115, 166, 184, 244, 247, 253,
	260, 313, 314, 315, 171, 172, 205, 0, 0, 0,
	0, 227, 197, 163, 0, 142, 173, 138, 0, 0,
	0, 175, 0, 0, 0, 177, 0, 0, 256, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 108, 109,
	110, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 0,
	0, 316, 0, 0, 0, 0, 224, 0, 261, 154,
	174, 127, 168, 112, 123, 0, 153, 202, 233, 237,
	0, 0, 0, 135, 0, 235, 212, 277, 0, 214,
	234, 178, 267, 225, 276, 286, 287, 264, 284, 291,
	252, 116, 263, 275, 132, 246, 0, 0, 0, 118,
	273, 259, 190, 164, 165, 117, 0, 231, 141, 149,
	137, 204, 270, 271, 136, 294, 124, 283, 120, 125,
	282, 198, 266, 274, 191, 183, 119, 272, 189, 182,
	170, 145, 156, 222, 180, 223, 157, 194, 193, 195,
	0, 0, 0, 257, 280, 295, 129, 0, 265, 289,
	290, 0, 226, 130, 150, 144, 221, 148, 196, 126,
	159, 254, 169, 179, 230, 293, 211, 236, 133, 279,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 121, 176, 292, 228, 147, 281, 0, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 114, 122, 128, 134, 139, 143, 146,
	152, 155, 158, 160, 161, 162, 167, 181, 185, 186,
	187, 188, 199, 200, 201, 203, 206, 207, 208, 209,
	210, 213, 215, 216, 217, 218, 219, 220, 229, 232,
	238, 239, 240, 241, 242, 243, 245, 248, 249, 250,
	251, 258, 262, 268, 269, 278, 285, 288, 0, 0,
	0, 0, 115, 166, 184, 244, 247, 253, 260, 313,
	314, 315, 171, 172, 205, 0, 0, 0, 0, 227,
	197, 163, 0, 142, 173, 138, 0, 0, 0, 175,
	0, 0, 0, 177, 0, 0, 256, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 108, 109, 110, 0,
	1216, 0, 0, 0, 0, 0, 0, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 316,
	0, 0, 0, 0, 224, 0, 261, 154, 174, 127,
	168, 112, 123, 0, 153, 202, 233, 237, 0, 0,
	0, 135, 0, 235, 212, 277, 0, 214, 234, 178,
	267, 225, 276, 286, 287, 264, 284, 291, 252, 116,
	263, 275, 132, 246, 0, 0, 0, 118, 273, 259,
	190, 164, 165, 117, 0, 231, 141, 149, 137, 204,
	270, 271, 136, 294, 124, 283, 120, 125, 282, 198,
	266, 274, 191, 183, 119, 272, 189, 182, 170, 145,
	156, 222, 180, 223, 157, 194, 193, 195, 0, 0,
	0, 257, 280, 295, 129, 0, 265, 289, 290, 0,
	226, 130, 150, 144, 221, 148, 196, 126, 159, 254,
	169, 179, 230, 293, 211, 236, 133, 279, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 121,
	176, 292, 228, 147, 281, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 114, 122, 128, 134, 139, 143, 146, 152, 155,
	158, 160, 161, 162, 167, 181, 185, 186, 187, 188,
	199, 200, 201, 203, 206, 207, 208, 209, 210, 213,
	215, 216, 217, 218, 219, 220, 229, 232, 238, 239,
	240, 241, 242, 243, 245, 248, 249, 250, 251, 258,
	262, 268, 269, 278, 285, 288, 0, 0, 0, 0,
	115, 166, 184, 244, 247, 253, 260, 313, 314, 315,
	171, 172, 205, 0, 0, 0, 0, 227, 197, 163,
	797, 142, 173, 138, 0, 0, 0, 175, 0, 0,
	0, 177, 0, 0, 256, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 108, 109, 110, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 0, 0, 0, 316, 0, 0,
	0, 0, 224, 0, 261, 154, 174, 127, 168, 112,
	123, 0, 153, 202, 233, 237, 0, 0, 0, 135,
	0, 235, 212, 277, 0, 214, 234, 178, 267, 225,
	276, 286, 287, 264, 284, 291, 252, 116, 263, 275,
	132, 246, 0, 0, 0, 118, 273, 259, 190, 164,
	165, 117, 0, 231, 141, 149, 137, 204, 270, 271,
	136, 294, 124, 283, 120, 125, 282, 198, 266, 274,
	191, 183, 119, 272, 189, 182, 170, 145, 156, 222,
	180, 223, 157, 194, 193, 195, 0, 0, 0, 257,
	280, 295, 129, 0, 265, 289, 290, 0, 226, 130,
	150, 144, 221, 148, 196, 126, 159, 254, 169, 179,
	230, 293, 211, 236, 133, 279, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 121, 176, 292,
	228, 147, 281, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 114,
	122, 128, 134, 139, 143, 146, 152, 155, 158, 160,
	161, 162, 167, 181, 185, 186, 187, 188, 199, 200,
	201, 203, 206, 207, 208, 209, 210, 213, 215, 216,
	217, 218, 219, 220, 229, 232, 238, 239, 240, 241,
	242, 243, 245, 248, 249, 250, 251, 258, 262, 268,
	269, 278, 285, 288, 0, 0, 0, 0, 115, 166,
	184, 244, 247, 253, 260, 313, 314, 315, 171, 172,
	205, 0, 0, 0, 0, 227, 197, 163, 0, 142,
	173, 138, 0, 0, 0, 175, 0, 0, 0, 177,
	0, 0, 256, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 109, 110, 0, 794, 0, 0, 0,
	0, 0, 0, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 0, 316, 0, 0, 0, 0,
	224, 0, 261, 154, 174, 127, 168, 112, 123, 0,
	153, 202, 233, 237, 0, 0, 0, 135, 0, 235,
	212, 277, 0, 214, 234, 178, 267, 225, 276, 286,
	287, 264, 284, 291, 252, 116, 263, 275, 132, 246,
	0, 0, 0, 118, 273, 259, 190, 164, 165, 117,
	0, 231, 141, 149, 137, 204, 270, 271, 136, 294,
	124, 283, 120, 125, 282, 198, 266, 274, 191, 183,
	119, 272, 189, 182, 170, 145, 156, 222, 180, 223,
	157, 194, 193, 195, 0, 0, 0, 257, 280, 295,
	129, 0, 265, 289, 290, 0, 226, 130, 150, 144,
	221, 148, 196, 126, 159, 254, 169, 179, 230, 293,
	211, 236, 133, 279, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 121, 176, 292, 228, 147,
	281, 0, 0, 140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 114, 122, 128,
	134, 139, 143, 146, 152, 155, 158, 160, 161, 162,
	167, 181, 185, 186, 187, 188, 199, 200, 201, 203,
	206, 207, 208, 209, 210, 213, 215, 216, 217, 218,
	219, 220, 229, 232, 238, 239, 240, 241, 242, 243,
	245, 248, 249, 250, 251, 258, 262, 268, 269, 278,
	285, 288, 0, 0, 0, 0, 115, 166, 184, 244,
	247, 253, 260, 313, 314, 315, 171, 172, 205, 0,
	0, 0, 0, 227, 197, 163, 0, 142, 173, 833,
	0, 0, 0, 175, 0, 0, 0, 177, 0, 0,
	256, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	108, 109, 110, 0, 832, 0, 0, 0, 0, 0,
	0, 131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 0, 316, 0, 0, 0, 0, 224, 0,
	261, 154, 174, 127, 168, 112, 123, 0, 153, 202,
	233, 237, 0, 0, 0, 135, 0, 235, 212, 277,
	0, 214, 234, 178, 267, 225, 276, 286, 287, 264,
	284, 291, 252, 116, 263, 275, 132, 246, 0, 0,
	0, 118, 273, 259, 190, 164, 165, 117, 0, 231,
	141, 149, 137, 204, 270, 271, 136, 294, 124, 283,
	120, 125, 282, 198, 266, 274, 191, 183, 119, 272,
	189, 182, 170, 145, 156, 222, 180, 223, 157, 194,
	193, 195, 0, 0, 0, 257, 280, 295, 129, 0,
	265, 289, 290, 0, 226, 130, 150, 144, 221, 148,
	196, 126, 159, 254, 169, 179, 230, 293, 211, 236,
	133, 279, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 121, 176, 292, 228, 147, 281, 0,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 114, 122, 128, 134, 139,
	143, 146, 152, 155, 158, 160, 161, 162, 167, 181,
	185, 186, 187, 188, 199, 200, 201, 203, 206, 207,
	208, 209, 210, 213, 215, 216, 217, 218, 219, 220,
	229, 232, 238, 239, 240, 241, 242, 243, 245, 248,
	249, 250, 251, 258, 262, 268, 269, 278, 285, 288,
	0, 0, 0, 0, 115, 166, 184, 244, 247, 253,
	260, 313, 314, 315, 171, 172, 0, 455, 0, 0,
	0, 227, 197, 163, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 173, 138, 0, 0, 0, 175,
	0, 0, 0, 177, 0, 0, 256, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 108, 109, 110, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 316,
	0, 0, 0, 0, 224, 0, 261, 154, 174, 127,
	168, 112, 123, 0, 153, 202, 233, 237, 0, 0,
	0, 135, 0, 235, 212, 277, 0, 214, 234, 178,
	267, 225, 276, 286, 287, 264, 284, 291, 252, 116,
	263, 275, 132, 246, 0, 0, 0, 118, 273, 259,
	190, 164, 165, 117, 0, 231, 141, 149, 137, 204,
	270, 271, 136, 294, 124, 283, 120, 125, 282, 198,
	266, 274, 191, 183, 119, 272, 189, 182, 170, 145,
	156, 222, 180, 223, 157, 194, 193, 195, 0, 0,
	0, 257, 280, 295, 129, 0, 265, 289, 290, 0,
	226, 130, 150, 144, 221, 148, 196, 126, 159, 254,
	169, 179, 230, 293, 211, 236, 133, 279, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 121,
	176, 292, 228, 147, 281, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 114, 122, 128, 134, 139, 143, 146, 152, 155,
	158, 160, 161, 162, 167, 181, 185, 186, 187, 188,
	199, 200, 201, 203, 206, 207, 208, 209, 210, 213,
	215, 216, 217, 218, 219, 220, 229, 232, 238, 239,
	240, 241, 242, 243, 245, 248, 249, 250, 251, 258,
	262, 268, 269, 278, 285, 288, 0, 0, 0, 0,
	115, 166, 184, 244, 247, 253, 260, 313, 314, 315,
	171, 172, 205, 0, 0, 0, 0, 227, 197, 163,
	0, 142, 173, 138, 0, 0, 0, 175, 0, 0,
	0, 177, 0, 0, 256, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 108, 109, 110, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 0, 308, 0, 316, 0, 0,
	0, 0, 224, 0, 261, 154, 174, 127, 168, 112,
	123, 0, 153, 202, 233, 237, 0, 0, 0, 135,
	0, 235, 212, 277, 0, 214, 234, 178, 267, 225,
	276, 286, 287, 264, 284, 291, 252, 116, 263, 275,
	132, 246, 0, 0, 0, 118, 273, 259, 190, 164,
	165, 117, 0, 231, 141, 149, 137, 204, 270, 271,
	136, 294, 124, 283, 120, 125, 282, 198, 266, 274,
	191, 183, 119, 272, 189, 182, 170, 145, 156, 222,
	180, 223, 157, 194, 193, 195, 0, 0, 0, 257,
	280, 295, 129, 0, 265, 289, 290, 0, 226, 130,
	150, 144, 221, 148, 196, 126, 159, 254, 169, 179,
	230, 293, 211, 236, 133, 279, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 121, 176, 292,
	228, 147, 281, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 114,
	122, 128, 134, 139, 143, 146, 152, 155, 158, 160,
	161, 162, 167, 181, 185, 186, 187, 188, 199, 200,
	201, 203, 206, 207, 208, 209, 210, 213, 215, 216,
	217, 218, 219, 220, 229, 232, 238, 239, 240, 241,
	242, 243, 245, 248, 249, 250, 251, 258, 262, 268,
	269, 278, 285, 288, 0, 0, 0, 0, 115, 166,
	184, 244, 247, 253, 260, 313, 314, 315, 171, 172,
	205, 0, 0, 0, 0, 227, 197, 163, 0, 142,
	173, 138, 0, 0, 0, 175, 0, 0, 0, 177,
	0, 0, 256, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 109, 110, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 0, 316, 0, 0, 0, 0,
	224, 0, 261, 154, 174, 127, 168, 112, 123, 0,
	153, 202, 233, 237, 0, 0, 0, 135, 0, 235,
	212, 277, 0, 214, 234, 178, 267, 225, 276, 286,
	287, 264, 284, 291, 252, 116, 263, 275, 132, 246,
	0, 0, 0, 118, 273, 259, 190, 164, 165, 117,
	0, 231, 141, 149, 137, 204, 270, 271, 136, 294,
	124, 283, 120, 125, 282, 198, 266, 274, 191, 183,
	119, 272, 189, 182, 170, 145, 156, 222, 180, 223,
	157, 194, 193, 195, 0, 0, 0, 257, 280, 295,
	129, 0, 265, 289, 290, 0, 226, 130, 150, 144,
	221, 148, 196, 126, 159, 254, 169, 179, 230, 293,
	211, 236, 133, 279, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 121, 176, 292, 228, 147,
	281, 0, 0, 140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 114, 122, 128,
	134, 139, 143, 146, 152, 155, 158, 160, 161, 162,
	167, 181, 185, 186, 187, 188, 199, 200, 201, 203,
	206, 207, 208, 209, 210, 213, 215, 216, 217, 218,
	219, 220, 229, 232, 238, 239, 240, 241, 242, 243,
	245, 248, 249, 250, 251, 258, 262, 268, 269, 278,
	285, 288, 0, 0, 0, 0, 115, 166, 184, 244,
	247, 253, 260, 313, 314, 315, 171, 172, 0, 0,
	0, 0, 0, 227, 197, 163,
}

var yyPact = [...]int{
	107, -1000, -298, 1182, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1141, 920, -1000, -1000, -1000, -1000, -1000,
	-1000, 332, 13364, 89, 195, 66, 18774, 193, 165, 19132,
	-1000, 60, -1000, 43, 19132, 51, -23, -1000, -1000, -30,
	-45, -1000, 10858, -259, -1000, 470, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 926, 1131, 1132,
	1139, 649, 1101, -1000, 9405, 138, 138, 18416, 7595, -1000,
	-1000, 658, 19132, 174, 19132, -116, 160, 133, 133, 133,
	182, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 177, 19132, 654, 654,
	357, -1000, 19132, 135, 654, 135, 135, 135, 19132, -1000,
	243, -1000, -1000, -1000, -1000, -1000, -1000, 19132, 654, 1072,
	411, 255, 4942, -1000, 414, -1000, 4942, 69, 4942, -18,
	1153, 70, 19, -1000, 654, -63, -1000, -1000, -1000, -1000,
	-1000, -1000, 157, -1000, -1000, 19132, -55, 199, 326, -1000,
	-1000, -1000, -1000, -1000, -1000, 622, 723, -1000, 10858, 1950,
	825, 825, -1000, -1000, 211, -1000, -1000, 11932, 11932, 11932,
	11932, 11932, 11932, 11932, 11932, 11932, 12290, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 825, 238, -1000, 10497, 825, 825, 825, 825, 825,
	825, 825, 825, 10858, 825, 825, 825, 825, 825, 825,
	825, 825, 825, 825, 825, 825, 825, 825, 825, 825,
	-1000, -1000, -246, -281, 19132, -1000, 19132, 555, 1141, -1000,
	920, -1000, -1000, -1000, 1074, 10858, 10858, 1141, -1000, 1022,
	9405, -1000, -1000, 1057, -1000, -1000, -1000, -1000, 376, 1166,
	-1000, 13006, 236, 17334, 15902, 19132, 788, 777, -1000, -1000,
	235, 813, 7216, -90, -1000, -1000, -1000, 194, 18050, -1000,
	-1000, -1000, 1067, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 912, 19132, -1000, 370, -1000, 654, 1120, -33,
	19132, 654, 339, 654, 19132, 133, 19132, 4942, 4942, 4942,
	76, 110, 106, 19132, 780, 156, 19132, 1094, 957, 19132,
	654, 654, -1000, 6458, -1000, 4942, 411, -1000, 554, 10858,
	4942, 4942, 4942, 19132, 4942, 4942, -1000, -1000, -1000, 394,
	581, -1000, -1000, -1000, -1000, -1000, 4942, 4942, -1000, 1165,
	381, -1000, -1000, -1000, -1000, 10858, 281, -1000, 956, -1000,
	-1000, -82, 47, -1000, 19132, -1000, 1182, -1000, -1000, -1000,
	-111, -1000, -1000, 10858, 10858, 10858, 10858, 656, 382, -1000,
	428, 11932, 542, 531, 11932, 11932, 11932, 11932, 11932, 11932,
	11932, 11932, 11932, 11932, 11932, 11932, 11932, 11932, 11932, 779,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 654, -1000,
	1178, 960, 960, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 12648, -1000, 7961, 6458, 649, 894, 1141, 9405,
	9405, 10858, 10858, 10127, 9766, 9405, 1069, 342, 723, 19132,
	-1000, -1000, 11574, -1000, -1000, -1000, -1000, -1000, 564, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 19132, 19132, 9405, 9405,
	9405, 9405, 9405, 654, 654, 654, 867, 545, -1000, -1000,
	1132, 649, 1057, -1000, 1174, 270, 648, 770, -1000, 735,
	1132, 15186, 890, -1000, 1057, -1000, -1000, -1000, 19132, 382,
	-1000, -1000, 17692, -1000, -1000, 6079, 94, 19132, -1000, 835,
	1017, -1000, -1000, -1000, -1000, 1115, 13734, 14100, 14828, 825,
	-1000, -1000, 94, 606, 15902, 19132, -1000, -1000, 15902, 19132,
	5700, 6837, -90, -1000, 703, -1000, -86, -69, 8683, 8322,
	184, -1000, -1000, -1000, -1000, 4563, 643, 593, 523, -22,
	-1000, -1000, -1000, 860, -1000, 860, 860, 860, 860, 13,
	13, 13, 13, -1000, -1000, -1000, -1000, -1000, 925, 924,
	-1000, 860, 860, 860, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 921, 921, 921, 900, 900, 936, 920, 19132,
	159, -1000, 1108, 4942, 1093, 4942, -1000, 19132, 186, -1000,
	-1000, -1000, 19132, 19132, 19132, 19132, 19132, 206, 19132, 19132,
	767, -1000, 19132, 4942, -1000, -1000, 233, -1000, -1000, -1000,
	-1000, -1000, 723, -1000, -1000, -1000, -1000, -1000, -1000, 19132,
	-1000, -1000, 19132, -1000, 17334, -1000, -1000, 19132, 411, 19132,
	19132, 723, -1000, 552, 19132, -1000, 19132, -1000, 16976, -1000,
	-1000, -1000, -1000, 723, 428, 452, 447, -1000, -1000, 612,
	-1000, -1000, -1000, 1796, -1000, -1000, -1000, -1000, 542, 11932,
	11932, 11932, 335, 1796, 1813, 754, 1979, 239, 664, 664,
	263, 263, 263, 263, 263, 588, 588, -1000, -1000, -1000,
	564, -1000, -1000, -1000, 564, 9405, 9405, 745, 825, 231,
	-1000, 926, -1000, -1000, 1132, 884, 884, 455, 807, 373,
	1164, 884, 351, 1158, 884, 884, 9405, -1000, -1000, 511,
	-1000, 10858, 564, -1000, 230, -1000, 1360, 736, 705, 884,
	564, 564, 884, 884, -257, -1000, 858, -1000, -1000, 579,
	-1000, 322, -1000, 1074, -1000, -1000, 1013, 10858, 10858, 10858,
	-1000, -1000, -1000, 1074, 1135, -1000, 1053, 1045, 1148, 9405,
	15902, 1057, -1000, -1000, -1000, 229, 928, 825, -1000, 19132,
	15902, 16618, 16618, 15902, 16618, -1000, 985, 984, -1000, 1032,
	972, 1039, 19132, -1000, 892, 564, 649, 13734, -1000, -1000,
	16260, -1000, -1000, 222, 825, 9405, 1148, 15902, 666, -1000,
	666, -1000, 225, -1000, -1000, 703, -90, -99, -1000, -1000,
	-1000, -1000, 723, -1000, -1000, 723, -1000, 789, 697, 4184,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 919, 654, -1000,
	1084, 267, 405, 654, 1083, -1000, -1000, -1000, 1077, -1000,
	377, -21, -1000, -1000, 463, 13, 13, -1000, -1000, 184,
	1066, 184, 184, 184, 551, 551, -1000, -1000, -1000, -1000,
	462, -1000, -1000, -1000, 443, -1000, 955, 19132, 1182, 1106,
	19132, 920, -1000, -1000, -1000, -1000, -1000, 1637, 1637, 279,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 93, 859, -1000, -1000, -1000, -1000, 44, 75, 153,
	-1000, 4942, -1000, 6458, 381, 411, 916, 381, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 335, 1796, 1741, -1000, 11932, 11932, -1000, -1000, 884,
	884, 9405, 6458, 1141, 1074, -1000, -1000, 457, 779, 457,
	11932, 11932, -1000, 11932, 11932, -1000, -130, 790, 328, -1000,
	10858, 561, -1000, 6458, -1000, 11932, 11932, -1000, -1000, -1000,
	-1000, -1000, 536, -1000, -1000, -1000, -1000, -1000, 545, -1000,
	-1000, 313, -1000, 960, -1000, 1009, 723, 723, -1000, -1000,
	19132, -1000, -1000, -1000, -1000, 1145, 10858, -1000, 690, -1000,
	5321, 950, 19132, 825, 1182, 14470, 19132, 773, -1000, 307,
	1017, 932, 949, 1000, -1000, -1000, -1000, -1000, 976, -1000,
	970, -1000, -1000, -1000, -1000, -1000, -1000, 649, -1000, -1000,
	172, 170, 162, 19132, 564, 1141, 666, -1000, -1000, 259,
	-1000, -1000, -98, -89, -1000, -1000, -1000, 4563, -1000, 4563,
	19132, 115, -1000, 654, 654, -1000, -1000, 910, 945, 11932,
	-1000, -1000, -1000, 585, 184, 184, -1000, 310, -1000, -1000,
	-1000, 878, -1000, 865, 644, 833, 19132, -1000, 920, 1104,
	1182, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19132, -1000,
	-1000, -1000, -1000, -1000, 19132, -140, 654, 19132, 19132, 19132,
	19132, -1000, 224, 411, -1000, 411, 19132, 411, -1000, 11932,
	1796, 1796, -1000, -1000, 564, -1000, 1132, -1000, 564, 860,
	860, -1000, 860, 900, -1000, 860, 35, 860, 34, 564,
	564, 2195, 2133, 1965, 1780, 825, -123, -1000, 723, 10858,
	-1000, 1704, 1650, 509, -1000, 960, -1000, -1000, -1000, 1143,
	1137, 723, -1000, -1000, 1086, 684, 614, -1000, -1000, 9044,
	829, 221, 822, -1000, 1148, 19132, 10858, -1000, -1000, 10858,
	882, -1000, 10858, -1000, -1000, -1000, 1141, 825, 825, 825,
	822, -1000, 1132, -1000, -1000, -1000, -1000, 4184, -1000, 819,
	-1000, 860, -1000, -1000, -1000, 19132, -10, 1173, 1796, -1000,
	-1000, -1000, -1000, -1000, 13, 481, 13, 440, -1000, 421,
	4942, 1182, 920, -1000, -1000, -1000, -1000, 1088, -1000, 6458,
	-1000, -1000, 854, 934, -1000, -1000, 6458, -1000, -1000, 816,
	-1000, -1000, 1796, -1000, 1074, -1000, -1000, 166, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 11932, 11932, 11932, 11932,
	11932, 1132, 480, 723, 11932, 11932, -1000, -1000, -1000, 10858,
	10858, 1082, -1000, 825, -1000, 938, 19132, 19132, -1000, 19132,
	1141, -1000, 723, 723, 19132, 723, 15544, 19132, 19132, 14100,
	-1000, 218, 19132, -1000, 738, 242, -1000, -67, 184, -1000,
	184, 583, 566, -1000, 1182, 825, 630, -1000, 297, 19132,
	19132, -1000, -1000, 19132, -1000, -1000, -1000, 1360, 1360, 1360,
	1360, 67, 564, -1000, 1360, 1360, 723, 622, 1172, -1000,
	825, 1182, 219, -1000, -1000, 1132, 728, 720, -1000, 720,
	720, 222, 218, -1000, 654, 294, 472, -1000, 108, 359,
	1080, -1000, 1079, -1000, -1000, -1000, -1000, -1000, 92, 6458,
	4563, 693, -1000, -1000, -1000, -1000, -1000, -1000, 564, 88,
	-143, -1000, -1000, -1000, 19132, 614, 19132, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 413, -1000, -1000, 19132, -1000,
	395, -1000, -1000, 616, -1000, 19132, -1000, -1000, 859, -1000,
	999, -138, -152, 610, -1000, -1000, 851, -1000, -1000, 92,
	1043, -140, -1000, 995, -1000, 19132, -1000, 82, -1000, -141,
	600, 80, -150, 944, 825, -153, 929, -1000, 1157, 11216,
	-1000, -1000, 1169, 232, 232, 1360, 564, -1000, -1000, -1000,
	123, 467, -1000, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1412, 1411, 27, 65, 68, 1409, 1408, 1406, 123,
	122, 109, 1405, 1404, 1403, 1402, 1393, 1392, 1387, 1386,
	1385, 1384, 1383, 1382, 1378, 1374, 1373, 1372, 1369, 1366,
	1363, 1362, 1361, 1188, 1360, 1359, 1356, 1355, 1354, 90,
	1353, 79, 1348, 1347, 1346, 1343, 1342, 1335, 1334, 1333,
	1332, 1331, 48, 272, 63, 67, 1330, 62, 2321, 38,
	64, 61, 66, 1329, 1328, 35, 1327, 1326, 82, 1325,
	1323, 58, 1322, 1320, 56, 74, 77, 1319, 12, 22,
	1317, 1316, 1315, 1314, 32, 1420, 1313, 1312, 15, 1310,
	1309, 107, 1308, 1307, 69, 31, 13, 24, 23, 1305,
	70, 1303, 6, 1302, 60, 1300, 1298, 1294, 1293, 39,
	1292, 59, 1288, 14, 41, 1286, 7, 1282, 76, 33,
	25, 8, 1280, 1278, 19, 78, 54, 72, 1277, 84,
	1274, 1272, 462, 1267, 997, 51, 1266, 1265, 106, 40,
	1264, 110, 83, 1262, 1261, 1260, 1258, 21, 925, 1930,
	30, 80, 1257, 1255, 1253, 2586, 36, 57, 18, 1251,
	1250, 1249, 37, 102, 44, 1247, 1245, 45, 1244, 1242,
	1241, 1238, 1237, 1236, 1235, 195, 1232, 1230, 1229, 17,
	20, 1226, 1224, 71, 34, 1222, 1221, 1220, 49, 75,
	1219, 1218, 53, 1217, 81, 46, 1216, 1215, 1213, 1212,
	1211, 26, 11, 1210, 16, 1209, 10, 1208, 29, 1207,
	4, 1206, 9, 1203, 3, 0, 1201, 5, 1200, 1198,
	52, 1, 1196, 2, 42, 1195, 1194, 1193, 87, 1192,
	1191, 1546, 1197, 85, 1190, 91,
}

var yyR1 = [...]int{
	0, 229, 230, 230, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 215, 215, 215, 218, 219,
	20, 3, 3, 3, 3, 2, 2, 8, 4, 5,
	5, 9, 9, 42, 42, 10, 11, 11, 11, 11,
	233, 233, 68, 68, 69, 69, 118, 118, 12, 13,
	13, 127, 127, 126, 126, 126, 128, 128, 128, 128,
	165, 165, 130, 130, 129, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 38, 38, 32, 32, 32, 32,
	35, 35, 35, 35, 35, 35, 50, 50, 50, 217,
	217, 216, 214, 214, 213, 213, 212, 21, 21, 197,
	199, 199, 198, 198, 198, 198, 189, 168, 168, 168,
	168, 171, 171, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 170, 170, 170, 170, 170, 172, 172, 172,
	172, 172, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 174, 174, 174,
	174, 174, 174, 174, 174, 188, 188, 175, 175, 183,
	183, 184, 184, 184, 181, 181, 182, 182, 185, 185,
	185, 177, 177, 178, 178, 186, 186, 179, 179, 179,
	180, 180, 180, 187, 187, 187, 187, 187, 176, 176,
	190, 190, 207, 207, 206, 206, 206, 34, 196, 196,
	203, 203, 203, 203, 203, 193, 193, 193, 194, 194,
	192, 192, 195, 195, 205, 205, 204, 191, 191, 208,
	208, 208, 208, 222, 223, 221, 221, 221, 221, 221,
	200, 200, 200, 201, 201, 201, 202, 202, 202, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	211, 209, 209, 210, 210, 16, 22, 22, 17, 17,
	17, 17, 17, 18, 18, 23, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 136, 136, 138,
	138, 134, 134, 137, 137, 135, 135, 135, 139, 139,
	139, 140, 140, 166, 166, 166, 25, 25, 27, 27,
	28, 29, 29, 160, 160, 161, 161, 30, 31, 43,
	43, 43, 43, 43, 43, 45, 45, 45, 7, 7,
	7, 7, 44, 44, 44, 6, 6, 26, 26, 26,
	26, 19, 234, 39, 40, 40, 41, 41, 41, 47,
	47, 47, 46, 46, 46, 54, 54, 56, 56, 56,
	56, 56, 57, 57, 57, 57, 57, 57, 53, 53,
	55, 55, 55, 55, 55, 152, 152, 152, 151, 151,
	59, 59, 60, 60, 61, 61, 61, 64, 62, 62,
	62, 62, 101, 77, 77, 117, 117, 116, 116, 119,
	119, 63, 63, 63, 63, 65, 65, 66, 66, 67,
	67, 159, 159, 158, 158, 158, 157, 157, 70, 70,
	70, 72, 71, 71, 71, 71, 73, 73, 75, 75,
	74, 74, 74, 74, 76, 78, 78, 78, 78, 78,
	79, 79, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 133, 133, 81, 81, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 93, 93, 93, 93, 93,
	93, 82, 82, 82, 82, 82, 82, 82, 52, 52,
	94, 94, 94, 228, 228, 100, 95, 95, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 92, 51, 51, 89, 89, 89, 89,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 235,
	235, 91, 90, 90, 90, 90, 90, 90, 90, 48,
	48, 48, 48, 48, 164, 164, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 105,
	105, 49, 49, 103, 103, 104, 106, 106, 102, 102,
	102, 84, 84, 84, 84, 84, 84, 84, 84, 86,
	86, 86, 107, 107, 108, 108, 109, 109, 110, 110,
	111, 112, 112, 112, 113, 113, 113, 113, 114, 114,
	114, 83, 83, 83, 83, 115, 115, 115, 115, 120,
	120, 96, 96, 98, 98, 97, 99, 121, 121, 124,
	122, 122, 122, 125, 125, 125, 125, 125, 125, 125,
	123, 123, 123, 154, 154, 154, 131, 131, 141, 141,
	142, 142, 132, 132, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 144, 144, 144, 145, 145, 146,
	146, 146, 153, 153, 149, 149, 150, 150, 155, 155,
	156, 156, 224, 225, 226, 226, 227, 227, 227, 33,
	36, 36, 37, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	231, 232, 162, 163, 163, 163,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
	2, 4, 6, 6, 7, 4, 6, 5, 8, 1,
	3, 7, 8, 1, 1, 10, 8, 7, 6, 6,
	1, 1, 1, 3, 1, 3, 0, 4, 3, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 2, 2, 8, 5, 7,
	6, 8, 5, 5, 0, 1, 4, 5, 7, 4,
	5, 5, 4, 4, 4, 3, 1, 1, 1, 0,
	2, 1, 0, 2, 1, 3, 3, 4, 5, 4,
	2, 4, 1, 3, 3, 3, 8, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 1, 4, 4, 2, 2, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 0, 1,
	2, 0, 2, 0, 3, 0, 1, 0, 3, 3,
	0, 2, 2, 0, 2, 1, 2, 1, 0, 2,
	5, 4, 1, 2, 2, 3, 2, 2, 0, 1,
	2, 3, 3, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 3, 2, 3, 1, 10,
	11, 11, 12, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 3, 1, 2, 3, 1, 1, 1, 6,
	7, 7, 7, 7, 4, 5, 4, 4, 7, 5,
	5, 5, 12, 7, 5, 9, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	7, 1, 3, 8, 8, 3, 3, 5, 4, 6,
	5, 4, 4, 3, 2, 3, 4, 4, 3, 4,
	4, 4, 4, 4, 4, 3, 2, 7, 2, 3,
	4, 3, 7, 5, 4, 2, 4, 4, 3, 3,
	5, 2, 6, 4, 3, 7, 4, 1, 1, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 2, 1, 1, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 5, 3, 2, 2, 3,
	3, 2, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 2, 3, 5, 0, 1, 2, 1, 1,
	0, 2, 1, 3, 1, 1, 1, 2, 1, 3,
	3, 3, 3, 3, 7, 0, 3, 1, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 5, 7, 3, 0, 5, 4, 5, 5,
	0, 2, 1, 3, 3, 3, 2, 3, 2, 1,
	2, 0, 3, 1, 1, 3, 3, 4, 4, 5,
	3, 4, 5, 6, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 1, 2, 3, 1, 3, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 3, 2, 1,
	1, 1, 1, 4, 1, 1, 4, 5, 5, 6,
	4, 4, 6, 6, 6, 8, 8, 8, 8, 9,
	8, 5, 4, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 8, 8, 0,
	2, 3, 4, 4, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 2, 3, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 0, 2, 0, 3, 1, 3,
	2, 0, 1, 1, 0, 2, 4, 4, 0, 2,
	4, 2, 1, 5, 4, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	1, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 0,
	1, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 0, 1, 0, 1, 3, 5,
	2, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -229, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -23, -24, -25, -27, -28,
	-29, -30, -31, -6, -26, -19, -20, -32, -35, -33,
	-34, -36, -37, -4, -231, 6, 7, -42, 9, 10,
	30, -21, 123, 124, 126, 125, 159, 127, 152, 53,
	173, 174, 176, 177, 178, 179, -45, 157, 158, 31,
	32, 129, 34, -38, 380, 370, 381, 382, 57, 8,
	262, 154, 153, 25, 383, -230, 384, -41, 5, -109,
	15, -3, -39, -234, -39, -39, -39, -39, -39, -197,
	-199, 57, 96, -146, 133, 77, -129, 254, 130, 131,
	-130, 137, -149, 371, 372, 373, -215, -148, 60, 61,
	62, 272, 145, 304, 305, 364, 173, 187, 181, 208,
	200, 273, 306, 146, 198, 201, 241, 143, 307, 228,
	235, 71, 176, 250, 308, 155, 196, 192, 29, 309,
	281, 190, 27, 310, 237, 213, 311, 277, 239, 191,
	236, 129, 312, 148, 141, 313, 214, 218, 314, 242,
	315, 316, 317, 383, 185, 186, 365, 318, 144, 244,
	212, 374, 375, 28, 142, 33, 274, 37, 163, 245,
	216, 319, 211, 207, 366, 320, 321, 322, 323, 210,
	184, 206, 41, 220, 219, 221, 240, 382, 203, 324,
	325, 326, 149, 327, 193, 18, 328, 329, 330, 331,
	332, 248, 158, 333, 161, 334, 335, 336, 337, 338,
	339, 238, 215, 217, 138, 165, 234, 381, 276, 340,
	246, 189, 341, 150, 162, 157, 249, 151, 342, 343,
	344, 345, 346, 347, 367, 348, 177, 368, 349, 350,
	351, 352, 172, 369, 243, 252, 40, 225, 353, 183,
	370, 140, 354, 174, 169, 230, 204, 164, 355, 356,
	194, 195, 209, 182, 205, 175, 166, 159, 357, 251,
	226, 278, 202, 199, 170, 358, 167, 168, 359, 231,
	232, 171, 275, 247, 197, 227, -132, 133, 254, 130,
	232, 135, 131, 131, 132, 133, 254, 130, 131, -74,
	-155, -215, -148, 371, 372, 373, 133, 131, 114, 201,
	241, 123, 229, 237, -138, 238, 165, -166, 131, -134,
	228, 231, 232, 171, 364, 175, 239, 243, 242, 233,
	-155, 175, -160, 180, -149, 178, -134, -43, 360, 127,
	-162, -162, 230, 230, -162, -95, -58, -80, 80, -85,
	29, 23, -84, -81, -102, -99, -100, 114, 115, 117,
	116, 118, 103, 104, 111, 81, 119, -89, -87, -88,
	-90, 64, 63, 72, 65, 66, 67, 68, 73, 74,
	75, -149, -155, -97, -231, 47, 48, 263, 264, 265,
	266, 271, 267, 83, 36, 253, 261, 260, 259, 257,
	258, 255, 256, 269, 270, 136, 254, 130, 109, 262,
	-215, -148, 364, 377, -39, 65, -39, -39, -5, -4,
	-231, 6, 20, 21, -113, 17, 16, -232, 59, -47,
	-56, 42, 43, -57, 21, 35, 46, 44, -40, -55,
	105, -58, -155, -132, -132, 11, -68, -69, -74, -76,
	-155, -122, -165, 175, -125, 243, 242, -150, -123, -149,
	-147, 241, 201, 240, 128, 279, 79, 22, 24, 223,
	82, 114, 16, 83, 113, 263, 123, 51, 280, 255,
	256, 253, 265, 266, 254, 229, 10, 282, 25, 153,
	21, 35, 107, 125, 86, 87, 156, 380, 23, 154,
	75, 285, 19, 54, 11, 13, 286, 287, 14, 136,
	135, 98, 132, 49, 8, 119, 26, 95, 45, 288,
	289, 290, 291, 292, 47, 96, 17, 257, 258, 31,
	293, 271, 160, 109, 52, 38, 80, 294, 295, 73,
	296, 76, 55, 77, 15, 50, 297, 298, 299, 300,
	97, 126, 262, 48, 301, 130, 6, 268, 30, 152,
	46, 302, 131, 85, 269, 270, 134, 74, 5, 137,
	32, 9, 53, 56, 259, 260, 261, 36, 84, 12,
	303, 78, -198, 96, -189, -215, -74, 132, -74, 262,
	133, -142, 136, -142, -142, 131, 131, -74, -215, -215,
	123, 125, 128, 55, -22, -74, -141, 136, -215, -141,
	-141, -141, -74, 120, -74, -215, 30, -139, 96, 12,
	254, -215, 165, 131, 166, 133, -163, -231, -150, -193,
	-215, 8, 132, 33, 144, -163, 169, 170, -163, -137,
	-136, 235, 236, 230, 234, 12, 170, 230, 168, -195,
	-215, 244, 134, -149, -138, -7, -3, -10, -9, -11,
	88, -162, -162, 58, 79, 77, 78, 95, -228, 69,
	-58, -82, 98, 80, 96, 97, 82, 100, 99, 110,
	103, 104, 105, 106, 107, 108, 109, 101, 102, 113,
	88, 89, 90, 91, 92, 93, 94, -133, -231, -100,
	-231, 121, 122, -85, -85, -85, -85, -85, -85, -85,
	-85, -85, -85, 64, -231, 120, -2, -95, -4, -231,
	-231, -231, -231, -231, -231, -231, -231, -105, -58, -231,
	-235, -91, -231, -235, -91, -235, -91, -235, -231, -235,
	-91, -235, -91, -235, -235, -91, -231, -231, -231, -231,
	-231, -231, -231, 366, 367, 378, 379, -74, -74, 64,
	-109, -3, -39, -114, 19, 31, -58, -110, -111, -58,
	-109, 38, -53, -55, -57, 42, 43, 70, 11, -228,
	-152, -151, 22, -149, 64, 120, -75, 26, -74, -60,
	-61, -62, -63, -64, -77, -101, -231, -92, -74, -51,
	374, 375, -74, -68, -233, 58, 11, 56, -233, 58,
	120, 58, 175, -125, -127, -126, 244, 246, 88, 134,
	-154, -149, 64, 29, 30, 59, 58, -74, -168, -171,
	-173, -172, -174, -169, -170, 198, 199, 114, 202, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 30,
	155, 194, 195, 196, 197, 214, 215, 216, 217, 218,
	219, 220, 221, 181, 200, 273, 182, 183, 184, 185,
	186, 187, 189, 190, 191, 192, 193, -215, 22, 133,
	-129, 371, -74, -215, 80, -215, -74, -142, -74, -163,
	-163, -163, 167, 167, 131, 131, 172, -74, 58, 134,
	-68, 23, 55, -74, -215, -215, -156, -155, -147, -163,
	-139, 64, -58, -163, -163, -163, -74, -163, -163, -194,
	11, 98, -194, -139, -39, -163, -163, 11, -135, 11,
	98, -58, -140, 96, 55, 245, -161, 178, -74, 212,
	361, 362, 363, -58, -58, -58, -58, -93, 73, 80,
	74, 75, 69, -85, -94, -97, -100, 69, 98, 96,
	97, 82, -85, -85, -85, -85, -85, -85, -85, -85,
	-85, -85, -85, -85, -85, -85, -85, -164, -215, 64,
	-215, -84, -84, -149, -54, 21, 35, -53, -150, -156,
	-147, -41, -232, -232, -109, -53, -53, -58, -58, -102,
	64, -53, -102, 64, -53, -53, -46, 21, 35, -103,
	-104, 84, -102, -149, -155, -232, -85, -149, -149, -53,
	-54, -54, -53, -53, -195, -195, -215, -215, 64, -227,
	-224, -218, 61, -113, -232, 9, 98, 58, 18, 58,
	-112, 24, 25, -113, -86, -149, 65, 68, -59, 58,
	11, -57, -74, -151, 105, -156, -118, 161, -74, 30,
	58, -70, -72, -71, -73, 45, 49, 51, 46, 47,
	48, 52, -159, 22, -60, -33, -3, -231, -158, -157,
	22, -155, 64, -158, 161, -231, -118, 56, -60, -74,
	-60, -76, -155, 105, -125, -127, 58, 245, 247, 248,
	55, 76, -58, 55, 76, -58, -180, 113, -200, -201,
	-202, -150, 64, 65, -189, -190, -191, -203, 147, -208,
	138, 140, 137, -192, 148, 132, 28, 59, -185, 73,
	80, -181, 226, -175, 57, -175, -175, -175, -175, -179,
	201, -179, -179, -179, 57, 57, -175, -175, -175, -183,
	57, -183, -183, -184, 57, -184, -153, 56, -3, -74,
	133, 22, -163, 23, -163, -74, -143, 128, 125, 126,
	-211, 124, 223, 201, 71, 29, 15, 263, 161, 278,
	-215, 162, -74, -74, -74, -74, -74, 128, 125, -74,
	-74, -74, -163, 120, -74, -74, -75, -74, -139, -155,
	-155, 64, -74, -149, -44, -149, 64, 73, 74, 75,
	-94, -85, -85, -85, -52, 156, 79, -232, -232, -53,
	-53, -231, 120, -5, -113, -232, -232, 58, 56, 22,
	11, 11, -232, 11, 11, -232, -232, -53, -106, -104,
	86, -58, -232, 120, -232, 58, 58, -232, -232, -232,
	-232, -232, -50, 365, 369, 368, -215, 64, 58, -226,
	-225, -219, 62, 88, -114, 40, -58, -58, -111, -114,
	-131, 19, 11, 36, 36, -79, 12, -55, -60, -57,
	120, -83, 30, 36, -3, -231, -231, -121, -124, -102,
	-61, -62, -62, -61, -62, 45, 45, 45, 50, 45,
	50, 45, -71, -155, -232, -232, -232, -3, -157, -78,
	53, 135, 54, -231, -54, -79, -60, -79, -79, 120,
	-126, -128, 249, 246, 252, -215, 64, 58, -202, 88,
	57, -215, 28, -192, -192, -195, -195, 28, -177, 29,
	73, -182, 227, 65, -179, -179, -180, 30, -180, -180,
	-180, -188, 64, -188, 65, 65, 55, -149, 22, -74,
	-3, -162, -220, 143, 139, 147, 148, 141, 60, 61,
	62, 132, 28, 138, 140, 161, 137, -220, -144, -145,
	134, 22, 132, 28, 161, -217, 56, 167, 223, 167,
	134, -163, -156, -135, -139, -117, 57, -135, -52, 79,
	-85, -85, -232, -232, -54, -150, -109, -114, -167, 114,
	198, 155, 196, 192, 212, 203, 225, 194, 226, -164,
	-167, -85, -85, -85, -85, 272, -109, 87, -58, 85,
	-150, -85, -85, 64, -224, 88, -84, 41, -74, -107,
	13, -58, 105, -120, 55, -121, -96, -98, -97, -231,
	-115, -149, -119, -149, -59, 58, 88, -66, -65, 55,
	56, -67, 55, -65, 45, 45, -232, 132, 132, 132,
	-119, -232, -109, -79, 246, 250, 251, -201, -202, -205,
	-204, -149, -208, -195, -195, 57, -178, 55, -85, 59,
	-180, -180, -215, 114, 59, 58, 59, 58, 59, 58,
	-74, -3, 22, -162, -162, -74, -162, -149, -214, 275,
	-216, -215, -149, -149, -149, -74, 120, -139, -139, -116,
	-149, -139, -85, -232, -113, -232, -175, -175, -175, -184,
	-175, 186, -175, 186, -232, -232, 19, 19, 19, 19,
	-231, -49, 268, -58, 58, 58, 64, -84, -108, 14,
	16, 27, -120, 58, -232, -232, 58, 120, -232, 58,
	-79, -124, -58, -58, 57, -58, -231, -231, -231, -232,
	-113, 59, 58, -175, -116, -186, 223, 9, -179, 64,
	-179, 65, 65, -163, -3, 26, -213, -212, -150, 57,
	56, -156, 59, 58, -114, -179, -215, -85, -85, -85,
	-85, -85, -113, 64, -85, -85, -58, -95, 28, -98,
	36, -3, -149, -149, -149, -109, -116, -116, -232, -116,
	-116, -158, -207, -206, 56, 142, 71, -204, 59, -187,
	138, 28, 137, -88, -180, -180, 59, 59, -231, 58,
	88, -116, -74, -149, -232, -232, -232, -232, -48, 98,
	275, -232, -232, -232, 9, -96, 120, -113, 59, -232,
	-232, -232, -78, -206, -215, -196, 88, 64, 150, -176,
	71, 28, 28, -209, -210, 161, -212, -202, 59, -232,
	273, 52, 276, -121, -149, 65, -74, 64, -232, 58,
	-149, -217, 41, 274, 277, 57, -210, 36, -214, 41,
	-116, 163, 275, 59, 164, 276, -222, -223, 55, -231,
	277, -223, 55, 10, 9, -85, 160, -221, 151, 146,
	149, 30, -221, -232, -232, 145, 29, 73,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 666, 0, 392, 392, 392, 392, 392,
	392, 0, 739, 722, 0, 0, 0, 0, -2, 357,
	358, 0, 360, -2, 0, 0, -2, 1072, 1072, 0,
	0, 1072, 0, 0, 392, 0, 392, 392, 1070, 53,
	54, 375, 376, 377, 95, 1, 3, 0, 396, 674,
	0, 0, -2, 394, 0, 722, 722, 0, 0, 85,
	86, 0, 0, 0, 1059, 0, 0, 720, 720, 720,
	0, 740, 741, -2, -2, -2, 744, 745, 35, 36,
	37, 881, 882, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 895, 896, 897, 898, 899,
	900, 901, 902, 903, 904, 905, 906, 907, 908, 909,
	910, 911, 912, 913, 914, 915, 916, 917, 918, 919,
	920, 921, 922, 923, 924, 925, 926, 927, 928, 929,
	930, 931, 932, 933, 934, 935, 936, 937, 938, 939,
	940, 941, 942, 943, 944, 945, 946, 947, 948, 949,
	950, 951, 952, 953, 954, 955, 956, 957, 958, 960,
	961, 962, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1039, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
	1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1062, 1063,
	1064, 1065, 1066, 1067, 1068, 1069, 0, 0, 0, 0,
	0, 723, 0, 718, 0, 718, 718, 718, 0, 304,
	480, 748, 749, 959, 1037, 1038, 1059, 0, 0, 0,
	348, 0, 1073, 316, 0, 318, 1073, 0, 1073, 0,
	325, 0, 0, 331, 232, 0, 340, 354, 355, 342,
	356, 359, 0, 364, 367, 0, 339, 0, 0, 374,
	387, 388, 1072, 1072, 391, 40, 536, 492, 0, 499,
	-2, 0, 538, 539, 540, 541, 542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 569, 570, 571,
	572, 651, 652, 653, 654, 655, 656, 657, 658, 503,
	504, 648, 0, 696, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 639, 0, 609, 609, 609, 609, 609,
	609, 609, 609, 0, 0, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 217, 760, 0, 666, 49,
	0, 392, 397, 398, 678, 0, 0, 666, 1071, 0,
	0, -2, -2, 408, 414, 415, 416, 417, 393, 0,
	420, 425, 0, 0, 0, 0, 0, 0, 62, 64,
	480, 68, 0, 1048, 700, -2, -2, 0, 0, 746,
	747, -2, 895, -2, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 795, 796, 797, 798,
	799, 800, 801, 802, 803, 804, 805, 806, 807, 808,
	809, 810, 811, 812, 813, 814, 815, 816, 817, 818,
	819, 820, 821, 822, 823, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 866, 867, 868,
	869, 870, 871, 872, 873, 874, 875, 876, 877, 878,
	879, 880, 0, 0, 122, 0, 120, 0, 0, 0,
	0, 0, 0, 0, 0, 720, 0, 1073, 1073, 1073,
	0, 0, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 303, 0, 305, 1073, 348, 308, 0, 0,
	1073, 1073, 1073, 0, 1073, 1073, 315, 1074, 1075, 0,
	348, 392, 225, 226, 227, 319, 1073, 1073, 321, 0,
	345, 343, 344, 337, 338, 0, 351, 328, 329, 334,
	233, 0, 365, 368, 0, 386, 378, 379, 380, 381,
	0, 389, 390, 0, 0, 0, 0, 0, 498, 533,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	521, 522, 523, 524, 525, 526, 527, 500, 0, 514,
	0, 0, 0, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 0, 568, 405, 0, 0, 0, 666, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 640, 0,
	593, 601, 0, 594, 602, 595, 603, 596, 0, 597,
	604, 598, 605, 599, 600, 606, 0, 0, 0, 405,
	405, 0, 0, 232, 232, 0, 105, 756, 761, 762,
	674, 0, 407, 41, 0, 0, 675, 667, 668, 671,
	674, 0, 430, 418, 409, 412, 413, 395, 0, -2,
	422, 426, 0, 428, 429, 0, 66, 0, 479, 0,
	432, 434, 435, 436, 438, 461, 0, 463, 463, 0,
	-2, -2, -2, 0, 0, 0, 60, 61, 0, 0,
	0, 0, 1048, 701, 70, 71, 0, 0, 0, 0,
	200, 713, 714, 715, 711, 250, 0, 0, 188, 184,
	128, 129, 130, 177, 132, 177, 177, 177, 177, 197,
	197, 197, 197, 160, 161, 162, 163, 164, 0, 0,
	147, 177, 177, 177, 151, 167, 168, 169, 170, 171,
	172, 173, 174, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 179, 179, 179, 181, 181, 742, 0, 0,
	0, 84, 0, 1073, 0, 1073, 117, 0, 0, 264,
	266, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 719, 0, 1073, 301, 302, 481, 750, 751, 306,
	307, 349, 350, 309, 310, 311, 312, 313, 314, 0,
	228, 229, 0, 333, 0, 320, 324, 0, 348, 0,
	0, 326, 327, 0, 0, 336, 0, 366, 382, 370,
	371, 372, 373, 537, 493, 494, 495, 497, 515, 0,
	517, 519, 534, 505, 506, 530, 531, 532, 0, 0,
	0, 0, 528, 510, 0, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 557, 624, 625,
	0, 555, 556, 567, 0, 0, 0, 406, 649, 0,
	-2, 0, 535, 695, 674, 0, 0, 0, 0, 540,
	651, 0, 540, 651, 0, 0, 0, 403, 404, 646,
	643, 0, 0, 648, 0, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 96, 99, 102, 103, 104, 754,
	757, 0, 38, 678, 50, 679, 0, 0, 0, 0,
	670, 672, 673, 678, 0, 659, 0, 0, 490, 0,
	0, 410, 47, 427, 423, 0, 0, 0, 478, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 471, 0,
	0, 0, 0, 462, 0, 0, 0, 0, 437, 464,
	0, 466, 467, 485, 985, 405, 490, 0, 490, 63,
	490, 65, 0, 484, 702, 69, 0, 0, 74, 75,
	703, 704, 705, 706, 707, 708, 709, 0, 119, 251,
	253, 256, 257, 258, 123, 124, 125, 0, 0, 238,
	0, 0, 232, 232, 0, 230, 231, 121, 191, 189,
	0, 186, 185, 131, 0, 197, 197, 154, 155, 200,
	0, 200, 200, 200, 0, 0, 148, 149, 150, 142,
	0, 143, 144, 145, 0, 146, 0, 0, 88, 0,
	0, 0, 92, 721, 93, 118, 1072, 0, 0, 734,
	265, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 0, 109, 269, 271, 270, 274, 0, 0, 0,
	296, 1073, 300, 0, 345, 348, 445, 345, 323, 346,
	347, 352, 330, 362, 385, 383, 384, 516, 518, 520,
	507, 528, 511, 0, 508, 0, 0, 502, 576, 0,
	0, 405, 0, 666, 678, 580, 581, 0, 0, 0,
	0, 0, 617, 0, 0, 618, 0, 666, 0, 644,
	0, 0, 592, 0, 611, 0, 0, 612, 613, 614,
	615, 616, 97, 106, 107, 108, 100, 101, 0, 759,
	755, 0, 39, 0, 43, 0, 676, 677, 669, 42,
	0, 716, 717, 660, 661, 662, 0, 419, 431, 411,
	0, 689, 0, 0, 682, 0, 0, 430, 697, 0,
	433, 457, 459, 0, 454, 469, 470, 472, 0, 474,
	0, 476, 477, 439, 440, 441, 442, 0, 465, 443,
	0, 0, 0, 0, 0, 666, 490, 58, 59, 0,
	72, 73, 0, 0, 79, 201, 202, 0, 254, 0,
	0, 0, 220, 232, 232, 223, 224, 0, 193, 0,
	190, 127, 187, 0, 200, 200, 156, 0, 157, 158,
	159, 0, 175, 0, 0, 0, 0, 743, 0, 0,
	90, 259, 1072, 276, 277, 278, 279, 280, 281, 282,
	283, 284, 285, 286, 287, 288, 289, 1072, 0, 1072,
	735, 736, 737, 738, 0, 112, 0, 0, 0, 0,
	0, 299, 482, 348, 332, 348, 0, 348, 509, 0,
	529, 512, 577, 578, 0, 650, 674, 45, 0, 177,
	177, 629, 177, 181, 632, 177, 634, 177, 637, 0,
	0, 0, 0, 0, 0, 0, 641, 591, 647, 0,
	649, 0, 0, 0, 758, 0, 752, 680, 44, 664,
	0, 491, 424, 51, 0, 689, 681, 691, 693, 0,
	0, 685, 0, 449, 490, 0, 0, 451, 458, 0,
	0, 452, 0, 453, 473, 475, -2, 0, 0, 0,
	0, 573, 674, 57, 76, 77, 78, 252, 255, 0,
	234, 177, 237, 221, 222, 0, 195, 0, 192, 178,
	152, 153, 198, 199, 197, 0, 197, 0, 182, 0,
	1073, 89, 0, 260, 261, 262, 263, 0, 268, 0,
	110, 111, 0, 0, 273, 297, 0, 317, 335, 0,
	447, 322, 513, 579, 678, 582, 626, 197, 630, 631,
	633, 635, 636, 638, 584, 583, 0, 0, 0, 0,
	0, 674, 0, 645, 0, 0, 98, 753, 48, 0,
	0, 0, 52, 0, 694, 0, 0, 0, 67, 0,
	666, 698, 699, 455, 0, 460, 0, 0, 0, 463,
	56, 211, 0, 236, 0, 203, 196, 0, 200, 176,
	200, 0, 0, 87, 91, 0, 113, 114, 0, 0,
	0, 483, 446, 0, 46, 627, 628, 0, 0, 0,
	0, 619, 0, 642, 0, 0, 665, 663, 0, 692,
	0, 684, 687, 686, 450, 674, 0, 0, 487, 0,
	0, 485, 210, 212, 0, 218, 0, 235, 0, 208,
	0, 205, 207, 194, 165, 166, 180, 183, 0, 0,
	0, 0, 275, 448, 585, 587, 586, 588, 0, 0,
	0, 590, 607, 608, 0, 683, 0, 55, 456, 486,
	488, 489, 444, 213, 214, 0, 219, 216, 0, 126,
	0, 204, 206, 0, 291, 0, 115, 116, 109, 589,
	0, 0, 0, 690, 688, 215, 0, 209, 290, 0,
	0, 112, 620, 0, 623, 0, 292, 0, 272, 621,
	0, 0, 0, 239, 0, 0, 240, 241, 0, 0,
	622, 242, 0, 0, 0, 0, 0, 243, 245, 246,
	0, 0, 244, 293, 294, 247, 248, 249,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 81, 3, 3, 3, 108, 100, 3,
	57, 59, 105, 103, 58, 104, 120, 106, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 384,
	89, 88, 90, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 110, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 99, 3, 111,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 82, 83, 84, 85,
	86, 87, 91, 92, 93, 94, 95, 96, 97, 98,
	101, 102, 107, 109, 112, 113, 114, 115, 116, 117,
	118, 119, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:376
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:381
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:382
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:386
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:419
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:425
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:429
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:433
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:439
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:445
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:451
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 41:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:457
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:465
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:469
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].str, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].str)
		}
	case 44:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:473
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 45:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:496
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:504
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].str, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].str)
		}
	case 47:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:510
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:518
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereStr, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingStr, yyDollar[8].expr))
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:524
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:528
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:535
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:547
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:559
		{
			yyVAL.str = InsertStr
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:563
		{
			yyVAL.str = ReplaceStr
		}
	case 55:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:569
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit}
		}
	case 56:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:575
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 57:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:579
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:583
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:587
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:592
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:593
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:597
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:601
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:607
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:611
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:616
		{
			yyVAL.partitions = nil
		}
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:620
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:626
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 69:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:632
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Characteristics: yyDollar[5].characteristics}
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:636
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:642
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:646
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:652
		{
			yyVAL.characteristic = &IsolationLevel{Level: string(yyDollar[3].str)}
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:656
		{
			yyVAL.characteristic = &AccessMode{Mode: TxReadWrite}
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:660
		{
			yyVAL.characteristic = &AccessMode{Mode: TxReadOnly}
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:666
		{
			yyVAL.str = RepeatableRead
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:670
		{
			yyVAL.str = ReadCommitted
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:674
		{
			yyVAL.str = ReadUncommitted
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:678
		{
			yyVAL.str = Serializable
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:684
		{
			yyVAL.str = SessionStr
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:688
		{
			yyVAL.str = GlobalStr
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:694
		{
			yyVAL.str = TempStr
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:698
		{
			yyVAL.str = TemporaryStr
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:704
		{
			yyVAL.str = MaterializedStr
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:710
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:715
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:721
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName}
		}
	case 88:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:726
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[3].tableName.ToViewName(), SelectStatement: yyDollar[5].selStmt}
		}
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:730
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[5].tableName.ToViewName(), SelectStatement: yyDollar[7].selStmt, OrReplace: true}
		}
	case 90:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:734
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[4].tableName.ToViewName(), SelectStatement: yyDollar[6].selStmt, Modifier: yyDollar[2].str}
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:738
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[6].tableName.ToViewName(), SelectStatement: yyDollar[8].selStmt, OrReplace: true, Modifier: yyDollar[4].str}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:742
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].colIdent.String()), IfNotExists: notExists}
		}
	case 93:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:750
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].colIdent.String()), IfNotExists: notExists}
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:759
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:763
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:769
		{
			yyVAL.statement = &Auth{SessionAuth: yyDollar[1].boolVal, Provider: yyDollar[4].str}
		}
	case 97:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:774
		{
			yyVAL.statement = &Auth{SessionAuth: yyDollar[1].boolVal, Provider: yyDollar[4].str, Type: yyDollar[5].str}
		}
	case 98:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:779
		{
			yyVAL.statement = &Auth{SessionAuth: yyDollar[1].boolVal, Provider: yyDollar[4].str, Type: yyDollar[5].str, KeyFilePath: string(yyDollar[6].bytes), KeyEnvVar: string(yyDollar[7].bytes)}
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:784
		{
			yyVAL.statement = &AuthRevoke{SessionAuth: yyDollar[1].boolVal, Provider: yyDollar[4].str}
		}
	case 100:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:790
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes), ProviderId: yyDollar[4].colIdent.GetRawVal(), ProviderVersion: yyDollar[5].colIdent.GetRawVal()}
		}
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:795
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes), ProviderId: yyDollar[4].colIdent.GetRawVal(), ProviderVersion: string(yyDollar[5].bytes)}
		}
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:800
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes), ProviderId: yyDollar[4].colIdent.GetRawVal()}
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:805
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes), ProviderId: yyDollar[4].colIdent.GetRawVal()}
		}
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:810
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes), ProviderId: string(yyDollar[4].bytes)}
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:815
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes)}
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:821
		{
			yyVAL.str = InteractiveStr
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:825
		{
			yyVAL.str = ServiceAccountStr
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:829
		{
			yyVAL.str = ServiceAccountStr
		}
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:835
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:839
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:845
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:850
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:855
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:861
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:866
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:872
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:878
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName, IfNotExists: notExists}
			setDDL(yylex, yyVAL.ddl)
		}
	case 118:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:887
		{
			var notExists bool
			if yyDollar[4].byt != 0 {
				notExists = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: notExists, Modifier: yyDollar[2].str}
			setDDL(yylex, yyVAL.ddl)
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:898
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:905
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:909
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:915
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:920
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:924
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:928
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 126:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:934
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolVal
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolVal
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].sqlVal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:945
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:956
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:961
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:967
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:971
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:975
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:979
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:983
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:987
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:991
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:995
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:999
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1005
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1011
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1017
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1023
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1029
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1037
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1041
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1045
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1049
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1053
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1059
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1063
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1067
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1071
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1075
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1079
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1083
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1087
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1091
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1095
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1099
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1103
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1107
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1111
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 166:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1116
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1122
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1126
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1130
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1134
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1138
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1142
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1146
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1150
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1156
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1161
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1166
		{
			yyVAL.sqlVal = nil
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1170
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1175
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 180:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1179
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1187
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1191
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 183:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1197
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1205
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1209
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1214
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1218
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1224
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1228
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1232
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1237
		{
			yyVAL.optVal = nil
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1241
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1246
		{
			yyVAL.optVal = nil
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1250
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1255
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1259
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1264
		{
			yyVAL.str = ""
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1268
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1272
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1277
		{
			yyVAL.str = ""
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1281
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1285
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1290
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1294
		{
			yyVAL.colKeyOpt = ColKeyPrimary
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1298
		{
			yyVAL.colKeyOpt = ColKey
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1302
		{
			yyVAL.colKeyOpt = ColKeyUniqueKey
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1306
		{
			yyVAL.colKeyOpt = ColKeyUnique
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1311
		{
			yyVAL.sqlVal = nil
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1315
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1321
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1325
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1331
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1335
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1341
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].colIdent.String())}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1345
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1350
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1356
		{
			yyVAL.statement = &Sleep{Duration: NewIntVal(yyDollar[2].bytes)}
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1362
		{
			yyVAL.str = ""
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1366
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1372
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1376
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1380
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1384
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1388
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1394
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1398
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1402
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1409
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1413
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1419
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1423
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1428
		{
			yyVAL.str = ""
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1432
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1438
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1442
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1448
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1454
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1458
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 239:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1465
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 240:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1469
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 241:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1473
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 242:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1477
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1483
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1489
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1499
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1503
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1507
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1511
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1516
		{
			yyVAL.str = ""
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1524
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = yyDollar[1].str
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1536
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1540
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1554
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 259:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1560
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 260:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1564
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 261:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1568
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 262:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1572
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 263:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1577
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1582
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1586
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1590
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1594
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 268:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1598
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1610
		{
			yyVAL.statement = &DDL{
				Action: DropVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 270:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1620
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1624
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 272:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1628
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 273:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1641
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1651
		{
			yyVAL.statement = &DDL{Action: AddSequenceStr, Table: yyDollar[5].tableName}
		}
	case 275:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1655
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncStr,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 290:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1684
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1694
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 293:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1700
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 294:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1704
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1710
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1716
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1720
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1728
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 299:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1736
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName}
		}
	case 300:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1741
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: exists}
		}
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1749
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1753
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1759
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1763
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1768
		{
			yyVAL.statement = &OtherRead{}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1774
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String())}
		}
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1779
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Type: CharsetStr, ShowTablesOpt: showTablesOpt}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1784
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1789
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1794
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String())}
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1798
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1802
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1806
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1810
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1814
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1818
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 317:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1822
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1827
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1831
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1835
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1839
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1843
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1848
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1858
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1862
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1866
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: yyDollar[4].expr}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1870
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Scope: string(yyDollar[2].bytes), Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1875
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1879
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1883
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1887
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 332:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1891
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[6].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].colIdent.String()), OnTable: yyDollar[5].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1908
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].colIdent.String()), ShowTablesOpt: showTablesOpt}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1913
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Scope: yyDollar[3].str}
		}
	case 335:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1918
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Comments: Comments(yyDollar[4].bytes2), Type: string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, ShowTablesOpt: showTablesOpt, Columns: yyDollar[6].columns}
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1924
		{
			yyVAL.statement = &Show{Type: "TRANSACTION_ISOLATION_LEVEL"}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1930
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1934
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1940
		{
			yyVAL.str = ""
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1944
		{
			yyVAL.str = "extended "
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1950
		{
			yyVAL.str = ""
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1954
		{
			yyVAL.str = "full "
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1960
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1964
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1970
		{
			yyVAL.str = ""
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1974
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1978
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1984
		{
			yyVAL.showFilter = nil
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1988
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1992
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1998
		{
			yyVAL.showFilter = nil
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2002
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2008
		{
			yyVAL.str = ""
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.str = SessionStr
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.str = GlobalStr
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2022
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			yyVAL.statement = &Begin{}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2036
		{
			yyVAL.statement = &Begin{}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.statement = &Commit{}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2048
		{
			yyVAL.statement = &Rollback{}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2052
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2057
		{
			yyVAL.empty = struct{}{}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2059
		{
			yyVAL.empty = struct{}{}
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2062
		{
			yyVAL.empty = struct{}{}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2064
		{
			yyVAL.empty = struct{}{}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2069
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2075
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2080
		{
			yyVAL.str = ""
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2084
		{
			yyVAL.str = JSONStr
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2088
		{
			yyVAL.str = TreeStr
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2092
		{
			yyVAL.str = VitessStr
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2096
		{
			yyVAL.str = TraditionalStr
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			yyVAL.str = AnalyzeStr
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2106
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2114
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2120
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2124
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2128
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2132
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2137
		{
			yyVAL.str = ""
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2141
		{
			yyVAL.str = ""
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2145
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2151
		{
			yyVAL.statement = &DescribeTable{Full: string(yyDollar[2].str), Extended: string(yyDollar[3].str), Table: yyDollar[4].tableName}
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2155
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2161
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2165
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2169
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2173
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2179
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2183
		{
			setAllowComments(yylex, true)
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2187
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2193
		{
			yyVAL.bytes2 = nil
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2197
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2203
		{
			yyVAL.str = UnionStr
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2207
		{
			yyVAL.str = UnionAllStr
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2211
		{
			yyVAL.str = UnionDistinctStr
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2216
		{
			yyVAL.str = ""
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2220
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2224
		{
			yyVAL.str = SQLCacheStr
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2229
		{
			yyVAL.str = ""
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2233
		{
			yyVAL.str = DistinctStr
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2237
		{
			yyVAL.str = DistinctStr
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2242
		{
			yyVAL.selectExprs = nil
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2246
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2251
		{
			yyVAL.strs = nil
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2255
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2259
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2263
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2267
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2273
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2277
		{
			yyVAL.str = SQLCacheStr
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2281
		{
			yyVAL.str = DistinctStr
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2285
		{
			yyVAL.str = DistinctStr
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2289
		{
			yyVAL.str = StraightJoinHint
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2293
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2299
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2303
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2309
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2313
		{
			concatamer := ListArgConcatamer(yyDollar[2].listArgsConcat)
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: NewColIdent(concatamer.String())}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2318
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2322
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2326
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2331
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2335
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2339
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2346
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2351
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2355
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2361
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2365
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2376
		{
			yyVAL.tableExpr = &TableValuedFuncTableExpr{FuncExpr: yyDollar[1].expr, As: yyDollar[2].tableIdent}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2382
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2386
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2390
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2394
		{
			exec := yyDollar[2].statement.(*Exec)
			yyVAL.tableExpr = &ExecSubquery{Exec: exec}
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2401
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2407
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 444:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2411
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2416
		{
			yyVAL.columns = nil
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2420
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2427
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2431
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2437
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2441
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2454
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2458
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2462
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2466
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2472
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2474
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2478
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2484
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2486
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2489
		{
			yyVAL.empty = struct{}{}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2491
		{
			yyVAL.empty = struct{}{}
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2494
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2498
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2502
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2509
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2515
		{
			yyVAL.str = JoinStr
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2519
		{
			yyVAL.str = JoinStr
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2523
		{
			yyVAL.str = JoinStr
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2529
		{
			yyVAL.str = StraightJoinStr
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2535
		{
			yyVAL.str = LeftJoinStr
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2539
		{
			yyVAL.str = LeftOuterJoinStr
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2543
		{
			yyVAL.str = RightJoinStr
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2547
		{
			yyVAL.str = RightOuterJoinStr
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2553
		{
			yyVAL.str = NaturalJoinStr
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2557
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2567
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2571
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2577
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2581
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2585
		{
			yyVAL.tableName = TableName{QualifierSecond: yyDollar[1].tableIdent, Qualifier: yyDollar[3].tableIdent, Name: yyDollar[5].tableIdent}
		}
	case 483:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2589
		{
			yyVAL.tableName = TableName{QualifierThird: yyDollar[1].tableIdent, QualifierSecond: yyDollar[3].tableIdent, Qualifier: yyDollar[5].tableIdent, Name: yyDollar[7].tableIdent}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2595
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2600
		{
			yyVAL.indexHints = nil
		}
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2604
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2608
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr}
		}
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2612
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2616
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2621
		{
			yyVAL.expr = nil
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2625
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2631
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2635
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2639
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2643
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2647
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2651
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2655
		{
			yyVAL.expr = &UnaryCastConcatamerExpr{Expr: yyDollar[1].expr, CastConcatamer: ListArgConcatamer(yyDollar[2].listArgsConcat)}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2659
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2663
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2669
		{
			yyVAL.str = ""
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2673
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2679
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2683
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2689
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2693
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2697
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2701
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2705
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2709
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2713
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2717
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 513:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2721
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2725
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2731
		{
			yyVAL.str = IsNullStr
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2735
		{
			yyVAL.str = IsNotNullStr
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2739
		{
			yyVAL.str = IsTrueStr
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2743
		{
			yyVAL.str = IsNotTrueStr
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2747
		{
			yyVAL.str = IsFalseStr
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2751
		{
			yyVAL.str = IsNotFalseStr
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2757
		{
			yyVAL.str = EqualStr
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2761
		{
			yyVAL.str = LessThanStr
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2765
		{
			yyVAL.str = GreaterThanStr
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2769
		{
			yyVAL.str = LessEqualStr
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2773
		{
			yyVAL.str = GreaterEqualStr
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2777
		{
			yyVAL.str = NotEqualStr
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2781
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2786
		{
			yyVAL.expr = nil
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2790
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2796
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2800
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2804
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2809
		{
			yyVAL.listArgsConcat = []ListArg{ListArg(yyDollar[1].bytes)}
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2813
		{
			yyVAL.listArgsConcat = append(yyDollar[1].listArgsConcat, ListArg(yyDollar[2].bytes))
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2819
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2825
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2829
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2839
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2843
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2847
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2851
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2855
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2859
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2863
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2867
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2871
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2875
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2879
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2883
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2887
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2891
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2895
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2899
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2903
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2907
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2911
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2915
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2919
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2923
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Str, Expr: yyDollar[2].expr}
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2927
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2931
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Str, Expr: yyDollar[2].expr}
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2935
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2943
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2957
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2961
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2965
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2973
		{
			inputStr := string(yyDollar[2].bytes)
			stringList := strings.Split(inputStr, " ")
			if len(stringList) != 2 {
				yylex.Error("the interval string '" + inputStr + "' is not valid")
				return 1
			}
			stringExpr := NewStrVal([]byte(stringList[0]))
			yyVAL.expr = &IntervalExpr{Expr: stringExpr, Unit: stringList[1]}
		}
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2990
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(yyDollar[1].str), Exprs: yyDollar[3].selectExprs}
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2996
		{
			yyVAL.str = JsonArrayElementsTextStr
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3000
		{
			yyVAL.str = JsonEachStr
		}
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3010
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 577:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3014
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3018
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 579:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3022
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3032
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3036
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3040
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3044
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3048
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 585:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3052
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 586:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3056
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3060
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3064
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 589:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3068
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 590:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3072
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3076
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3080
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3090
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3094
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3098
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3103
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3108
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3113
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3119
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3124
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3129
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3133
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3137
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3142
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3147
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3152
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 607:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3156
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 608:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3160
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3170
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3180
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3184
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3188
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3192
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3196
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3200
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3204
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3210
		{
			yyVAL.str = ""
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3214
		{
			yyVAL.str = BooleanModeStr
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3218
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 622:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3222
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3226
		{
			yyVAL.str = QueryExpansionStr
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3232
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3236
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3242
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3246
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3250
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3254
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3258
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3262
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3268
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3272
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3276
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3280
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3284
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3288
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3292
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3297
		{
			yyVAL.expr = nil
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3301
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3306
		{
			yyVAL.str = string("")
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3310
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3316
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3320
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3326
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3331
		{
			yyVAL.expr = nil
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3335
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3341
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3345
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3349
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3355
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3359
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3363
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3367
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3371
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3375
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3379
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3383
		{
			yyVAL.expr = &NullVal{}
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3389
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3398
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3402
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3407
		{
			yyVAL.exprs = nil
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3411
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3416
		{
			yyVAL.expr = nil
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3420
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3425
		{
			yyVAL.orderBy = nil
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3429
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3435
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3439
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3445
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3450
		{
			yyVAL.str = AscScr
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3454
		{
			yyVAL.str = AscScr
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3458
		{
			yyVAL.str = DescScr
		}
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3463
		{
			yyVAL.limit = nil
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3467
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3471
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3475
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3480
		{
			yyVAL.str = ""
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3484
		{
			yyVAL.str = ForUpdateStr
		}
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3488
		{
			yyVAL.str = ShareModeStr
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3501
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3505
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3509
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3513
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3519
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3523
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3527
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3531
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3536
		{
			yyVAL.updateExprs = nil
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3540
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3546
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3550
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3556
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3560
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3566
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3572
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3582
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3586
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3592
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3598
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3602
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].str
			yyVAL.setExprs = SetExprs{yyDollar[2].setExpr}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3607
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3613
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("on"))}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3617
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("off"))}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3621
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3625
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("on"))}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3629
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("off"))}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3633
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3637
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3644
		{
			yyVAL.bytes = []byte("charset")
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3651
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3655
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3659
		{
			yyVAL.expr = &Default{}
		}
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3668
		{
			yyVAL.byt = 0
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3670
		{
			yyVAL.byt = 1
		}
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3673
		{
			yyVAL.byt = 0
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3675
		{
			yyVAL.byt = 1
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3678
		{
			yyVAL.str = ""
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3680
		{
			yyVAL.str = IgnoreStr
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3684
		{
			yyVAL.empty = struct{}{}
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3686
		{
			yyVAL.empty = struct{}{}
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3688
		{
			yyVAL.empty = struct{}{}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3690
		{
			yyVAL.empty = struct{}{}
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3692
		{
			yyVAL.empty = struct{}{}
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3694
		{
			yyVAL.empty = struct{}{}
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3696
		{
			yyVAL.empty = struct{}{}
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3698
		{
			yyVAL.empty = struct{}{}
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3700
		{
			yyVAL.empty = struct{}{}
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3702
		{
			yyVAL.empty = struct{}{}
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3705
		{
			yyVAL.empty = struct{}{}
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3707
		{
			yyVAL.empty = struct{}{}
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3709
		{
			yyVAL.empty = struct{}{}
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3713
		{
			yyVAL.empty = struct{}{}
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3715
		{
			yyVAL.empty = struct{}{}
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3718
		{
			yyVAL.empty = struct{}{}
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3720
		{
			yyVAL.empty = struct{}{}
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3722
		{
			yyVAL.empty = struct{}{}
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3725
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3727
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3731
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3735
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3742
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3748
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3752
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3759
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3765
		{
			yyVAL.execVarDef = NewExecVarDef(yyDollar[1].colIdent, yyDollar[3].expr)
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3771
		{
			yyVAL.execVarDef = NewExecVarDef(yyDollar[1].colIdent, yyDollar[3].expr)
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3777
		{
			yyVAL.execVarDefOpt = nil
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3779
		{
			rv := yyDollar[1].execVarDef
			yyVAL.execVarDefOpt = &rv
		}
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3785
		{
			yyVAL.execVarDefs = nil
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3787
		{
			yyVAL.execVarDefs = []ExecVarDef{yyDollar[1].execVarDef}
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3791
		{
			yyVAL.execVarDefs = append(yyDollar[1].execVarDefs, yyDollar[3].execVarDef)
		}
	case 759:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3798
		{
			yyVAL.statement = NewExec(yyDollar[2].bytes2, yyDollar[3].tableName, yyDollar[4].execVarDefs, yyDollar[5].execVarDefOpt)
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3804
		{
			yyVAL.statement = NewPurge(yyDollar[2].bytes2, TableName{}, true)
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3808
		{
			yyVAL.statement = NewPurge(yyDollar[2].bytes2, yyDollar[3].tableName, false)
		}
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3814
		{
			yyVAL.statement = NewNativeQuery(yyDollar[2].bytes2, string(yyDollar[3].bytes))
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4148
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4157
		{
			decNesting(yylex)
		}
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4162
		{
			skipToEnd(yylex)
		}
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4167
		{
			skipToEnd(yylex)
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4171
		{
			skipToEnd(yylex)
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4175
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
