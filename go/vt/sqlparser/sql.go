// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "strings"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:55
type yySymType struct {
	yys                  int
	empty                struct{}
	statement            Statement
	selStmt              SelectStatement
	ddl                  *DDL
	ins                  *Insert
	byt                  byte
	bytes                []byte
	bytes2               [][]byte
	str                  string
	strs                 []string
	selectExprs          SelectExprs
	selectExpr           SelectExpr
	columns              Columns
	partitions           Partitions
	colName              *ColName
	tableExprs           TableExprs
	tableExpr            TableExpr
	joinCondition        JoinCondition
	tableName            TableName
	tableNames           TableNames
	indexHints           *IndexHints
	expr                 Expr
	exprs                Exprs
	boolVal              BoolVal
	sqlVal               *SQLVal
	colTuple             ColTuple
	values               Values
	valTuple             ValTuple
	subquery             *Subquery
	execsubquery         *ExecSubquery
	whens                []*When
	when                 *When
	orderBy              OrderBy
	order                *Order
	limit                *Limit
	updateExprs          UpdateExprs
	setExprs             SetExprs
	updateExpr           *UpdateExpr
	setExpr              *SetExpr
	characteristic       Characteristic
	characteristics      []Characteristic
	colIdent             ColIdent
	tableIdent           TableIdent
	convertType          *ConvertType
	aliasedTableName     *AliasedTableExpr
	TableSpec            *TableSpec
	columnType           ColumnType
	colKeyOpt            ColumnKeyOption
	optVal               Expr
	LengthScaleOption    LengthScaleOption
	columnDefinition     *ColumnDefinition
	indexDefinition      *IndexDefinition
	indexInfo            *IndexInfo
	indexOption          *IndexOption
	indexOptions         []*IndexOption
	indexColumn          *IndexColumn
	indexColumns         []*IndexColumn
	constraintDefinition *ConstraintDefinition
	constraintInfo       ConstraintInfo
	ReferenceAction      ReferenceAction
	partDefs             []*PartitionDefinition
	partDef              *PartitionDefinition
	partSpec             *PartitionSpec
	vindexParam          VindexParam
	vindexParams         []VindexParam
	showFilter           *ShowFilter
	optLike              *OptLike
	execVarDef           ExecVarDef
	execVarDefOpt        *ExecVarDef
	execVarDefs          []ExecVarDef
	listArgsConcat       []ListArg
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const AS = 57364
const EXISTS = 57365
const ASC = 57366
const DESC = 57367
const INTO = 57368
const DUPLICATE = 57369
const KEY = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const DISTINCTROW = 57377
const VALUES = 57378
const LAST_INSERT_ID = 57379
const NEXT = 57380
const VALUE = 57381
const SHARE = 57382
const MODE = 57383
const SQL_NO_CACHE = 57384
const SQL_CACHE = 57385
const SQL_CALC_FOUND_ROWS = 57386
const JOIN = 57387
const STRAIGHT_JOIN = 57388
const LEFT = 57389
const RIGHT = 57390
const INNER = 57391
const OUTER = 57392
const CROSS = 57393
const NATURAL = 57394
const USE = 57395
const FORCE = 57396
const ON = 57397
const USING = 57398
const ID = 57399
const AT_ID = 57400
const AT_AT_ID = 57401
const HEX = 57402
const STRING = 57403
const INTEGRAL = 57404
const FLOAT = 57405
const HEXNUM = 57406
const VALUE_ARG = 57407
const LIST_ARG = 57408
const COMMENT = 57409
const COMMENT_KEYWORD = 57410
const BIT_LITERAL = 57411
const NULL = 57412
const TRUE = 57413
const FALSE = 57414
const OFF = 57415
const OR = 57416
const XOR = 57417
const AND = 57418
const NOT = 57419
const BETWEEN = 57420
const CASE = 57421
const WHEN = 57422
const THEN = 57423
const ELSE = 57424
const END = 57425
const LE = 57426
const GE = 57427
const NE = 57428
const NULL_SAFE_EQUAL = 57429
const IS = 57430
const LIKE = 57431
const REGEXP = 57432
const IN = 57433
const SHIFT_LEFT = 57434
const SHIFT_RIGHT = 57435
const DIV = 57436
const MOD = 57437
const UNARY = 57438
const COLLATE = 57439
const BINARY = 57440
const UNDERSCORE_BINARY = 57441
const UNDERSCORE_UTF8MB4 = 57442
const UNDERSCORE_UTF8 = 57443
const UNDERSCORE_LATIN1 = 57444
const INTERVAL = 57445
const JSON_EXTRACT_OP = 57446
const JSON_UNQUOTE_EXTRACT_OP = 57447
const CREATE = 57448
const ALTER = 57449
const DROP = 57450
const RENAME = 57451
const ANALYZE = 57452
const ADD = 57453
const FLUSH = 57454
const SCHEMA = 57455
const TABLE = 57456
const INDEX = 57457
const VIEW = 57458
const TO = 57459
const IGNORE = 57460
const IF = 57461
const UNIQUE = 57462
const PRIMARY = 57463
const COLUMN = 57464
const SPATIAL = 57465
const FULLTEXT = 57466
const KEY_BLOCK_SIZE = 57467
const CHECK = 57468
const INDEXES = 57469
const ACTION = 57470
const CASCADE = 57471
const CONSTRAINT = 57472
const FOREIGN = 57473
const NO = 57474
const REFERENCES = 57475
const RESTRICT = 57476
const SHOW = 57477
const DESCRIBE = 57478
const EXPLAIN = 57479
const DATE = 57480
const ESCAPE = 57481
const REPAIR = 57482
const OPTIMIZE = 57483
const TRUNCATE = 57484
const MAXVALUE = 57485
const PARTITION = 57486
const REORGANIZE = 57487
const LESS = 57488
const THAN = 57489
const PROCEDURE = 57490
const TRIGGER = 57491
const VINDEX = 57492
const VINDEXES = 57493
const STATUS = 57494
const VARIABLES = 57495
const WARNINGS = 57496
const SEQUENCE = 57497
const BEGIN = 57498
const START = 57499
const TRANSACTION = 57500
const COMMIT = 57501
const ROLLBACK = 57502
const SAVEPOINT = 57503
const RELEASE = 57504
const WORK = 57505
const BIT = 57506
const TINYINT = 57507
const SMALLINT = 57508
const MEDIUMINT = 57509
const INT = 57510
const INTEGER = 57511
const BIGINT = 57512
const INTNUM = 57513
const REAL = 57514
const DOUBLE = 57515
const FLOAT_TYPE = 57516
const DECIMAL = 57517
const NUMERIC = 57518
const TIME = 57519
const TIMESTAMP = 57520
const DATETIME = 57521
const YEAR = 57522
const CHAR = 57523
const VARCHAR = 57524
const BOOL = 57525
const CHARACTER = 57526
const VARBINARY = 57527
const NCHAR = 57528
const TEXT = 57529
const TINYTEXT = 57530
const MEDIUMTEXT = 57531
const LONGTEXT = 57532
const BLOB = 57533
const TINYBLOB = 57534
const MEDIUMBLOB = 57535
const LONGBLOB = 57536
const JSON = 57537
const ENUM = 57538
const GEOMETRY = 57539
const POINT = 57540
const LINESTRING = 57541
const POLYGON = 57542
const GEOMETRYCOLLECTION = 57543
const MULTIPOINT = 57544
const MULTILINESTRING = 57545
const MULTIPOLYGON = 57546
const NULLX = 57547
const AUTO_INCREMENT = 57548
const APPROXNUM = 57549
const SIGNED = 57550
const UNSIGNED = 57551
const ZEROFILL = 57552
const COLLATION = 57553
const DATABASES = 57554
const TABLES = 57555
const VITESS_METADATA = 57556
const VSCHEMA = 57557
const FULL = 57558
const PROCESSLIST = 57559
const COLUMNS = 57560
const FIELDS = 57561
const ENGINES = 57562
const PLUGINS = 57563
const EXTENDED = 57564
const NAMES = 57565
const CHARSET = 57566
const GLOBAL = 57567
const SESSION = 57568
const ISOLATION = 57569
const LEVEL = 57570
const READ = 57571
const WRITE = 57572
const ONLY = 57573
const REPEATABLE = 57574
const COMMITTED = 57575
const UNCOMMITTED = 57576
const SERIALIZABLE = 57577
const CURRENT_TIMESTAMP = 57578
const DATABASE = 57579
const CURRENT_DATE = 57580
const CURRENT_TIME = 57581
const LOCALTIME = 57582
const LOCALTIMESTAMP = 57583
const UTC_DATE = 57584
const UTC_TIME = 57585
const UTC_TIMESTAMP = 57586
const REPLACE = 57587
const CONVERT = 57588
const CAST = 57589
const SUBSTR = 57590
const SUBSTRING = 57591
const GROUP_CONCAT = 57592
const SEPARATOR = 57593
const TIMESTAMPADD = 57594
const TIMESTAMPDIFF = 57595
const MATCH = 57596
const AGAINST = 57597
const BOOLEAN = 57598
const LANGUAGE = 57599
const WITH = 57600
const QUERY = 57601
const EXPANSION = 57602
const UNUSED = 57603
const ARRAY = 57604
const CUME_DIST = 57605
const DESCRIPTION = 57606
const DENSE_RANK = 57607
const EMPTY = 57608
const EXCEPT = 57609
const FIRST_VALUE = 57610
const GROUPING = 57611
const GROUPS = 57612
const JSON_TABLE = 57613
const LAG = 57614
const LAST_VALUE = 57615
const LATERAL = 57616
const LEAD = 57617
const MEMBER = 57618
const NTH_VALUE = 57619
const NTILE = 57620
const OF = 57621
const OVER = 57622
const PERCENT_RANK = 57623
const RANK = 57624
const RECURSIVE = 57625
const ROW_NUMBER = 57626
const SYSTEM = 57627
const WINDOW = 57628
const ACTIVE = 57629
const ADMIN = 57630
const BUCKETS = 57631
const CLONE = 57632
const COMPONENT = 57633
const DEFINITION = 57634
const ENFORCED = 57635
const EXCLUDE = 57636
const FOLLOWING = 57637
const GEOMCOLLECTION = 57638
const GET_MASTER_PUBLIC_KEY = 57639
const HISTOGRAM = 57640
const HISTORY = 57641
const INACTIVE = 57642
const INVISIBLE = 57643
const LOCKED = 57644
const MASTER_COMPRESSION_ALGORITHMS = 57645
const MASTER_PUBLIC_KEY_PATH = 57646
const MASTER_TLS_CIPHERSUITES = 57647
const MASTER_ZSTD_COMPRESSION_LEVEL = 57648
const NESTED = 57649
const NETWORK_NAMESPACE = 57650
const NOWAIT = 57651
const NULLS = 57652
const OJ = 57653
const OLD = 57654
const OPTIONAL = 57655
const ORDINALITY = 57656
const ORGANIZATION = 57657
const OTHERS = 57658
const PATH = 57659
const PERSIST = 57660
const PERSIST_ONLY = 57661
const PRECEDING = 57662
const PRIVILEGE_CHECKS_USER = 57663
const PROCESS = 57664
const RANDOM = 57665
const REFERENCE = 57666
const REQUIRE_ROW_FORMAT = 57667
const RESOURCE = 57668
const RESPECT = 57669
const RESTART = 57670
const RETAIN = 57671
const REUSE = 57672
const ROLE = 57673
const SECONDARY = 57674
const SECONDARY_ENGINE = 57675
const SECONDARY_LOAD = 57676
const SECONDARY_UNLOAD = 57677
const SKIP = 57678
const SRID = 57679
const THREAD_PRIORITY = 57680
const TIES = 57681
const UNBOUNDED = 57682
const VCPU = 57683
const VISIBLE = 57684
const FORMAT = 57685
const TREE = 57686
const VITESS = 57687
const TRADITIONAL = 57688
const AUTH = 57689
const INTERACTIVE = 57690
const LOGIN = 57691
const MATERIALIZED = 57692
const REVOKE = 57693
const SA = 57694
const SERVICEACCOUNT = 57695
const SLEEP = 57696
const TEMP = 57697
const TEMPORARY = 57698
const REGISTRY = 57699
const PULL = 57700
const LIST = 57701
const EXEC = 57702
const PURGE = 57703
const NATIVEQUERY = 57704
const STACKQL = 57705

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"AUTH",
	"INTERACTIVE",
	"LOGIN",
	"MATERIALIZED",
	"REVOKE",
	"SA",
	"SERVICEACCOUNT",
	"SLEEP",
	"TEMP",
	"TEMPORARY",
	"REGISTRY",
	"PULL",
	"LIST",
	"EXEC",
	"PURGE",
	"NATIVEQUERY",
	"STACKQL",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	364, 94,
	374, 94,
	-2, 34,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 48,
	169, 353,
	170, 353,
	230, 341,
	234, 341,
	235, 341,
	236, 341,
	-2, 339,
	-1, 53,
	134, 363,
	-2, 361,
	-1, 56,
	6, 369,
	8, 369,
	9, 369,
	10, 369,
	57, 369,
	262, 369,
	-2, 341,
	-1, 82,
	38, 399,
	-2, 407,
	-1, 103,
	133, 84,
	-2, 954,
	-1, 104,
	132, 1032,
	-2, 82,
	-1, 105,
	132, 1033,
	-2, 83,
	-1, 358,
	80, 905,
	82, 905,
	88, 905,
	89, 905,
	90, 905,
	91, 905,
	92, 905,
	93, 905,
	94, 905,
	96, 905,
	97, 905,
	98, 905,
	99, 905,
	100, 905,
	101, 905,
	102, 905,
	103, 905,
	104, 905,
	105, 905,
	106, 905,
	107, 905,
	108, 905,
	109, 905,
	110, 905,
	113, 905,
	120, 905,
	121, 905,
	122, 905,
	-2, 501,
	-1, 418,
	53, 745,
	54, 745,
	120, 745,
	135, 745,
	-2, 741,
	-1, 419,
	53, 746,
	54, 746,
	120, 746,
	135, 746,
	-2, 742,
	-1, 439,
	38, 400,
	-2, 412,
	-1, 440,
	38, 401,
	-2, 413,
	-1, 463,
	88, 1020,
	-2, 80,
	-1, 464,
	88, 926,
	-2, 81,
	-1, 469,
	88, 893,
	134, 893,
	-2, 707,
	-1, 471,
	88, 962,
	134, 962,
	-2, 709,
	-1, 787,
	1, 421,
	5, 421,
	11, 421,
	12, 421,
	13, 421,
	14, 421,
	15, 421,
	17, 421,
	19, 421,
	31, 421,
	55, 421,
	58, 421,
	59, 421,
	268, 421,
	381, 421,
	-2, 498,
	-1, 809,
	56, 62,
	58, 62,
	-2, 66,
	-1, 997,
	53, 748,
	54, 748,
	120, 748,
	135, 748,
	-2, 744,
	-1, 1473,
	5, 663,
	17, 663,
	19, 663,
	31, 663,
	59, 663,
	-2, 442,
}

const yyPrivate = 57344

const yyLast = 19105

var yyAct = [...]int{
	418, 1713, 1723, 1514, 1680, 1392, 1294, 1525, 1593, 362,
	1629, 1117, 1316, 1453, 377, 1486, 1085, 1454, 1295, 432,
	1113, 468, 913, 625, 778, 1282, 1126, 725, 391, 1450,
	771, 1116, 1459, 1160, 1146, 348, 1055, 81, 3, 1465,
	1037, 984, 360, 106, 1221, 1415, 636, 309, 935, 657,
	309, 991, 1369, 1130, 1358, 106, 822, 1086, 79, 781,
	1017, 1070, 776, 33, 799, 426, 961, 364, 794, 1156,
	441, 592, 821, 798, 77, 1063, 789, 926, 82, 462,
	457, 806, 454, 599, 96, 738, 811, 676, 309, 106,
	353, 76, 593, 309, 349, 309, 1081, 352, 763, 764,
	761, 420, 762, 886, 322, 739, 35, 36, 69, 38,
	39, 421, 946, 7, 347, 84, 85, 86, 87, 88,
	1716, 1700, 1260, 6, 5, 73, 1262, 1261, 307, 375,
	40, 59, 60, 614, 62, 465, 1711, 1688, 1708, 1515,
	1699, 427, 1687, 422, 447, 424, 425, 1432, 1548, 597,
	1480, 1481, 1482, 49, 1105, 1106, 403, 68, 409, 410,
	407, 408, 406, 405, 404, 305, 301, 302, 303, 456,
	1104, 942, 411, 412, 594, 659, 596, 35, 334, 69,
	38, 39, 601, 602, 823, 297, 824, 656, 295, 351,
	299, 350, 1140, 1655, 686, 685, 695, 696, 688, 689,
	690, 691, 692, 693, 694, 687, 1330, 1349, 697, 1329,
	1139, 651, 1331, 1394, 634, 652, 649, 650, 1582, 1147,
	337, 341, 1539, 42, 43, 45, 44, 47, 68, 61,
	1537, 316, 108, 109, 110, 108, 109, 110, 994, 944,
	319, 343, 339, 902, 644, 645, 654, 901, 326, 655,
	1396, 899, 48, 72, 71, 1710, 1707, 57, 58, 46,
	1681, 947, 948, 949, 1391, 1064, 1731, 1131, 1674, 1395,
	1637, 1317, 1319, 50, 51, 1630, 52, 53, 54, 55,
	600, 1133, 324, 900, 903, 615, 1727, 298, 331, 304,
	1632, 299, 333, 825, 1388, 1397, 309, 606, 607, 906,
	1390, 309, 660, 616, 604, 1133, 631, 309, 633, 296,
	1167, 598, 1476, 108, 109, 110, 309, 623, 317, 1475,
	629, 106, 1474, 638, 595, 106, 611, 106, 603, 315,
	1416, 300, 1133, 658, 1240, 1195, 1237, 888, 1194, 826,
	630, 632, 709, 710, 106, 328, 320, 346, 329, 330,
	337, 1662, 1563, 1318, 321, 323, 334, 1522, 318, 336,
	335, 1631, 70, 1686, 108, 109, 110, 1326, 1287, 1250,
	1656, 1418, 1229, 1147, 1200, 1183, 1114, 605, 1092, 1638,
	1636, 817, 613, 664, 793, 1132, 669, 670, 620, 1182,
	1129, 1127, 697, 1128, 608, 723, 609, 622, 621, 610,
	1125, 1131, 1725, 1100, 1389, 1726, 1387, 1724, 1420, 1132,
	1424, 1043, 1419, 687, 1417, 936, 697, 940, 927, 1422,
	108, 109, 110, 309, 1672, 309, 1646, 707, 1421, 628,
	1463, 1181, 677, 70, 627, 1442, 1132, 617, 618, 619,
	1270, 1423, 1425, 91, 709, 710, 709, 710, 968, 662,
	106, 768, 309, 668, 309, 1434, 726, 1018, 675, 667,
	891, 106, 966, 967, 965, 1379, 769, 106, 1347, 665,
	666, 65, 294, 108, 109, 110, 1732, 64, 66, 67,
	74, 332, 92, 1676, 1178, 1175, 1176, 1018, 1174, 1247,
	741, 743, 745, 747, 749, 751, 752, 1375, 1376, 1377,
	785, 639, 937, 68, 765, 928, 766, 465, 770, 959,
	742, 744, 782, 748, 750, 964, 753, 1691, 626, 1588,
	1733, 1185, 1188, 1693, 927, 627, 641, 1499, 108, 109,
	110, 1136, 1587, 796, 1362, 809, 810, 787, 1137, 643,
	820, 646, 815, 690, 691, 692, 693, 694, 687, 797,
	1235, 697, 1234, 108, 109, 110, 1039, 436, 451, 452,
	677, 1180, 1361, 677, 591, 1214, 1215, 1216, 1350, 1378,
	672, 673, 674, 672, 1383, 1380, 1371, 1381, 1374, 423,
	1370, 1673, 805, 1179, 1372, 1373, 675, 1609, 1585, 675,
	1552, 1440, 309, 108, 109, 110, 884, 986, 1382, 309,
	890, 1359, 892, 309, 1208, 309, 106, 106, 106, 626,
	436, 928, 309, 918, 767, 309, 1643, 1265, 309, 911,
	912, 1269, 309, 1184, 106, 640, 108, 109, 110, 106,
	106, 106, 309, 106, 106, 1599, 1709, 642, 1186, 1642,
	955, 957, 958, 915, 1495, 106, 106, 956, 917, 1134,
	686, 685, 695, 696, 688, 689, 690, 691, 692, 693,
	694, 687, 930, 309, 697, 688, 689, 690, 691, 692,
	693, 694, 687, 834, 1094, 697, 812, 780, 1695, 436,
	889, 68, 887, 1462, 893, 677, 895, 894, 108, 109,
	110, 1559, 1333, 904, 674, 672, 456, 907, 985, 910,
	1599, 1684, 1599, 436, 1048, 1049, 671, 987, 1283, 962,
	1645, 675, 1503, 923, 1599, 1664, 929, 78, 931, 1599,
	1634, 106, 686, 685, 695, 696, 688, 689, 690, 691,
	692, 693, 694, 687, 1599, 1598, 697, 1578, 1577, 1565,
	436, 1006, 1009, 80, 945, 997, 996, 1019, 963, 677,
	1057, 1001, 988, 989, 1067, 106, 106, 673, 674, 672,
	1562, 436, 658, 658, 1033, 1034, 1505, 1504, 677, 1067,
	995, 436, 726, 1501, 1502, 675, 673, 674, 672, 1222,
	106, 108, 109, 110, 1436, 1264, 1056, 309, 1040, 1501,
	1500, 106, 1056, 436, 675, 1045, 309, 1462, 1050, 998,
	108, 109, 110, 1334, 1035, 813, 309, 309, 1066, 1027,
	1028, 1031, 1032, 309, 1103, 997, 1062, 309, 309, 106,
	896, 897, 898, 1090, 1067, 436, 671, 436, 833, 832,
	1253, 419, 1252, 106, 593, 1044, 1067, 1056, 916, 915,
	995, 1057, 1083, 920, 921, 922, 677, 924, 925, 812,
	814, 1046, 816, 1058, 673, 674, 672, 905, 1451, 932,
	933, 1462, 818, 1701, 1595, 465, 1141, 1060, 1059, 813,
	35, 429, 675, 1570, 107, 1161, 1491, 1065, 310, 1118,
	1403, 310, 1148, 1149, 1150, 1093, 107, 309, 1056, 1466,
	1467, 106, 1102, 106, 1096, 309, 1187, 1098, 1101, 1337,
	309, 309, 309, 309, 309, 1121, 309, 309, 1095, 35,
	309, 106, 1097, 35, 814, 1393, 812, 1162, 1157, 310,
	107, 68, 68, 1165, 310, 1152, 310, 309, 1151, 327,
	309, 1596, 309, 1289, 805, 309, 1164, 309, 309, 1290,
	1718, 805, 309, 1616, 106, 805, 106, 677, 1714, 1236,
	1158, 1159, 1493, 1469, 1451, 673, 674, 672, 1472, 1205,
	68, 1363, 1471, 941, 68, 909, 1002, 1003, 1166, 1306,
	1008, 1011, 1012, 675, 1307, 1304, 1172, 1303, 1302, 1705,
	1305, 1189, 1190, 1191, 1192, 1193, 344, 1196, 1197, 1698,
	1308, 1198, 1076, 1077, 962, 1026, 677, 1444, 1029, 1030,
	1203, 1272, 779, 1703, 673, 674, 672, 1281, 1201, 1280,
	1354, 1202, 831, 796, 624, 1014, 1204, 1346, 1170, 1678,
	1677, 1231, 675, 1209, 1072, 1075, 1076, 1077, 1073, 1015,
	1074, 1078, 1217, 963, 1263, 1142, 1143, 1144, 1145, 1614,
	380, 379, 382, 383, 384, 385, 772, 1344, 1551, 381,
	386, 1153, 1154, 1155, 1339, 1557, 1591, 908, 773, 1508,
	1365, 442, 427, 1168, 1230, 1080, 885, 430, 431, 309,
	309, 1271, 309, 433, 1556, 443, 1296, 1246, 434, 1279,
	309, 1276, 783, 784, 445, 80, 444, 1278, 309, 686,
	685, 695, 696, 688, 689, 690, 691, 692, 693, 694,
	687, 1291, 1555, 697, 1447, 1169, 1283, 1171, 653, 1275,
	1720, 1719, 1720, 1241, 997, 1332, 1284, 106, 1238, 1322,
	934, 1324, 1314, 1325, 786, 1199, 1338, 310, 1335, 1286,
	658, 658, 310, 1298, 1299, 1660, 1301, 1583, 310, 1321,
	1309, 1297, 1042, 429, 1300, 1315, 78, 310, 1082, 29,
	83, 75, 107, 1, 1285, 449, 107, 1036, 107, 1266,
	1327, 1267, 1712, 1118, 1268, 106, 1038, 1353, 309, 1355,
	1356, 1357, 1516, 1592, 1177, 107, 1679, 1351, 1352, 1342,
	1343, 1628, 1340, 1341, 1485, 1124, 1115, 805, 90, 590,
	442, 1323, 89, 1671, 637, 1123, 1550, 805, 1122, 106,
	805, 309, 1635, 1581, 443, 1135, 1367, 1360, 1348, 1368,
	1138, 439, 440, 445, 805, 444, 1492, 1345, 354, 1675,
	839, 837, 915, 1399, 805, 838, 1401, 836, 1384, 841,
	106, 1226, 1227, 840, 835, 325, 985, 686, 685, 695,
	696, 688, 689, 690, 691, 692, 693, 694, 687, 1366,
	1400, 697, 1244, 1404, 310, 1413, 310, 460, 943, 340,
	1079, 827, 1414, 1405, 1072, 1075, 1076, 1077, 1073, 1433,
	1074, 1078, 997, 996, 1466, 1467, 1412, 1426, 309, 1163,
	1411, 107, 1427, 310, 788, 310, 93, 1386, 106, 1385,
	1173, 939, 107, 106, 106, 647, 1452, 1437, 107, 1296,
	648, 705, 1277, 100, 1328, 466, 1441, 459, 1402, 1457,
	1047, 775, 1554, 1443, 1446, 1245, 735, 1016, 803, 1455,
	363, 106, 954, 378, 376, 1051, 1288, 679, 361, 355,
	802, 1461, 1071, 1069, 1412, 106, 1068, 106, 106, 455,
	1470, 658, 658, 1468, 1464, 801, 800, 1478, 1484, 1479,
	438, 1259, 1547, 1477, 1654, 1498, 437, 1013, 56, 1445,
	1211, 345, 37, 446, 309, 1488, 1483, 63, 32, 31,
	28, 30, 1496, 1497, 27, 22, 21, 20, 19, 18,
	24, 1118, 17, 1118, 16, 15, 309, 612, 41, 26,
	1489, 1490, 106, 25, 1517, 106, 106, 106, 309, 14,
	13, 12, 11, 1507, 106, 1509, 10, 9, 8, 4,
	663, 23, 724, 1398, 2, 0, 0, 0, 0, 0,
	1510, 0, 1512, 310, 1523, 0, 1524, 0, 1527, 0,
	310, 0, 0, 1530, 310, 0, 310, 107, 107, 107,
	0, 0, 0, 310, 0, 1506, 310, 0, 0, 310,
	0, 392, 34, 310, 1535, 107, 0, 0, 0, 0,
	107, 107, 107, 310, 107, 107, 0, 1511, 0, 0,
	0, 0, 1296, 0, 0, 0, 107, 107, 0, 1521,
	0, 1567, 1558, 0, 106, 1553, 34, 1566, 0, 0,
	0, 0, 106, 0, 310, 1335, 0, 0, 1576, 1580,
	0, 0, 0, 0, 0, 0, 0, 106, 0, 0,
	0, 0, 678, 0, 0, 0, 106, 0, 0, 0,
	0, 0, 0, 309, 0, 0, 0, 0, 0, 428,
	1118, 0, 0, 0, 1602, 1584, 0, 1586, 0, 0,
	0, 0, 0, 0, 915, 1597, 1590, 0, 354, 0,
	0, 0, 107, 0, 0, 0, 0, 736, 0, 0,
	0, 1600, 1594, 106, 106, 0, 106, 1608, 1601, 0,
	0, 106, 0, 106, 106, 106, 309, 1615, 1622, 106,
	1623, 1625, 1626, 0, 1613, 0, 107, 107, 1455, 774,
	777, 1621, 1627, 0, 1633, 0, 106, 309, 1639, 1617,
	106, 0, 0, 1647, 0, 1640, 0, 1641, 0, 1532,
	1533, 107, 1534, 0, 0, 1536, 0, 1538, 310, 0,
	0, 0, 107, 0, 0, 0, 0, 310, 0, 0,
	1661, 1670, 0, 0, 0, 0, 0, 310, 310, 1669,
	1668, 1663, 0, 0, 310, 1455, 106, 106, 310, 310,
	107, 0, 0, 0, 1682, 0, 0, 0, 1683, 0,
	0, 0, 0, 106, 107, 0, 0, 1689, 0, 0,
	1296, 0, 0, 0, 0, 309, 0, 0, 1648, 0,
	1579, 0, 106, 0, 0, 0, 0, 0, 0, 0,
	1697, 0, 1594, 1118, 0, 0, 0, 0, 0, 0,
	1702, 1704, 106, 0, 0, 0, 0, 0, 0, 1706,
	0, 0, 0, 0, 1717, 0, 0, 0, 310, 0,
	0, 1589, 107, 1728, 107, 0, 310, 0, 0, 0,
	0, 310, 310, 310, 310, 310, 0, 310, 310, 0,
	0, 310, 107, 0, 389, 695, 696, 688, 689, 690,
	691, 692, 693, 694, 687, 0, 1692, 697, 310, 0,
	0, 310, 0, 310, 0, 0, 310, 0, 310, 310,
	0, 0, 635, 310, 0, 107, 635, 107, 635, 0,
	0, 0, 0, 919, 0, 0, 0, 102, 0, 0,
	0, 0, 1406, 0, 0, 0, 0, 34, 0, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 1545, 938,
	706, 708, 686, 685, 695, 696, 688, 689, 690, 691,
	692, 693, 694, 687, 0, 0, 697, 950, 951, 952,
	953, 0, 0, 467, 0, 0, 0, 0, 0, 0,
	0, 722, 0, 0, 0, 727, 728, 729, 730, 731,
	732, 733, 734, 0, 737, 740, 740, 740, 746, 740,
	740, 746, 740, 754, 755, 756, 757, 758, 759, 760,
	1544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	34, 0, 0, 0, 0, 1004, 1005, 0, 686, 685,
	695, 696, 688, 689, 690, 691, 692, 693, 694, 687,
	310, 310, 697, 310, 804, 0, 0, 0, 0, 0,
	0, 310, 681, 0, 684, 0, 0, 0, 0, 310,
	698, 699, 700, 701, 702, 703, 704, 1543, 682, 683,
	680, 686, 685, 695, 696, 688, 689, 690, 691, 692,
	693, 694, 687, 0, 0, 697, 1223, 0, 107, 0,
	686, 685, 695, 696, 688, 689, 690, 691, 692, 693,
	694, 687, 1542, 0, 697, 0, 686, 685, 695, 696,
	688, 689, 690, 691, 692, 693, 694, 687, 0, 0,
	697, 1109, 1112, 686, 685, 695, 696, 688, 689, 690,
	691, 692, 693, 694, 687, 0, 107, 697, 0, 310,
	0, 0, 0, 0, 0, 0, 0, 686, 685, 695,
	696, 688, 689, 690, 691, 692, 693, 694, 687, 0,
	0, 697, 0, 0, 0, 0, 0, 0, 0, 0,
	107, 0, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 686, 685, 695, 696, 688, 689, 690, 691,
	692, 693, 694, 687, 0, 0, 697, 635, 635, 635,
	0, 107, 0, 0, 0, 467, 0, 0, 0, 467,
	0, 467, 0, 0, 0, 635, 0, 0, 0, 0,
	635, 635, 635, 0, 635, 635, 0, 0, 661, 0,
	0, 0, 0, 0, 0, 0, 635, 635, 685, 695,
	696, 688, 689, 690, 691, 692, 693, 694, 687, 310,
	0, 697, 0, 0, 0, 0, 0, 0, 0, 107,
	856, 0, 0, 0, 107, 107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 107, 107,
	0, 0, 0, 0, 1248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 791, 310, 0, 807, 0, 0,
	1273, 1274, 777, 0, 844, 467, 0, 0, 0, 0,
	0, 828, 0, 0, 0, 0, 0, 310, 0, 0,
	0, 0, 0, 107, 0, 0, 107, 107, 107, 310,
	0, 0, 0, 0, 0, 107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 857, 0, 0, 0, 0,
	0, 0, 1022, 0, 0, 0, 1084, 0, 0, 722,
	0, 0, 0, 804, 0, 0, 0, 804, 0, 0,
	0, 870, 873, 874, 875, 876, 877, 878, 0, 879,
	880, 881, 882, 883, 858, 859, 860, 861, 842, 843,
	871, 0, 845, 0, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 862, 863, 864, 865, 866, 867,
	868, 869, 0, 0, 0, 107, 0, 0, 0, 0,
	0, 0, 0, 107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 0, 0, 34, 107, 0,
	0, 0, 635, 0, 635, 0, 0, 107, 0, 0,
	467, 467, 467, 0, 310, 0, 0, 0, 0, 0,
	0, 0, 635, 872, 0, 0, 0, 390, 467, 0,
	0, 0, 0, 467, 467, 467, 0, 467, 467, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	467, 0, 0, 0, 107, 107, 0, 107, 0, 0,
	0, 0, 107, 1435, 107, 107, 107, 310, 0, 0,
	107, 0, 0, 0, 308, 0, 0, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 107, 310, 0,
	0, 107, 0, 0, 0, 0, 0, 0, 0, 1448,
	0, 0, 0, 0, 0, 0, 0, 1228, 0, 0,
	428, 0, 450, 0, 0, 458, 0, 0, 0, 0,
	308, 0, 308, 0, 0, 990, 0, 0, 467, 0,
	0, 0, 0, 0, 0, 0, 0, 107, 107, 0,
	0, 0, 1020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 107, 0, 0, 0, 0, 1024,
	1025, 0, 0, 0, 0, 0, 310, 0, 0, 804,
	0, 0, 0, 107, 0, 1292, 1293, 0, 0, 804,
	804, 804, 804, 804, 1052, 0, 0, 0, 0, 0,
	0, 0, 0, 107, 0, 791, 1084, 0, 467, 0,
	0, 0, 0, 1320, 0, 0, 804, 0, 0, 807,
	0, 0, 0, 0, 0, 0, 807, 0, 0, 0,
	807, 0, 0, 467, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1549, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 354, 0, 0, 0, 0, 0, 0, 1568,
	34, 0, 1569, 0, 0, 1571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 467, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	635, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 0, 308, 0,
	0, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	0, 0, 357, 308, 0, 0, 0, 0, 1210, 0,
	1212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1612, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1456, 0, 34, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 0, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 807, 0, 0, 0, 450, 0, 0, 0,
	0, 1020, 807, 0, 0, 807, 0, 34, 0, 308,
	808, 308, 0, 0, 0, 0, 0, 0, 0, 807,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1572, 1573, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 635, 308,
	34, 0, 0, 0, 0, 0, 308, 0, 0, 0,
	308, 0, 308, 0, 467, 0, 0, 999, 1000, 308,
	0, 0, 308, 0, 0, 308, 0, 0, 0, 914,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1456, 0, 34, 0, 0, 0, 0, 0, 0,
	0, 0, 1041, 0, 0, 0, 0, 0, 0, 0,
	308, 0, 467, 0, 1020, 0, 0, 1458, 1460, 0,
	0, 0, 0, 1644, 0, 0, 0, 0, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 0, 0,
	0, 0, 0, 0, 0, 1460, 0, 0, 1456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 467, 1487, 0, 0, 0, 0, 0, 0, 0,
	450, 914, 0, 0, 0, 450, 450, 0, 0, 450,
	450, 450, 0, 0, 0, 1021, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 450, 450, 450, 450, 450, 0,
	0, 0, 0, 0, 0, 0, 1513, 0, 0, 1518,
	1519, 1520, 0, 0, 0, 0, 0, 0, 1526, 0,
	0, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	0, 914, 1715, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 808, 1088, 1088, 0, 0, 0, 0, 808,
	308, 0, 0, 808, 1099, 914, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1020, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 467, 0,
	0, 0, 0, 0, 0, 0, 1526, 0, 0, 0,
	1224, 0, 0, 0, 1225, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 308, 1232, 1233, 0, 0, 0,
	467, 1239, 308, 0, 1242, 1243, 0, 308, 308, 308,
	308, 308, 1249, 308, 308, 0, 1251, 308, 0, 1254,
	1255, 1256, 1257, 1258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 308, 0, 308,
	0, 0, 308, 0, 1206, 1207, 0, 1618, 1619, 308,
	1620, 0, 0, 0, 0, 1526, 0, 1526, 1526, 1526,
	0, 0, 0, 1487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1311, 1312, 1313, 0, 0, 0,
	1526, 0, 0, 0, 1649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	450, 450, 960, 0, 0, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	0, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 467, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1020, 0, 1690, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1023, 450, 808, 1696, 0, 0, 0,
	0, 0, 0, 0, 1021, 808, 308, 308, 808, 308,
	0, 0, 0, 0, 0, 0, 1526, 1310, 0, 0,
	0, 0, 808, 0, 0, 1088, 0, 0, 0, 0,
	914, 0, 808, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1409,
	1410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1473, 914, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 914, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 0, 0, 1218,
	1219, 1220, 0, 0, 0, 0, 0, 1021, 0, 0,
	0, 0, 0, 0, 1529, 0, 0, 0, 1531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1540,
	1541, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1560,
	1561, 0, 1564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1575, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1624, 0, 0, 0, 0,
	1021, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1650, 1651, 1652, 1653,
	0, 1657, 0, 1658, 1659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1665, 0, 1666, 1667,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	914, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1407, 1408, 1685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1428, 1429, 0, 1430, 1431, 0, 0, 0, 0, 0,
	0, 0, 1694, 0, 0, 1438, 1439, 0, 0, 0,
	0, 0, 0, 1088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1729, 1730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1021, 1494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1603, 1604, 1605, 1606, 1607,
	0, 0, 0, 1610, 1611, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 576, 564, 0, 522,
	579, 494, 512, 587, 513, 516, 552, 480, 534, 203,
	510, 0, 498, 475, 506, 476, 496, 524, 142, 171,
	138, 566, 537, 578, 173, 0, 499, 585, 175, 543,
	0, 254, 190, 0, 0, 0, 526, 568, 532, 561,
	521, 553, 485, 542, 580, 511, 550, 581, 0, 0,
	0, 108, 109, 110, 0, 1119, 1120, 0, 0, 0,
	0, 0, 131, 0, 547, 575, 508, 549, 551, 589,
	474, 544, 0, 478, 481, 586, 571, 502, 503, 1336,
	0, 0, 0, 0, 0, 0, 525, 533, 558, 519,
	0, 0, 0, 0, 0, 0, 0, 0, 500, 0,
	541, 0, 0, 0, 482, 479, 0, 0, 0, 0,
	523, 0, 0, 0, 484, 0, 501, 559, 0, 472,
	151, 563, 570, 520, 314, 574, 518, 517, 577, 222,
	0, 259, 154, 172, 127, 168, 112, 123, 1721, 153,
	200, 231, 235, 567, 497, 507, 135, 504, 233, 210,
	275, 540, 212, 232, 176, 265, 223, 274, 284, 285,
	262, 282, 289, 250, 116, 261, 273, 132, 244, 0,
	0, 0, 118, 271, 257, 188, 164, 165, 117, 0,
	229, 141, 149, 137, 202, 268, 269, 136, 292, 124,
	281, 120, 125, 280, 196, 264, 272, 189, 181, 119,
	270, 187, 180, 170, 145, 156, 220, 178, 221, 157,
	192, 191, 193, 0, 477, 0, 255, 278, 293, 129,
	493, 263, 287, 288, 0, 224, 130, 150, 144, 219,
	148, 194, 126, 159, 252, 169, 177, 228, 291, 209,
	234, 133, 277, 253, 489, 492, 487, 488, 535, 536,
	582, 583, 584, 560, 483, 0, 490, 491, 0, 565,
	572, 573, 539, 111, 121, 174, 290, 226, 147, 279,
	473, 486, 140, 495, 0, 0, 509, 514, 515, 527,
	528, 529, 530, 531, 538, 545, 546, 548, 554, 555,
	556, 557, 562, 569, 588, 113, 114, 122, 128, 134,
	139, 143, 146, 152, 155, 158, 160, 161, 162, 167,
	179, 183, 184, 185, 186, 197, 198, 199, 201, 204,
	205, 206, 207, 208, 211, 213, 214, 215, 216, 217,
	218, 227, 230, 236, 237, 238, 239, 240, 241, 243,
	246, 247, 248, 249, 256, 260, 266, 267, 276, 283,
	286, 0, 0, 0, 0, 115, 166, 182, 311, 242,
	245, 251, 258, 312, 313, 0, 0, 0, 505, 225,
	195, 163, 576, 564, 0, 522, 579, 494, 512, 587,
	513, 516, 552, 480, 534, 203, 510, 0, 498, 475,
	506, 476, 496, 524, 142, 171, 138, 566, 537, 578,
	173, 0, 499, 585, 175, 543, 0, 254, 190, 0,
	0, 0, 526, 568, 532, 561, 521, 553, 485, 542,
	580, 511, 550, 581, 0, 0, 0, 108, 109, 110,
	0, 1119, 1120, 0, 0, 0, 0, 0, 131, 0,
	547, 575, 508, 549, 551, 589, 474, 544, 0, 478,
	481, 586, 571, 502, 503, 0, 0, 0, 0, 0,
	0, 0, 525, 533, 558, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 500, 0, 541, 0, 0, 0,
	482, 479, 0, 0, 0, 0, 523, 0, 0, 0,
	484, 0, 501, 559, 0, 472, 151, 563, 570, 520,
	314, 574, 518, 517, 577, 222, 0, 259, 154, 172,
	127, 168, 112, 123, 0, 153, 200, 231, 235, 567,
	497, 507, 135, 504, 233, 210, 275, 540, 212, 232,
	176, 265, 223, 274, 284, 285, 262, 282, 289, 250,
	116, 261, 273, 132, 244, 0, 0, 0, 118, 271,
	257, 188, 164, 165, 117, 0, 229, 141, 149, 137,
	202, 268, 269, 136, 292, 124, 281, 120, 125, 280,
	196, 264, 272, 189, 181, 119, 270, 187, 180, 170,
	145, 156, 220, 178, 221, 157, 192, 191, 193, 0,
	477, 0, 255, 278, 293, 129, 493, 263, 287, 288,
	0, 224, 130, 150, 144, 219, 148, 194, 126, 159,
	252, 169, 177, 228, 291, 209, 234, 133, 277, 253,
	489, 492, 487, 488, 535, 536, 582, 583, 584, 560,
	483, 0, 490, 491, 0, 565, 572, 573, 539, 111,
	121, 174, 290, 226, 147, 279, 473, 486, 140, 495,
	0, 0, 509, 514, 515, 527, 528, 529, 530, 531,
	538, 545, 546, 548, 554, 555, 556, 557, 562, 569,
	588, 113, 114, 122, 128, 134, 139, 143, 146, 152,
	155, 158, 160, 161, 162, 167, 179, 183, 184, 185,
	186, 197, 198, 199, 201, 204, 205, 206, 207, 208,
	211, 213, 214, 215, 216, 217, 218, 227, 230, 236,
	237, 238, 239, 240, 241, 243, 246, 247, 248, 249,
	256, 260, 266, 267, 276, 283, 286, 0, 0, 0,
	0, 115, 166, 182, 311, 242, 245, 251, 258, 312,
	313, 0, 0, 0, 505, 225, 195, 163, 576, 564,
	0, 522, 579, 494, 512, 587, 513, 516, 552, 480,
	534, 203, 510, 0, 498, 475, 506, 476, 496, 524,
	142, 171, 138, 566, 537, 578, 173, 0, 499, 585,
	175, 543, 0, 254, 190, 0, 0, 0, 526, 568,
	532, 561, 521, 553, 485, 542, 580, 511, 550, 581,
	68, 0, 0, 108, 109, 110, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 0, 547, 575, 508, 549,
	551, 589, 474, 544, 0, 478, 481, 586, 571, 502,
	503, 0, 0, 0, 0, 0, 0, 0, 525, 533,
	558, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	500, 0, 541, 0, 0, 0, 482, 479, 0, 0,
	0, 0, 523, 0, 0, 0, 484, 0, 501, 559,
	0, 472, 151, 563, 570, 520, 314, 574, 518, 517,
	577, 222, 0, 259, 154, 172, 127, 168, 112, 123,
	0, 153, 200, 231, 235, 567, 497, 507, 135, 504,
	233, 210, 275, 540, 212, 232, 176, 265, 223, 274,
	284, 285, 262, 282, 289, 250, 116, 261, 273, 132,
	244, 0, 0, 0, 118, 271, 257, 188, 164, 165,
	117, 0, 229, 141, 149, 137, 202, 268, 269, 136,
	292, 124, 281, 120, 125, 280, 196, 264, 272, 189,
	181, 119, 270, 187, 180, 170, 145, 156, 220, 178,
	221, 157, 192, 191, 193, 0, 477, 0, 255, 278,
	293, 129, 493, 263, 287, 288, 0, 224, 130, 150,
	144, 219, 148, 194, 126, 159, 252, 169, 177, 228,
	291, 209, 234, 133, 277, 253, 489, 492, 487, 488,
	535, 536, 582, 583, 584, 560, 483, 0, 490, 491,
	0, 565, 572, 573, 539, 111, 121, 174, 290, 226,
	147, 279, 473, 486, 140, 495, 0, 0, 509, 514,
	515, 527, 528, 529, 530, 531, 538, 545, 546, 548,
	554, 555, 556, 557, 562, 569, 588, 113, 114, 122,
	128, 134, 139, 143, 146, 152, 155, 158, 160, 161,
	162, 167, 179, 183, 184, 185, 186, 197, 198, 199,
	201, 204, 205, 206, 207, 208, 211, 213, 214, 215,
	216, 217, 218, 227, 230, 236, 237, 238, 239, 240,
	241, 243, 246, 247, 248, 249, 256, 260, 266, 267,
	276, 283, 286, 0, 0, 0, 0, 115, 166, 182,
	311, 242, 245, 251, 258, 312, 313, 0, 0, 0,
	505, 225, 195, 163, 576, 564, 0, 522, 579, 494,
	512, 587, 513, 516, 552, 480, 534, 203, 510, 0,
	498, 475, 506, 476, 496, 524, 142, 171, 138, 566,
	537, 578, 173, 0, 499, 585, 175, 543, 0, 254,
	190, 0, 0, 0, 526, 568, 532, 561, 521, 553,
	485, 542, 580, 511, 550, 581, 0, 0, 0, 108,
	109, 110, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 0, 547, 575, 508, 549, 551, 589, 474, 544,
	0, 478, 481, 586, 571, 502, 503, 0, 0, 0,
	0, 0, 0, 0, 525, 533, 558, 519, 0, 0,
	0, 0, 0, 0, 1449, 0, 500, 0, 541, 0,
	0, 0, 482, 479, 0, 0, 0, 0, 523, 0,
	0, 0, 484, 0, 501, 559, 0, 472, 151, 563,
	570, 520, 314, 574, 518, 517, 577, 222, 0, 259,
	154, 172, 127, 168, 112, 123, 0, 153, 200, 231,
	235, 567, 497, 507, 135, 504, 233, 210, 275, 540,
	212, 232, 176, 265, 223, 274, 284, 285, 262, 282,
	289, 250, 116, 261, 273, 132, 244, 0, 0, 0,
	118, 271, 257, 188, 164, 165, 117, 0, 229, 141,
	149, 137, 202, 268, 269, 136, 292, 124, 281, 120,
	125, 280, 196, 264, 272, 189, 181, 119, 270, 187,
	180, 170, 145, 156, 220, 178, 221, 157, 192, 191,
	193, 0, 477, 0, 255, 278, 293, 129, 493, 263,
	287, 288, 0, 224, 130, 150, 144, 219, 148, 194,
	126, 159, 252, 169, 177, 228, 291, 209, 234, 133,
	277, 253, 489, 492, 487, 488, 535, 536, 582, 583,
	584, 560, 483, 0, 490, 491, 0, 565, 572, 573,
	539, 111, 121, 174, 290, 226, 147, 279, 473, 486,
	140, 495, 0, 0, 509, 514, 515, 527, 528, 529,
	530, 531, 538, 545, 546, 548, 554, 555, 556, 557,
	562, 569, 588, 113, 114, 122, 128, 134, 139, 143,
	146, 152, 155, 158, 160, 161, 162, 167, 179, 183,
	184, 185, 186, 197, 198, 199, 201, 204, 205, 206,
	207, 208, 211, 213, 214, 215, 216, 217, 218, 227,
	230, 236, 237, 238, 239, 240, 241, 243, 246, 247,
	248, 249, 256, 260, 266, 267, 276, 283, 286, 0,
	0, 0, 0, 115, 166, 182, 311, 242, 245, 251,
	258, 312, 313, 0, 0, 0, 505, 225, 195, 163,
	576, 564, 0, 522, 579, 494, 512, 587, 513, 516,
	552, 480, 534, 203, 510, 0, 498, 475, 506, 476,
	496, 524, 142, 171, 138, 566, 537, 578, 173, 0,
	499, 585, 175, 543, 0, 254, 190, 0, 0, 0,
	526, 568, 532, 561, 521, 553, 485, 542, 580, 511,
	550, 581, 0, 0, 0, 108, 109, 110, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 0, 547, 575,
	508, 549, 551, 589, 474, 544, 0, 478, 481, 586,
	571, 502, 503, 0, 0, 0, 0, 0, 0, 0,
	525, 533, 558, 519, 0, 0, 0, 0, 0, 0,
	1100, 0, 500, 0, 541, 0, 0, 0, 482, 479,
	0, 0, 0, 0, 523, 0, 0, 0, 484, 0,
	501, 559, 0, 472, 151, 563, 570, 520, 314, 574,
	518, 517, 577, 222, 0, 259, 154, 172, 127, 168,
	112, 123, 0, 153, 200, 231, 235, 567, 497, 507,
	135, 504, 233, 210, 275, 540, 212, 232, 176, 265,
	223, 274, 284, 285, 262, 282, 289, 250, 116, 261,
	273, 132, 244, 0, 0, 0, 118, 271, 257, 188,
	164, 165, 117, 0, 229, 141, 149, 137, 202, 268,
	269, 136, 292, 124, 281, 120, 125, 280, 196, 264,
	272, 189, 181, 119, 270, 187, 180, 170, 145, 156,
	220, 178, 221, 157, 192, 191, 193, 0, 477, 0,
	255, 278, 293, 129, 493, 263, 287, 288, 0, 224,
	130, 150, 144, 219, 148, 194, 126, 159, 252, 169,
	177, 228, 291, 209, 234, 133, 277, 253, 489, 492,
	487, 488, 535, 536, 582, 583, 584, 560, 483, 0,
	490, 491, 0, 565, 572, 573, 539, 111, 121, 174,
	290, 226, 147, 279, 473, 486, 140, 495, 0, 0,
	509, 514, 515, 527, 528, 529, 530, 531, 538, 545,
	546, 548, 554, 555, 556, 557, 562, 569, 588, 113,
	114, 122, 128, 134, 139, 143, 146, 152, 155, 158,
	160, 161, 162, 167, 179, 183, 184, 185, 186, 197,
	198, 199, 201, 204, 205, 206, 207, 208, 211, 213,
	214, 215, 216, 217, 218, 227, 230, 236, 237, 238,
	239, 240, 241, 243, 246, 247, 248, 249, 256, 260,
	266, 267, 276, 283, 286, 0, 0, 0, 0, 115,
	166, 182, 311, 242, 245, 251, 258, 312, 313, 0,
	0, 0, 505, 225, 195, 163, 576, 564, 0, 522,
	579, 494, 512, 587, 513, 516, 552, 480, 534, 203,
	510, 0, 498, 475, 506, 476, 496, 524, 142, 171,
	138, 566, 537, 578, 173, 0, 499, 585, 175, 543,
	0, 254, 190, 0, 0, 0, 526, 568, 532, 561,
	521, 553, 485, 542, 580, 511, 550, 581, 0, 0,
	0, 108, 109, 110, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 0, 547, 575, 508, 549, 551, 589,
	474, 544, 0, 478, 481, 586, 571, 502, 503, 0,
	0, 0, 0, 0, 0, 0, 525, 533, 558, 519,
	0, 0, 0, 0, 0, 0, 1061, 0, 500, 0,
	541, 0, 0, 0, 482, 479, 0, 0, 0, 0,
	523, 0, 0, 0, 484, 0, 501, 559, 0, 472,
	151, 563, 570, 520, 314, 574, 518, 517, 577, 222,
	0, 259, 154, 172, 127, 168, 112, 123, 0, 153,
	200, 231, 235, 567, 497, 507, 135, 504, 233, 210,
	275, 540, 212, 232, 176, 265, 223, 274, 284, 285,
	262, 282, 289, 250, 116, 261, 273, 132, 244, 0,
	0, 0, 118, 271, 257, 188, 164, 165, 117, 0,
	229, 141, 149, 137, 202, 268, 269, 136, 292, 124,
	281, 120, 125, 280, 196, 264, 272, 189, 181, 119,
	270, 187, 180, 170, 145, 156, 220, 178, 221, 157,
	192, 191, 193, 0, 477, 0, 255, 278, 293, 129,
	493, 263, 287, 288, 0, 224, 130, 150, 144, 219,
	148, 194, 126, 159, 252, 169, 177, 228, 291, 209,
	234, 133, 277, 253, 489, 492, 487, 488, 535, 536,
	582, 583, 584, 560, 483, 0, 490, 491, 0, 565,
	572, 573, 539, 111, 121, 174, 290, 226, 147, 279,
	473, 486, 140, 495, 0, 0, 509, 514, 515, 527,
	528, 529, 530, 531, 538, 545, 546, 548, 554, 555,
	556, 557, 562, 569, 588, 113, 114, 122, 128, 134,
	139, 143, 146, 152, 155, 158, 160, 161, 162, 167,
	179, 183, 184, 185, 186, 197, 198, 199, 201, 204,
	205, 206, 207, 208, 211, 213, 214, 215, 216, 217,
	218, 227, 230, 236, 237, 238, 239, 240, 241, 243,
	246, 247, 248, 249, 256, 260, 266, 267, 276, 283,
	286, 0, 0, 0, 0, 115, 166, 182, 311, 242,
	245, 251, 258, 312, 313, 0, 0, 0, 505, 225,
	195, 163, 576, 564, 0, 522, 579, 494, 512, 587,
	513, 516, 552, 480, 534, 203, 510, 0, 498, 475,
	506, 476, 496, 524, 142, 171, 138, 566, 537, 578,
	173, 0, 499, 585, 175, 543, 0, 254, 190, 0,
	0, 0, 526, 568, 532, 561, 521, 553, 485, 542,
	580, 511, 550, 581, 0, 0, 0, 108, 109, 110,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 0,
	547, 575, 508, 549, 551, 589, 474, 544, 0, 478,
	481, 586, 571, 502, 503, 0, 0, 0, 0, 0,
	0, 0, 525, 533, 558, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 500, 0, 541, 0, 0, 0,
	482, 479, 0, 0, 0, 0, 523, 0, 0, 0,
	484, 0, 501, 559, 0, 472, 151, 563, 570, 520,
	314, 574, 518, 517, 577, 222, 0, 259, 154, 172,
	127, 168, 112, 123, 0, 153, 200, 231, 235, 567,
	497, 507, 135, 504, 233, 210, 275, 540, 212, 232,
	176, 265, 223, 274, 284, 285, 262, 282, 289, 250,
	116, 261, 273, 132, 244, 0, 0, 0, 118, 271,
	257, 188, 164, 165, 117, 0, 229, 141, 149, 137,
	202, 268, 269, 136, 292, 124, 281, 120, 125, 280,
	196, 264, 272, 189, 181, 119, 270, 187, 180, 170,
	145, 156, 220, 178, 221, 157, 192, 191, 193, 0,
	477, 0, 255, 278, 293, 129, 493, 263, 287, 288,
	0, 224, 130, 150, 144, 219, 148, 194, 126, 159,
	252, 169, 177, 228, 291, 209, 234, 133, 277, 253,
	489, 492, 487, 488, 535, 536, 582, 583, 584, 560,
	483, 0, 490, 491, 0, 565, 572, 573, 539, 111,
	121, 174, 290, 226, 147, 279, 473, 486, 140, 495,
	0, 0, 509, 514, 515, 527, 528, 529, 530, 531,
	538, 545, 546, 548, 554, 555, 556, 557, 562, 569,
	588, 113, 114, 122, 128, 134, 139, 143, 146, 152,
	155, 158, 160, 161, 162, 167, 179, 183, 184, 185,
	186, 197, 198, 199, 201, 204, 205, 206, 207, 208,
	211, 213, 214, 215, 216, 217, 218, 227, 230, 236,
	237, 238, 239, 240, 241, 243, 246, 247, 248, 249,
	256, 260, 266, 267, 276, 283, 286, 0, 0, 0,
	0, 115, 166, 182, 311, 242, 245, 251, 258, 312,
	313, 0, 0, 0, 505, 225, 195, 163, 576, 564,
	0, 522, 579, 494, 512, 587, 513, 516, 552, 480,
	534, 203, 510, 0, 498, 475, 506, 476, 496, 524,
	142, 171, 138, 566, 537, 578, 173, 0, 499, 585,
	175, 543, 0, 254, 190, 0, 0, 0, 526, 568,
	532, 561, 521, 553, 485, 542, 580, 511, 550, 581,
	0, 0, 0, 108, 109, 110, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 0, 547, 575, 508, 549,
	551, 589, 474, 544, 0, 478, 481, 586, 571, 502,
	503, 0, 0, 0, 0, 0, 0, 0, 525, 533,
	558, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	500, 0, 541, 0, 0, 0, 482, 479, 0, 0,
	0, 0, 523, 0, 0, 0, 484, 0, 501, 559,
	0, 472, 151, 563, 570, 520, 314, 574, 518, 517,
	577, 222, 0, 259, 154, 172, 127, 168, 112, 123,
	0, 153, 200, 231, 235, 567, 497, 507, 135, 504,
	233, 210, 275, 540, 212, 232, 176, 265, 223, 274,
	284, 285, 262, 282, 289, 250, 116, 261, 273, 132,
	244, 0, 0, 0, 118, 271, 257, 188, 164, 165,
	117, 0, 229, 141, 149, 137, 202, 268, 269, 136,
	292, 124, 281, 120, 470, 280, 196, 264, 272, 189,
	181, 119, 270, 187, 180, 170, 145, 156, 220, 178,
	221, 157, 192, 191, 193, 0, 477, 0, 255, 278,
	293, 129, 493, 263, 287, 288, 0, 224, 130, 150,
	144, 219, 148, 471, 469, 159, 252, 169, 177, 228,
	291, 209, 234, 133, 277, 253, 489, 492, 487, 488,
	535, 536, 582, 583, 584, 560, 483, 0, 490, 491,
	0, 565, 572, 573, 539, 111, 121, 174, 290, 226,
	147, 279, 473, 486, 140, 495, 0, 0, 509, 514,
	515, 527, 528, 529, 530, 531, 538, 545, 546, 548,
	554, 555, 556, 557, 562, 569, 588, 113, 114, 122,
	128, 134, 139, 143, 146, 152, 155, 158, 160, 161,
	162, 167, 179, 183, 184, 185, 186, 197, 198, 199,
	201, 204, 205, 206, 207, 208, 211, 213, 214, 215,
	216, 217, 218, 227, 230, 236, 237, 238, 239, 240,
	241, 243, 246, 247, 248, 249, 256, 260, 266, 267,
	276, 283, 286, 0, 0, 0, 0, 115, 166, 182,
	311, 242, 245, 251, 258, 312, 313, 0, 0, 0,
	505, 225, 195, 163, 576, 564, 0, 522, 579, 494,
	512, 587, 513, 516, 552, 480, 534, 203, 510, 0,
	498, 475, 506, 476, 496, 524, 142, 171, 138, 566,
	537, 578, 173, 0, 499, 585, 175, 543, 0, 254,
	190, 0, 0, 0, 526, 568, 532, 561, 521, 553,
	485, 542, 580, 511, 550, 581, 0, 0, 0, 108,
	109, 110, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 0, 547, 575, 508, 549, 551, 589, 474, 544,
	0, 478, 481, 586, 571, 502, 503, 0, 0, 0,
	0, 0, 0, 0, 525, 533, 558, 519, 0, 0,
	0, 0, 0, 0, 0, 0, 500, 0, 541, 0,
	0, 0, 482, 479, 0, 0, 0, 0, 523, 0,
	0, 0, 484, 0, 501, 559, 0, 472, 151, 563,
	570, 520, 314, 574, 518, 517, 577, 222, 0, 259,
	154, 172, 127, 168, 112, 123, 0, 153, 200, 231,
	235, 567, 497, 507, 135, 504, 233, 210, 275, 540,
	212, 232, 176, 265, 223, 274, 284, 285, 262, 282,
	289, 250, 116, 261, 819, 132, 244, 0, 0, 0,
	118, 271, 257, 188, 164, 165, 117, 0, 229, 141,
	149, 137, 202, 268, 269, 136, 292, 124, 281, 120,
	470, 280, 196, 264, 272, 189, 181, 119, 270, 187,
	180, 170, 145, 156, 220, 178, 221, 157, 192, 191,
	193, 0, 477, 0, 255, 278, 293, 129, 493, 263,
	287, 288, 0, 224, 130, 150, 144, 219, 148, 471,
	469, 159, 252, 169, 177, 228, 291, 209, 234, 133,
	277, 253, 489, 492, 487, 488, 535, 536, 582, 583,
	584, 560, 483, 0, 490, 491, 0, 565, 572, 573,
	539, 111, 121, 174, 290, 226, 147, 279, 473, 486,
	140, 495, 0, 0, 509, 514, 515, 527, 528, 529,
	530, 531, 538, 545, 546, 548, 554, 555, 556, 557,
	562, 569, 588, 113, 114, 122, 128, 134, 139, 143,
	146, 152, 155, 158, 160, 161, 162, 167, 179, 183,
	184, 185, 186, 197, 198, 199, 201, 204, 205, 206,
	207, 208, 211, 213, 214, 215, 216, 217, 218, 227,
	230, 236, 237, 238, 239, 240, 241, 243, 246, 247,
	248, 249, 256, 260, 266, 267, 276, 283, 286, 0,
	0, 0, 0, 115, 166, 182, 311, 242, 245, 251,
	258, 312, 313, 0, 0, 0, 505, 225, 195, 163,
	576, 564, 0, 522, 579, 494, 512, 587, 513, 516,
	552, 480, 534, 203, 510, 0, 498, 475, 506, 476,
	496, 524, 142, 171, 138, 566, 537, 578, 173, 0,
	499, 585, 175, 543, 0, 254, 190, 0, 0, 0,
	526, 568, 532, 561, 521, 553, 485, 542, 580, 511,
	550, 581, 0, 0, 0, 108, 109, 110, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 0, 547, 575,
	508, 549, 551, 589, 474, 544, 0, 478, 481, 586,
	571, 502, 503, 0, 0, 0, 0, 0, 0, 0,
	525, 533, 558, 519, 0, 0, 0, 0, 0, 0,
	0, 0, 500, 0, 541, 0, 0, 0, 482, 479,
	0, 0, 0, 0, 523, 0, 0, 0, 484, 0,
	501, 559, 0, 472, 151, 563, 570, 520, 314, 574,
	518, 517, 577, 222, 0, 259, 154, 172, 127, 168,
	112, 123, 0, 153, 200, 231, 235, 567, 497, 507,
	135, 504, 233, 210, 275, 540, 212, 232, 176, 265,
	223, 274, 284, 285, 262, 282, 289, 250, 116, 261,
	461, 132, 244, 0, 0, 0, 118, 271, 257, 188,
	164, 165, 117, 0, 229, 141, 149, 137, 202, 268,
	269, 136, 292, 124, 281, 120, 470, 280, 196, 264,
	272, 189, 181, 119, 270, 187, 180, 170, 145, 156,
	220, 178, 221, 157, 192, 191, 193, 0, 477, 0,
	255, 278, 293, 129, 493, 263, 287, 288, 0, 224,
	130, 150, 144, 219, 148, 471, 469, 464, 463, 169,
	177, 228, 291, 209, 234, 133, 277, 253, 489, 492,
	487, 488, 535, 536, 582, 583, 584, 560, 483, 0,
	490, 491, 0, 565, 572, 573, 539, 111, 121, 174,
	290, 226, 147, 279, 473, 486, 140, 495, 0, 0,
	509, 514, 515, 527, 528, 529, 530, 531, 538, 545,
	546, 548, 554, 555, 556, 557, 562, 569, 588, 113,
	114, 122, 128, 134, 139, 143, 146, 152, 155, 158,
	160, 161, 162, 167, 179, 183, 184, 185, 186, 197,
	198, 199, 201, 204, 205, 206, 207, 208, 211, 213,
	214, 215, 216, 217, 218, 227, 230, 236, 237, 238,
	239, 240, 241, 243, 246, 247, 248, 249, 256, 260,
	266, 267, 276, 283, 286, 0, 0, 0, 0, 115,
	166, 182, 311, 242, 245, 251, 258, 312, 313, 0,
	0, 0, 505, 225, 195, 163, 203, 0, 0, 992,
	0, 359, 0, 0, 0, 142, 171, 358, 0, 0,
	0, 173, 0, 993, 402, 175, 0, 0, 254, 190,
	0, 0, 0, 0, 0, 393, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 108, 109,
	110, 380, 379, 382, 383, 384, 385, 0, 0, 131,
	381, 386, 387, 388, 0, 0, 0, 0, 356, 373,
	0, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 371, 448, 0, 0, 0, 416, 0, 372,
	0, 0, 365, 366, 368, 367, 369, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 415, 0,
	0, 314, 0, 0, 413, 0, 222, 0, 259, 154,
	172, 127, 168, 112, 123, 0, 153, 200, 231, 235,
	0, 0, 0, 135, 0, 233, 210, 275, 0, 212,
	232, 176, 265, 223, 274, 284, 285, 262, 282, 289,
	250, 116, 261, 273, 132, 244, 0, 0, 0, 118,
	271, 257, 188, 164, 165, 117, 0, 229, 141, 149,
	137, 202, 268, 269, 136, 292, 124, 281, 120, 125,
	280, 196, 264, 272, 189, 181, 119, 270, 187, 180,
	170, 145, 156, 220, 178, 221, 157, 192, 191, 193,
	0, 0, 0, 255, 278, 293, 129, 0, 263, 287,
	288, 0, 224, 130, 150, 144, 219, 148, 194, 126,
	159, 252, 169, 177, 228, 291, 209, 234, 133, 277,
	253, 403, 414, 409, 410, 407, 408, 406, 405, 404,
	417, 395, 396, 397, 398, 400, 0, 411, 412, 399,
	111, 121, 174, 290, 226, 147, 279, 0, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 114, 122, 128, 134, 139, 143, 146,
	152, 155, 158, 160, 161, 162, 167, 179, 183, 184,
	185, 186, 197, 198, 199, 201, 204, 205, 206, 207,
	208, 211, 213, 214, 215, 216, 217, 218, 227, 230,
	236, 237, 238, 239, 240, 241, 243, 246, 247, 248,
	249, 256, 260, 266, 267, 276, 283, 286, 0, 0,
	0, 0, 115, 166, 182, 311, 242, 245, 251, 258,
	312, 313, 0, 0, 203, 0, 225, 195, 163, 359,
	0, 0, 0, 142, 171, 358, 0, 0, 0, 173,
	0, 0, 402, 175, 0, 0, 254, 190, 0, 0,
	0, 0, 0, 393, 394, 0, 0, 0, 0, 0,
	0, 1110, 0, 68, 0, 0, 108, 109, 110, 380,
	379, 382, 383, 384, 385, 0, 0, 131, 381, 386,
	387, 388, 1111, 0, 0, 0, 356, 373, 0, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	371, 0, 0, 0, 0, 416, 0, 372, 0, 0,
	365, 366, 368, 367, 369, 374, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 415, 0, 0, 314,
	0, 0, 413, 0, 222, 0, 259, 154, 172, 127,
	168, 112, 123, 0, 153, 200, 231, 235, 0, 0,
	0, 135, 0, 233, 210, 275, 0, 212, 232, 176,
	265, 223, 274, 284, 285, 262, 282, 289, 250, 116,
	261, 273, 132, 244, 0, 0, 0, 118, 271, 257,
	188, 164, 165, 117, 0, 229, 141, 149, 137, 202,
	268, 269, 136, 292, 124, 281, 120, 125, 280, 196,
	264, 272, 189, 181, 119, 270, 187, 180, 170, 145,
	156, 220, 178, 221, 157, 192, 191, 193, 0, 0,
	0, 255, 278, 293, 129, 0, 263, 287, 288, 0,
	224, 130, 150, 144, 219, 148, 194, 126, 159, 252,
	169, 177, 228, 291, 209, 234, 133, 277, 253, 403,
	414, 409, 410, 407, 408, 406, 405, 404, 417, 395,
	396, 397, 398, 400, 0, 411, 412, 399, 111, 121,
	174, 290, 226, 147, 279, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 114, 122, 128, 134, 139, 143, 146, 152, 155,
	158, 160, 161, 162, 167, 179, 183, 184, 185, 186,
	197, 198, 199, 201, 204, 205, 206, 207, 208, 211,
	213, 214, 215, 216, 217, 218, 227, 230, 236, 237,
	238, 239, 240, 241, 243, 246, 247, 248, 249, 256,
	260, 266, 267, 276, 283, 286, 0, 0, 0, 0,
	115, 166, 182, 311, 242, 245, 251, 258, 312, 313,
	0, 0, 203, 0, 225, 195, 163, 359, 0, 0,
	0, 142, 171, 358, 0, 0, 0, 173, 0, 0,
	402, 175, 0, 0, 254, 190, 0, 0, 0, 0,
	0, 393, 394, 0, 0, 0, 0, 0, 0, 1107,
	0, 68, 0, 0, 108, 109, 110, 380, 379, 382,
	383, 384, 385, 0, 0, 131, 381, 386, 387, 388,
	1108, 0, 0, 0, 356, 373, 0, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 371, 0,
	0, 0, 0, 416, 0, 372, 0, 0, 365, 366,
	368, 367, 369, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 415, 0, 0, 314, 0, 0,
	413, 0, 222, 0, 259, 154, 172, 127, 168, 112,
	123, 0, 153, 200, 231, 235, 0, 0, 0, 135,
	0, 233, 210, 275, 0, 212, 232, 176, 265, 223,
	274, 284, 285, 262, 282, 289, 250, 116, 261, 273,
	132, 244, 0, 0, 0, 118, 271, 257, 188, 164,
	165, 117, 0, 229, 141, 149, 137, 202, 268, 269,
	136, 292, 124, 281, 120, 125, 280, 196, 264, 272,
	189, 181, 119, 270, 187, 180, 170, 145, 156, 220,
	178, 221, 157, 192, 191, 193, 0, 0, 0, 255,
	278, 293, 129, 0, 263, 287, 288, 0, 224, 130,
	150, 144, 219, 148, 194, 126, 159, 252, 169, 177,
	228, 291, 209, 234, 133, 277, 253, 403, 414, 409,
	410, 407, 408, 406, 405, 404, 417, 395, 396, 397,
	398, 400, 0, 411, 412, 399, 111, 121, 174, 290,
	226, 147, 279, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 114,
	122, 128, 134, 139, 143, 146, 152, 155, 158, 160,
	161, 162, 167, 179, 183, 184, 185, 186, 197, 198,
	199, 201, 204, 205, 206, 207, 208, 211, 213, 214,
	215, 216, 217, 218, 227, 230, 236, 237, 238, 239,
	240, 241, 243, 246, 247, 248, 249, 256, 260, 266,
	267, 276, 283, 286, 0, 0, 0, 0, 115, 166,
	182, 311, 242, 245, 251, 258, 312, 313, 0, 0,
	203, 0, 225, 195, 163, 359, 0, 0, 0, 142,
	171, 358, 0, 0, 0, 173, 0, 0, 402, 175,
	0, 0, 254, 190, 0, 0, 0, 0, 0, 393,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 436, 108, 109, 110, 380, 379, 382, 383, 384,
	385, 0, 0, 131, 381, 386, 387, 388, 0, 0,
	0, 0, 356, 373, 0, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 371, 0, 0, 0,
	0, 416, 0, 372, 0, 0, 365, 366, 368, 367,
	369, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 415, 0, 0, 314, 0, 0, 413, 0,
	222, 0, 259, 154, 172, 127, 168, 112, 123, 0,
	153, 200, 231, 235, 0, 0, 0, 135, 0, 233,
	210, 275, 0, 212, 232, 176, 265, 223, 274, 284,
	285, 262, 282, 289, 250, 116, 261, 273, 132, 244,
	0, 0, 0, 118, 271, 257, 188, 164, 165, 117,
	0, 229, 141, 149, 137, 202, 268, 269, 136, 292,
	124, 281, 120, 125, 280, 196, 264, 272, 189, 181,
	119, 270, 187, 180, 170, 145, 156, 220, 178, 221,
	157, 192, 191, 193, 0, 0, 0, 255, 278, 293,
	129, 0, 263, 287, 288, 0, 224, 130, 150, 144,
	219, 148, 194, 126, 159, 252, 169, 177, 228, 291,
	209, 234, 133, 277, 253, 403, 414, 409, 410, 407,
	408, 406, 405, 404, 417, 395, 396, 397, 398, 400,
	0, 411, 412, 399, 111, 121, 174, 290, 226, 147,
	279, 0, 0, 140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 114, 122, 128,
	134, 139, 143, 146, 152, 155, 158, 160, 161, 162,
	167, 179, 183, 184, 185, 186, 197, 198, 199, 201,
	204, 205, 206, 207, 208, 211, 213, 214, 215, 216,
	217, 218, 227, 230, 236, 237, 238, 239, 240, 241,
	243, 246, 247, 248, 249, 256, 260, 266, 267, 276,
	283, 286, 0, 0, 0, 0, 115, 166, 182, 311,
	242, 245, 251, 258, 312, 313, 0, 0, 203, 0,
	225, 195, 163, 359, 0, 0, 0, 142, 171, 358,
	0, 0, 0, 173, 0, 0, 402, 175, 0, 0,
	254, 190, 0, 0, 0, 0, 0, 393, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	108, 109, 110, 380, 379, 382, 383, 384, 385, 0,
	0, 131, 381, 386, 387, 388, 0, 0, 0, 0,
	356, 373, 0, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 371, 448, 0, 0, 0, 416,
	0, 372, 0, 0, 365, 366, 368, 367, 369, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	415, 0, 0, 314, 0, 0, 413, 0, 222, 0,
	259, 154, 172, 127, 168, 112, 123, 0, 153, 200,
	231, 235, 0, 0, 0, 135, 0, 233, 210, 275,
	0, 212, 232, 176, 265, 223, 274, 284, 285, 262,
	282, 289, 250, 116, 261, 273, 132, 244, 0, 0,
	0, 118, 271, 257, 188, 164, 165, 117, 0, 229,
	141, 149, 137, 202, 268, 269, 136, 292, 124, 281,
	120, 125, 280, 196, 264, 272, 189, 181, 119, 270,
	187, 180, 170, 145, 156, 220, 178, 221, 157, 192,
	191, 193, 0, 0, 0, 255, 278, 293, 129, 0,
	263, 287, 288, 0, 224, 130, 150, 144, 219, 148,
	194, 126, 159, 252, 169, 177, 228, 291, 209, 234,
	133, 277, 253, 403, 414, 409, 410, 407, 408, 406,
	405, 404, 417, 395, 396, 397, 398, 400, 0, 411,
	412, 399, 111, 121, 174, 290, 226, 147, 279, 0,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 114, 122, 128, 134, 139,
	143, 146, 152, 155, 158, 160, 161, 162, 167, 179,
	183, 184, 185, 186, 197, 198, 199, 201, 204, 205,
	206, 207, 208, 211, 213, 214, 215, 216, 217, 218,
	227, 230, 236, 237, 238, 239, 240, 241, 243, 246,
	247, 248, 249, 256, 260, 266, 267, 276, 283, 286,
	0, 0, 0, 0, 115, 166, 182, 311, 242, 245,
	251, 258, 312, 313, 0, 0, 203, 0, 225, 195,
	163, 359, 0, 0, 0, 142, 171, 358, 0, 0,
	0, 173, 0, 0, 402, 175, 0, 0, 254, 190,
	0, 0, 0, 0, 0, 393, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 108, 109,
	110, 380, 1010, 382, 383, 384, 385, 0, 0, 131,
	381, 386, 387, 388, 0, 0, 0, 0, 356, 373,
	0, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 371, 448, 0, 0, 0, 416, 0, 372,
	0, 0, 365, 366, 368, 367, 369, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 415, 0,
	0, 314, 0, 0, 413, 0, 222, 0, 259, 154,
	172, 127, 168, 112, 123, 0, 153, 200, 231, 235,
	0, 0, 0, 135, 0, 233, 210, 275, 0, 212,
	232, 176, 265, 223, 274, 284, 285, 262, 282, 289,
	250, 116, 261, 273, 132, 244, 0, 0, 0, 118,
	271, 257, 188, 164, 165, 117, 0, 229, 141, 149,
	137, 202, 268, 269, 136, 292, 124, 281, 120, 125,
	280, 196, 264, 272, 189, 181, 119, 270, 187, 180,
	170, 145, 156, 220, 178, 221, 157, 192, 191, 193,
	0, 0, 0, 255, 278, 293, 129, 0, 263, 287,
	288, 0, 224, 130, 150, 144, 219, 148, 194, 126,
	159, 252, 169, 177, 228, 291, 209, 234, 133, 277,
	253, 403, 414, 409, 410, 407, 408, 406, 405, 404,
	417, 395, 396, 397, 398, 400, 0, 411, 412, 399,
	111, 121, 174, 290, 226, 147, 279, 0, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 114, 122, 128, 134, 139, 143, 146,
	152, 155, 158, 160, 161, 162, 167, 179, 183, 184,
	185, 186, 197, 198, 199, 201, 204, 205, 206, 207,
	208, 211, 213, 214, 215, 216, 217, 218, 227, 230,
	236, 237, 238, 239, 240, 241, 243, 246, 247, 248,
	249, 256, 260, 266, 267, 276, 283, 286, 0, 0,
	0, 0, 115, 166, 182, 311, 242, 245, 251, 258,
	312, 313, 0, 0, 203, 0, 225, 195, 163, 359,
	0, 0, 0, 142, 171, 358, 0, 0, 0, 173,
	0, 0, 402, 175, 0, 0, 254, 190, 0, 0,
	0, 0, 0, 393, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 108, 109, 110, 380,
	1007, 382, 383, 384, 385, 0, 0, 131, 381, 386,
	387, 388, 0, 0, 0, 0, 356, 373, 0, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	371, 448, 0, 0, 0, 416, 0, 372, 0, 0,
	365, 366, 368, 367, 369, 374, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 415, 0, 0, 314,
	0, 0, 413, 0, 222, 0, 259, 154, 172, 127,
	168, 112, 123, 0, 153, 200, 231, 235, 0, 0,
	0, 135, 0, 233, 210, 275, 0, 212, 232, 176,
	265, 223, 274, 284, 285, 262, 282, 289, 250, 116,
	261, 273, 132, 244, 0, 0, 0, 118, 271, 257,
	188, 164, 165, 117, 0, 229, 141, 149, 137, 202,
	268, 269, 136, 292, 124, 281, 120, 125, 280, 196,
	264, 272, 189, 181, 119, 270, 187, 180, 170, 145,
	156, 220, 178, 221, 157, 192, 191, 193, 0, 0,
	0, 255, 278, 293, 129, 0, 263, 287, 288, 0,
	224, 130, 150, 144, 219, 148, 194, 126, 159, 252,
	169, 177, 228, 291, 209, 234, 133, 277, 253, 403,
	414, 409, 410, 407, 408, 406, 405, 404, 417, 395,
	396, 397, 398, 400, 0, 411, 412, 399, 111, 121,
	174, 290, 226, 147, 279, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 114, 122, 128, 134, 139, 143, 146, 152, 155,
	158, 160, 161, 162, 167, 179, 183, 184, 185, 186,
	197, 198, 199, 201, 204, 205, 206, 207, 208, 211,
	213, 214, 215, 216, 217, 218, 227, 230, 236, 237,
	238, 239, 240, 241, 243, 246, 247, 248, 249, 256,
	260, 266, 267, 276, 283, 286, 0, 0, 0, 0,
	115, 166, 182, 311, 242, 245, 251, 258, 312, 313,
	429, 0, 0, 0, 225, 195, 163, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 359, 0, 0,
	0, 142, 171, 358, 0, 0, 0, 173, 0, 0,
	402, 175, 0, 0, 254, 190, 0, 0, 0, 0,
	0, 393, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 108, 109, 110, 380, 379, 382,
	383, 384, 385, 0, 0, 131, 381, 386, 387, 388,
	0, 0, 0, 0, 356, 373, 0, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 371, 0,
	0, 0, 0, 416, 0, 372, 0, 0, 365, 366,
	368, 367, 369, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 415, 0, 0, 314, 0, 0,
	413, 0, 222, 0, 259, 154, 172, 127, 168, 112,
	123, 0, 153, 200, 231, 235, 0, 0, 0, 135,
	0, 233, 210, 275, 0, 212, 232, 176, 265, 223,
	274, 284, 285, 262, 282, 289, 250, 116, 261, 273,
	132, 244, 0, 0, 0, 118, 271, 257, 188, 164,
	165, 117, 0, 229, 141, 149, 137, 202, 268, 269,
	136, 292, 124, 281, 120, 125, 280, 196, 264, 272,
	189, 181, 119, 270, 187, 180, 170, 145, 156, 220,
	178, 221, 157, 192, 191, 193, 0, 0, 0, 255,
	278, 293, 129, 0, 263, 287, 288, 0, 224, 130,
	150, 144, 219, 148, 194, 126, 159, 252, 169, 177,
	228, 291, 209, 234, 133, 277, 253, 403, 414, 409,
	410, 407, 408, 406, 405, 404, 417, 395, 396, 397,
	398, 400, 0, 411, 412, 399, 111, 121, 174, 290,
	226, 147, 279, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 114,
	122, 128, 134, 139, 143, 146, 152, 155, 158, 160,
	161, 162, 167, 179, 183, 184, 185, 186, 197, 198,
	199, 201, 204, 205, 206, 207, 208, 211, 213, 214,
	215, 216, 217, 218, 227, 230, 236, 237, 238, 239,
	240, 241, 243, 246, 247, 248, 249, 256, 260, 266,
	267, 276, 283, 286, 0, 0, 0, 0, 115, 166,
	182, 311, 242, 245, 251, 258, 312, 313, 0, 0,
	203, 0, 225, 195, 163, 359, 0, 0, 0, 142,
	171, 358, 0, 0, 0, 173, 0, 0, 402, 175,
	0, 0, 254, 190, 0, 0, 0, 0, 0, 393,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 108, 109, 110, 380, 379, 382, 383, 384,
	385, 0, 0, 131, 381, 386, 387, 388, 0, 0,
	0, 0, 356, 373, 0, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 371, 0, 0, 0,
	0, 416, 0, 372, 0, 0, 365, 366, 368, 367,
	369, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 415, 0, 0, 314, 0, 0, 413, 0,
	222, 0, 259, 154, 172, 127, 168, 112, 123, 0,
	153, 200, 231, 235, 0, 0, 0, 135, 0, 233,
	210, 275, 0, 212, 232, 176, 265, 223, 274, 284,
	285, 262, 282, 289, 250, 116, 261, 273, 132, 244,
	0, 0, 0, 118, 271, 257, 188, 164, 165, 117,
	0, 229, 141, 149, 137, 202, 268, 269, 136, 292,
	124, 281, 120, 125, 280, 196, 264, 272, 189, 181,
	119, 270, 187, 180, 170, 145, 156, 220, 178, 221,
	157, 192, 191, 193, 0, 0, 0, 255, 278, 293,
	129, 0, 263, 287, 288, 0, 224, 130, 150, 144,
	219, 148, 194, 126, 159, 252, 169, 177, 228, 291,
	209, 234, 133, 277, 253, 403, 414, 409, 410, 407,
	408, 406, 405, 404, 417, 395, 396, 397, 398, 400,
	0, 411, 412, 399, 111, 121, 174, 290, 226, 147,
	279, 0, 0, 140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 114, 122, 128,
	134, 139, 143, 146, 152, 155, 158, 160, 161, 162,
	167, 179, 183, 184, 185, 186, 197, 198, 199, 201,
	204, 205, 206, 207, 208, 211, 213, 214, 215, 216,
	217, 218, 227, 230, 236, 237, 238, 239, 240, 241,
	243, 246, 247, 248, 249, 256, 260, 266, 267, 276,
	283, 286, 0, 0, 0, 0, 115, 166, 182, 311,
	242, 245, 251, 258, 312, 313, 203, 0, 0, 0,
	225, 195, 163, 0, 0, 142, 171, 138, 0, 0,
	0, 173, 0, 0, 402, 175, 0, 0, 254, 190,
	0, 0, 0, 0, 0, 393, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 108, 109,
	110, 380, 379, 382, 383, 384, 385, 0, 0, 131,
	381, 386, 387, 388, 0, 0, 0, 0, 0, 373,
	0, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 371, 0, 0, 0, 0, 416, 0, 372,
	0, 0, 365, 366, 368, 367, 369, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 415, 0,
	0, 314, 0, 0, 413, 0, 222, 0, 259, 154,
	172, 127, 168, 112, 123, 0, 153, 200, 231, 235,
	0, 0, 0, 135, 0, 233, 210, 275, 1722, 212,
	232, 176, 265, 223, 274, 284, 285, 262, 282, 289,
	250, 116, 261, 273, 132, 244, 0, 0, 0, 118,
	271, 257, 188, 164, 165, 117, 0, 229, 141, 149,
	137, 202, 268, 269, 136, 292, 124, 281, 120, 125,
	280, 196, 264, 272, 189, 181, 119, 270, 187, 180,
	170, 145, 156, 220, 178, 221, 157, 192, 191, 193,
	0, 0, 0, 255, 278, 293, 129, 0, 263, 287,
	288, 0, 224, 130, 150, 144, 219, 148, 194, 126,
	159, 252, 169, 177, 228, 291, 209, 234, 133, 277,
	253, 403, 414, 409, 410, 407, 408, 406, 405, 404,
	417, 395, 396, 397, 398, 400, 0, 411, 412, 399,
	111, 121, 174, 290, 226, 147, 279, 0, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 114, 122, 128, 134, 139, 143, 146,
	152, 155, 158, 160, 161, 162, 167, 179, 183, 184,
	185, 186, 197, 198, 199, 201, 204, 205, 206, 207,
	208, 211, 213, 214, 215, 216, 217, 218, 227, 230,
	236, 237, 238, 239, 240, 241, 243, 246, 247, 248,
	249, 256, 260, 266, 267, 276, 283, 286, 0, 0,
	0, 0, 115, 166, 182, 311, 242, 245, 251, 258,
	312, 313, 203, 0, 0, 0, 225, 195, 163, 0,
	0, 142, 171, 138, 0, 0, 0, 173, 0, 0,
	402, 175, 0, 0, 254, 190, 0, 0, 0, 0,
	0, 393, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 436, 108, 109, 110, 380, 379, 382,
	383, 384, 385, 0, 0, 131, 381, 386, 387, 388,
	0, 0, 0, 0, 0, 373, 0, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 371, 0,
	0, 0, 0, 416, 0, 372, 0, 0, 365, 366,
	368, 367, 369, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 415, 0, 0, 314, 0, 0,
	413, 0, 222, 0, 259, 154, 172, 127, 168, 112,
	123, 0, 153, 200, 231, 235, 0, 0, 0, 135,
	0, 233, 210, 275, 0, 212, 232, 176, 265, 223,
	274, 284, 285, 262, 282, 289, 250, 116, 261, 273,
	132, 244, 0, 0, 0, 118, 271, 257, 188, 164,
	165, 117, 0, 229, 141, 149, 137, 202, 268, 269,
	136, 292, 124, 281, 120, 125, 280, 196, 264, 272,
	189, 181, 119, 270, 187, 180, 170, 145, 156, 220,
	178, 221, 157, 192, 191, 193, 0, 0, 0, 255,
	278, 293, 129, 0, 263, 287, 288, 0, 224, 130,
	150, 144, 219, 148, 194, 126, 159, 252, 169, 177,
	228, 291, 209, 234, 133, 277, 253, 403, 414, 409,
	410, 407, 408, 406, 405, 404, 417, 395, 396, 397,
	398, 400, 0, 411, 412, 399, 111, 121, 174, 290,
	226, 147, 279, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 114,
	122, 128, 134, 139, 143, 146, 152, 155, 158, 160,
	161, 162, 167, 179, 183, 184, 185, 186, 197, 198,
	199, 201, 204, 205, 206, 207, 208, 211, 213, 214,
	215, 216, 217, 218, 227, 230, 236, 237, 238, 239,
	240, 241, 243, 246, 247, 248, 249, 256, 260, 266,
	267, 276, 283, 286, 0, 0, 0, 0, 115, 166,
	182, 311, 242, 245, 251, 258, 312, 313, 203, 0,
	0, 0, 225, 195, 163, 0, 0, 142, 171, 138,
	0, 0, 0, 173, 0, 0, 402, 175, 0, 0,
	254, 190, 0, 0, 0, 0, 0, 393, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	108, 109, 110, 380, 379, 382, 383, 384, 385, 0,
	0, 131, 381, 386, 387, 388, 0, 0, 0, 0,
	0, 373, 0, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 371, 0, 0, 0, 0, 416,
	0, 372, 0, 0, 365, 366, 368, 367, 369, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	415, 0, 0, 314, 0, 0, 413, 0, 222, 0,
	259, 154, 172, 127, 168, 112, 123, 0, 153, 200,
	231, 235, 0, 0, 0, 135, 0, 233, 210, 275,
	0, 212, 232, 176, 265, 223, 274, 284, 285, 262,
	282, 289, 250, 116, 261, 273, 132, 244, 0, 0,
	0, 118, 271, 257, 188, 164, 165, 117, 0, 229,
	141, 149, 137, 202, 268, 269, 136, 292, 124, 281,
	120, 125, 280, 196, 264, 272, 189, 181, 119, 270,
	187, 180, 170, 145, 156, 220, 178, 221, 157, 192,
	191, 193, 0, 0, 0, 255, 278, 293, 129, 0,
	263, 287, 288, 0, 224, 130, 150, 144, 219, 148,
	194, 126, 159, 252, 169, 177, 228, 291, 209, 234,
	133, 277, 253, 403, 414, 409, 410, 407, 408, 406,
	405, 404, 417, 395, 396, 397, 398, 400, 0, 411,
	412, 399, 111, 121, 174, 290, 226, 147, 279, 0,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 114, 122, 128, 134, 139,
	143, 146, 152, 155, 158, 160, 161, 162, 167, 179,
	183, 184, 185, 186, 197, 198, 199, 201, 204, 205,
	206, 207, 208, 211, 213, 214, 215, 216, 217, 218,
	227, 230, 236, 237, 238, 239, 240, 241, 243, 246,
	247, 248, 249, 256, 260, 266, 267, 276, 283, 286,
	0, 0, 0, 0, 115, 166, 182, 311, 242, 245,
	251, 258, 312, 313, 203, 0, 0, 0, 225, 195,
	163, 0, 0, 142, 171, 138, 0, 0, 0, 173,
	0, 0, 402, 175, 0, 0, 254, 190, 0, 0,
	0, 0, 0, 393, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 108, 109, 110, 380,
	721, 382, 383, 384, 385, 0, 0, 131, 381, 386,
	387, 388, 0, 0, 0, 0, 0, 373, 0, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	371, 0, 0, 0, 0, 416, 0, 372, 0, 0,
	365, 366, 368, 367, 369, 374, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 415, 0, 0, 314,
	0, 0, 413, 0, 222, 0, 259, 154, 172, 127,
	168, 112, 123, 0, 153, 200, 231, 235, 0, 0,
	0, 135, 0, 233, 210, 275, 0, 212, 232, 176,
	265, 223, 274, 284, 285, 262, 282, 289, 250, 116,
	261, 273, 132, 244, 0, 0, 0, 118, 271, 257,
	188, 164, 165, 117, 0, 229, 141, 149, 137, 202,
	268, 269, 136, 292, 124, 281, 120, 125, 280, 196,
	264, 272, 189, 181, 119, 270, 187, 180, 170, 145,
	156, 220, 178, 221, 157, 192, 191, 193, 0, 0,
	0, 255, 278, 293, 129, 0, 263, 287, 288, 0,
	224, 130, 150, 144, 219, 148, 194, 126, 159, 252,
	169, 177, 228, 291, 209, 234, 133, 277, 253, 403,
	414, 409, 410, 407, 408, 406, 405, 404, 417, 395,
	396, 397, 398, 400, 0, 411, 412, 399, 111, 121,
	174, 290, 226, 147, 279, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 114, 122, 128, 134, 139, 143, 146, 152, 155,
	158, 160, 161, 162, 167, 179, 183, 184, 185, 186,
	197, 198, 199, 201, 204, 205, 206, 207, 208, 211,
	213, 214, 215, 216, 217, 218, 227, 230, 236, 237,
	238, 239, 240, 241, 243, 246, 247, 248, 249, 256,
	260, 266, 267, 276, 283, 286, 0, 0, 0, 0,
	115, 166, 182, 311, 242, 245, 251, 258, 312, 313,
	203, 0, 0, 0, 225, 195, 163, 0, 0, 142,
	171, 138, 0, 0, 0, 173, 0, 0, 0, 175,
	0, 0, 254, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 109, 110, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 685, 695, 696, 688, 689, 690, 691, 692,
	693, 694, 687, 0, 0, 697, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 0, 314, 0, 0, 0, 0,
	222, 0, 259, 154, 172, 127, 168, 112, 123, 0,
	153, 200, 231, 235, 0, 0, 0, 135, 0, 233,
	210, 275, 0, 212, 232, 176, 265, 223, 274, 284,
	285, 262, 282, 289, 250, 116, 261, 273, 132, 244,
	0, 0, 0, 118, 271, 257, 188, 164, 165, 117,
	0, 229, 141, 149, 137, 202, 268, 269, 136, 292,
	124, 281, 120, 125, 280, 196, 264, 272, 189, 181,
	119, 270, 187, 180, 170, 145, 156, 220, 178, 221,
	157, 192, 191, 193, 0, 0, 0, 255, 278, 293,
	129, 0, 263, 287, 288, 0, 224, 130, 150, 144,
	219, 148, 194, 126, 159, 252, 169, 177, 228, 291,
	209, 234, 133, 277, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 121, 174, 290, 226, 147,
	279, 0, 0, 140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 114, 122, 128,
	134, 139, 143, 146, 152, 155, 158, 160, 161, 162,
	167, 179, 183, 184, 185, 186, 197, 198, 199, 201,
	204, 205, 206, 207, 208, 211, 213, 214, 215, 216,
	217, 218, 227, 230, 236, 237, 238, 239, 240, 241,
	243, 246, 247, 248, 249, 256, 260, 266, 267, 276,
	283, 286, 0, 0, 0, 0, 115, 166, 182, 311,
	242, 245, 251, 258, 312, 313, 0, 0, 0, 203,
	225, 195, 163, 790, 0, 0, 0, 0, 142, 171,
	138, 0, 0, 0, 173, 0, 0, 0, 175, 0,
	0, 254, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 108, 109, 110, 0, 792, 0, 0, 0, 0,
	677, 0, 131, 0, 0, 0, 0, 0, 673, 674,
	672, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 0, 0, 314, 0, 0, 0, 0, 222,
	0, 259, 154, 172, 127, 168, 112, 123, 0, 153,
	200, 231, 235, 0, 0, 0, 135, 0, 233, 210,
	275, 0, 212, 232, 176, 265, 223, 274, 284, 285,
	262, 282, 289, 250, 116, 261, 273, 132, 244, 0,
	0, 0, 118, 271, 257, 188, 164, 165, 117, 0,
	229, 141, 149, 137, 202, 268, 269, 136, 292, 124,
	281, 120, 125, 280, 196, 264, 272, 189, 181, 119,
	270, 187, 180, 170, 145, 156, 220, 178, 221, 157,
	192, 191, 193, 0, 0, 0, 255, 278, 293, 129,
	0, 263, 287, 288, 0, 224, 130, 150, 144, 219,
	148, 194, 126, 159, 252, 169, 177, 228, 291, 209,
	234, 133, 277, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 121, 174, 290, 226, 147, 279,
	0, 0, 140, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 114, 122, 128, 134,
	139, 143, 146, 152, 155, 158, 160, 161, 162, 167,
	179, 183, 184, 185, 186, 197, 198, 199, 201, 204,
	205, 206, 207, 208, 211, 213, 214, 215, 216, 217,
	218, 227, 230, 236, 237, 238, 239, 240, 241, 243,
	246, 247, 248, 249, 256, 260, 266, 267, 276, 283,
	286, 0, 0, 0, 0, 115, 166, 182, 311, 242,
	245, 251, 258, 312, 313, 203, 0, 0, 0, 225,
	195, 163, 0, 0, 142, 171, 138, 0, 0, 0,
	173, 0, 0, 0, 175, 0, 0, 254, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 109, 110,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 0,
	0, 0, 0, 0, 95, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 98, 99, 0,
	94, 0, 0, 0, 101, 222, 0, 259, 154, 172,
	127, 168, 112, 123, 0, 153, 200, 231, 235, 0,
	0, 0, 135, 0, 233, 210, 275, 0, 212, 232,
	176, 265, 223, 274, 284, 285, 262, 282, 289, 250,
	116, 261, 273, 132, 244, 0, 0, 0, 118, 271,
	257, 188, 164, 165, 117, 0, 229, 141, 149, 137,
	202, 268, 269, 136, 292, 124, 281, 120, 125, 280,
	196, 264, 272, 189, 181, 119, 270, 187, 180, 170,
	145, 156, 220, 178, 221, 157, 192, 191, 193, 0,
	0, 0, 255, 278, 293, 129, 0, 263, 287, 288,
	0, 224, 130, 150, 144, 219, 148, 194, 126, 159,
	252, 169, 177, 228, 291, 209, 234, 133, 277, 253,
	0, 97, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 111,
	121, 174, 290, 226, 147, 279, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 114, 122, 128, 134, 139, 143, 146, 152,
	155, 158, 160, 161, 162, 167, 179, 183, 184, 185,
	186, 197, 198, 199, 201, 204, 205, 206, 207, 208,
	211, 213, 214, 215, 216, 217, 218, 227, 230, 236,
	237, 238, 239, 240, 241, 243, 246, 247, 248, 249,
	256, 260, 266, 267, 276, 283, 286, 0, 0, 35,
	0, 115, 166, 182, 103, 242, 245, 251, 258, 104,
	105, 203, 0, 0, 0, 225, 195, 163, 0, 0,
	142, 171, 138, 0, 0, 0, 173, 0, 0, 0,
	175, 0, 0, 254, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	68, 0, 0, 108, 109, 110, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 0, 0, 314, 0, 0, 0,
	0, 222, 0, 259, 154, 172, 127, 168, 112, 123,
	0, 153, 200, 231, 235, 0, 0, 0, 135, 0,
	233, 210, 275, 0, 212, 232, 176, 265, 223, 274,
	284, 285, 262, 282, 289, 250, 116, 261, 273, 132,
	244, 0, 0, 0, 118, 271, 257, 188, 164, 165,
	117, 0, 229, 141, 149, 137, 202, 268, 269, 136,
	292, 124, 281, 120, 125, 280, 196, 264, 272, 189,
	181, 119, 270, 187, 180, 170, 145, 156, 220, 178,
	221, 157, 192, 191, 193, 0, 0, 0, 255, 278,
	293, 129, 0, 263, 287, 288, 0, 224, 130, 150,
	144, 219, 148, 194, 126, 159, 252, 169, 177, 228,
	291, 209, 234, 133, 277, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 111, 121, 174, 290, 226,
	147, 279, 0, 0, 140, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 114, 122,
	128, 134, 139, 143, 146, 152, 155, 158, 160, 161,
	162, 167, 179, 183, 184, 185, 186, 197, 198, 199,
	201, 204, 205, 206, 207, 208, 211, 213, 214, 215,
	216, 217, 218, 227, 230, 236, 237, 238, 239, 240,
	241, 243, 246, 247, 248, 249, 256, 260, 266, 267,
	276, 283, 286, 0, 0, 0, 0, 115, 166, 182,
	311, 242, 245, 251, 258, 312, 313, 0, 0, 0,
	64, 225, 195, 163, 203, 0, 0, 0, 1087, 0,
	0, 0, 0, 142, 171, 138, 0, 0, 0, 173,
	0, 0, 0, 175, 0, 0, 254, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 108, 109, 110, 0,
	1089, 0, 0, 0, 0, 0, 0, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 314,
	0, 0, 0, 0, 222, 0, 259, 154, 172, 127,
	168, 112, 123, 0, 153, 200, 231, 235, 0, 0,
	0, 135, 0, 233, 210, 275, 0, 212, 232, 176,
	265, 223, 274, 284, 285, 262, 282, 289, 250, 116,
	261, 273, 132, 244, 0, 0, 0, 118, 271, 257,
	188, 164, 165, 117, 0, 229, 141, 149, 137, 202,
	268, 269, 136, 292, 124, 281, 120, 125, 280, 196,
	264, 272, 189, 181, 119, 270, 187, 180, 170, 145,
	156, 220, 178, 221, 157, 192, 191, 193, 0, 0,
	0, 255, 278, 293, 129, 0, 263, 287, 288, 0,
	224, 130, 150, 144, 219, 148, 194, 126, 159, 252,
	169, 177, 228, 291, 209, 234, 133, 277, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 121,
	174, 290, 226, 147, 279, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 114, 122, 128, 134, 139, 143, 146, 152, 155,
	158, 160, 161, 162, 167, 179, 183, 184, 185, 186,
	197, 198, 199, 201, 204, 205, 206, 207, 208, 211,
	213, 214, 215, 216, 217, 218, 227, 230, 236, 237,
	238, 239, 240, 241, 243, 246, 247, 248, 249, 256,
	260, 266, 267, 276, 283, 286, 0, 0, 35, 0,
	115, 166, 182, 311, 242, 245, 251, 258, 312, 313,
	203, 0, 0, 0, 225, 195, 163, 0, 0, 142,
	171, 138, 0, 0, 0, 173, 0, 0, 0, 175,
	0, 0, 254, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 108, 109, 110, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 0, 314, 0, 0, 0, 0,
	222, 0, 259, 154, 172, 127, 168, 112, 123, 0,
	153, 200, 231, 235, 0, 0, 0, 135, 0, 233,
	210, 275, 0, 212, 232, 176, 265, 223, 274, 284,
	285, 262, 282, 289, 250, 116, 261, 273, 132, 244,
	0, 0, 0, 118, 271, 257, 188, 164, 165, 117,
	0, 229, 141, 149, 137, 202, 268, 269, 136, 292,
	124, 281, 120, 125, 280, 196, 264, 272, 189, 181,
	119, 270, 187, 180, 170, 145, 156, 220, 178, 221,
	157, 192, 191, 193, 0, 0, 0, 255, 278, 293,
	129, 0, 263, 287, 288, 0, 224, 130, 150, 144,
	219, 148, 194, 126, 159, 252, 169, 177, 228, 291,
	209, 234, 133, 277, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 121, 174, 290, 226, 147,
	279, 0, 0, 140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 114, 122, 128,
	134, 139, 143, 146, 152, 155, 158, 160, 161, 162,
	167, 179, 183, 184, 185, 186, 197, 198, 199, 201,
	204, 205, 206, 207, 208, 211, 213, 214, 215, 216,
	217, 218, 227, 230, 236, 237, 238, 239, 240, 241,
	243, 246, 247, 248, 249, 256, 260, 266, 267, 276,
	283, 286, 0, 0, 0, 0, 115, 166, 182, 311,
	242, 245, 251, 258, 312, 313, 0, 0, 0, 203,
	225, 195, 163, 1087, 0, 0, 0, 0, 142, 171,
	138, 0, 0, 0, 173, 0, 0, 0, 175, 0,
	0, 254, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 108, 109, 110, 0, 1089, 0, 0, 0, 0,
	0, 0, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 0, 0, 314, 0, 0, 0, 0, 222,
	0, 259, 154, 172, 127, 168, 112, 123, 0, 153,
	200, 231, 235, 0, 0, 0, 135, 0, 233, 210,
	275, 0, 1091, 232, 176, 265, 223, 274, 284, 285,
	262, 282, 289, 250, 116, 261, 273, 132, 244, 0,
	0, 0, 118, 271, 257, 188, 164, 165, 117, 0,
	229, 141, 149, 137, 202, 268, 269, 136, 292, 124,
	281, 120, 125, 280, 196, 264, 272, 189, 181, 119,
	270, 187, 180, 170, 145, 156, 220, 178, 221, 157,
	192, 191, 193, 0, 0, 0, 255, 278, 293, 129,
	0, 263, 287, 288, 0, 224, 130, 150, 144, 219,
	148, 194, 126, 159, 252, 169, 177, 228, 291, 209,
	234, 133, 277, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 121, 174, 290, 226, 147, 279,
	0, 0, 140, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 114, 122, 128, 134,
	139, 143, 146, 152, 155, 158, 160, 161, 162, 167,
	179, 183, 184, 185, 186, 197, 198, 199, 201, 204,
	205, 206, 207, 208, 211, 213, 214, 215, 216, 217,
	218, 227, 230, 236, 237, 238, 239, 240, 241, 243,
	246, 247, 248, 249, 256, 260, 266, 267, 276, 283,
	286, 0, 0, 0, 0, 115, 166, 182, 311, 242,
	245, 251, 258, 312, 313, 203, 0, 0, 0, 225,
	195, 163, 0, 0, 142, 171, 138, 0, 0, 0,
	173, 0, 0, 0, 175, 0, 0, 254, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 109, 110,
	0, 0, 1053, 0, 0, 1054, 0, 0, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 0,
	314, 0, 0, 0, 0, 222, 0, 259, 154, 172,
	127, 168, 112, 123, 0, 153, 200, 231, 235, 0,
	0, 0, 135, 0, 233, 210, 275, 0, 212, 232,
	176, 265, 223, 274, 284, 285, 262, 282, 289, 250,
	116, 261, 273, 132, 244, 0, 0, 0, 118, 271,
	257, 188, 164, 165, 117, 0, 229, 141, 149, 137,
	202, 268, 269, 136, 292, 124, 281, 120, 125, 280,
	196, 264, 272, 189, 181, 119, 270, 187, 180, 170,
	145, 156, 220, 178, 221, 157, 192, 191, 193, 0,
	0, 0, 255, 278, 293, 129, 0, 263, 287, 288,
	0, 224, 130, 150, 144, 219, 148, 194, 126, 159,
	252, 169, 177, 228, 291, 209, 234, 133, 277, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 111,
	121, 174, 290, 226, 147, 279, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 114, 122, 128, 134, 139, 143, 146, 152,
	155, 158, 160, 161, 162, 167, 179, 183, 184, 185,
	186, 197, 198, 199, 201, 204, 205, 206, 207, 208,
	211, 213, 214, 215, 216, 217, 218, 227, 230, 236,
	237, 238, 239, 240, 241, 243, 246, 247, 248, 249,
	256, 260, 266, 267, 276, 283, 286, 0, 0, 0,
	0, 115, 166, 182, 311, 242, 245, 251, 258, 312,
	313, 203, 0, 0, 0, 225, 195, 163, 0, 0,
	142, 171, 138, 0, 0, 0, 173, 0, 0, 0,
	175, 0, 0, 254, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 436, 108, 109, 110, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 0, 0, 314, 0, 0, 0,
	0, 222, 0, 259, 154, 172, 127, 168, 112, 123,
	0, 153, 200, 231, 235, 0, 0, 0, 135, 0,
	233, 210, 275, 0, 212, 232, 176, 265, 223, 274,
	284, 285, 262, 282, 289, 250, 116, 261, 273, 132,
	244, 0, 0, 0, 118, 271, 257, 188, 164, 165,
	117, 0, 229, 141, 149, 137, 202, 268, 269, 136,
	292, 124, 281, 120, 125, 280, 196, 264, 272, 189,
	181, 119, 270, 187, 180, 170, 145, 156, 220, 178,
	221, 157, 192, 191, 193, 0, 0, 0, 255, 278,
	293, 129, 0, 263, 287, 288, 0, 224, 130, 150,
	144, 219, 148, 194, 126, 159, 252, 169, 177, 228,
	291, 209, 234, 133, 277, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 111, 121, 174, 290, 226,
	147, 279, 0, 0, 140, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 114, 122,
	128, 134, 139, 143, 146, 152, 155, 158, 160, 161,
	162, 167, 179, 183, 184, 185, 186, 197, 198, 199,
	201, 204, 205, 206, 207, 208, 211, 213, 214, 215,
	216, 217, 218, 227, 230, 236, 237, 238, 239, 240,
	241, 243, 246, 247, 248, 249, 256, 260, 266, 267,
	276, 283, 286, 0, 0, 0, 0, 115, 166, 182,
	311, 242, 245, 251, 258, 312, 313, 203, 0, 0,
	0, 225, 195, 163, 0, 0, 142, 171, 138, 0,
	0, 0, 173, 0, 0, 0, 175, 0, 0, 254,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 0, 108,
	109, 110, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	0, 0, 314, 0, 0, 0, 0, 222, 0, 259,
	154, 172, 127, 168, 112, 123, 0, 153, 200, 231,
	235, 0, 0, 0, 135, 0, 233, 210, 275, 0,
	212, 232, 176, 265, 223, 274, 284, 285, 262, 282,
	289, 250, 116, 261, 273, 132, 244, 0, 0, 0,
	118, 271, 257, 188, 164, 165, 117, 0, 229, 141,
	149, 137, 202, 268, 269, 136, 292, 124, 281, 120,
	125, 280, 196, 264, 272, 189, 181, 119, 270, 187,
	180, 170, 145, 156, 220, 178, 221, 157, 192, 191,
	193, 0, 0, 0, 255, 278, 293, 129, 0, 263,
	287, 288, 0, 224, 130, 150, 144, 219, 148, 194,
	126, 159, 252, 169, 177, 228, 291, 209, 234, 133,
	277, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 111, 121, 174, 290, 226, 147, 279, 0, 0,
	140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 113, 114, 122, 128, 134, 139, 143,
	146, 152, 155, 158, 160, 161, 162, 167, 179, 183,
	184, 185, 186, 197, 198, 199, 201, 204, 205, 206,
	207, 208, 211, 213, 214, 215, 216, 217, 218, 227,
	230, 236, 237, 238, 239, 240, 241, 243, 246, 247,
	248, 249, 256, 260, 266, 267, 276, 283, 286, 0,
	0, 0, 0, 115, 166, 182, 311, 242, 245, 251,
	258, 312, 313, 203, 0, 0, 0, 225, 195, 163,
	0, 0, 142, 171, 138, 0, 0, 0, 173, 0,
	0, 0, 175, 0, 0, 254, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 108, 109, 110, 0, 1089,
	0, 0, 0, 0, 0, 0, 131, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 0, 0, 314, 0,
	0, 0, 0, 222, 0, 259, 154, 172, 127, 168,
	112, 123, 0, 153, 200, 231, 235, 0, 0, 0,
	135, 0, 233, 210, 275, 0, 212, 232, 176, 265,
	223, 274, 284, 285, 262, 282, 289, 250, 116, 261,
	273, 132, 244, 0, 0, 0, 118, 271, 257, 188,
	164, 165, 117, 0, 229, 141, 149, 137, 202, 268,
	269, 136, 292, 124, 281, 120, 125, 280, 196, 264,
	272, 189, 181, 119, 270, 187, 180, 170, 145, 156,
	220, 178, 221, 157, 192, 191, 193, 0, 0, 0,
	255, 278, 293, 129, 0, 263, 287, 288, 0, 224,
	130, 150, 144, 219, 148, 194, 126, 159, 252, 169,
	177, 228, 291, 209, 234, 133, 277, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 121, 174,
	290, 226, 147, 279, 0, 0, 140, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 113,
	114, 122, 128, 134, 139, 143, 146, 152, 155, 158,
	160, 161, 162, 167, 179, 183, 184, 185, 186, 197,
	198, 199, 201, 204, 205, 206, 207, 208, 211, 213,
	214, 215, 216, 217, 218, 227, 230, 236, 237, 238,
	239, 240, 241, 243, 246, 247, 248, 249, 256, 260,
	266, 267, 276, 283, 286, 0, 0, 0, 0, 115,
	166, 182, 311, 242, 245, 251, 258, 312, 313, 203,
	0, 0, 0, 225, 195, 163, 0, 0, 142, 171,
	138, 0, 0, 0, 173, 0, 0, 0, 175, 0,
	0, 254, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 108, 109, 110, 0, 1213, 0, 0, 0, 0,
	0, 0, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 0, 0, 314, 0, 0, 0, 0, 222,
	0, 259, 154, 172, 127, 168, 112, 123, 0, 153,
	200, 231, 235, 0, 0, 0, 135, 0, 233, 210,
	275, 0, 212, 232, 176, 265, 223, 274, 284, 285,
	262, 282, 289, 250, 116, 261, 273, 132, 244, 0,
	0, 0, 118, 271, 257, 188, 164, 165, 117, 0,
	229, 141, 149, 137, 202, 268, 269, 136, 292, 124,
	281, 120, 125, 280, 196, 264, 272, 189, 181, 119,
	270, 187, 180, 170, 145, 156, 220, 178, 221, 157,
	192, 191, 193, 0, 0, 0, 255, 278, 293, 129,
	0, 263, 287, 288, 0, 224, 130, 150, 144, 219,
	148, 194, 126, 159, 252, 169, 177, 228, 291, 209,
	234, 133, 277, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 121, 174, 290, 226, 147, 279,
	0, 0, 140, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 114, 122, 128, 134,
	139, 143, 146, 152, 155, 158, 160, 161, 162, 167,
	179, 183, 184, 185, 186, 197, 198, 199, 201, 204,
	205, 206, 207, 208, 211, 213, 214, 215, 216, 217,
	218, 227, 230, 236, 237, 238, 239, 240, 241, 243,
	246, 247, 248, 249, 256, 260, 266, 267, 276, 283,
	286, 0, 0, 0, 0, 115, 166, 182, 311, 242,
	245, 251, 258, 312, 313, 203, 0, 0, 0, 225,
	195, 163, 0, 795, 142, 171, 138, 0, 0, 0,
	173, 0, 0, 0, 175, 0, 0, 254, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 109, 110,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 0,
	314, 0, 0, 0, 0, 222, 0, 259, 154, 172,
	127, 168, 112, 123, 0, 153, 200, 231, 235, 0,
	0, 0, 135, 0, 233, 210, 275, 0, 212, 232,
	176, 265, 223, 274, 284, 285, 262, 282, 289, 250,
	116, 261, 273, 132, 244, 0, 0, 0, 118, 271,
	257, 188, 164, 165, 117, 0, 229, 141, 149, 137,
	202, 268, 269, 136, 292, 124, 281, 120, 125, 280,
	196, 264, 272, 189, 181, 119, 270, 187, 180, 170,
	145, 156, 220, 178, 221, 157, 192, 191, 193, 0,
	0, 0, 255, 278, 293, 129, 0, 263, 287, 288,
	0, 224, 130, 150, 144, 219, 148, 194, 126, 159,
	252, 169, 177, 228, 291, 209, 234, 133, 277, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 111,
	121, 174, 290, 226, 147, 279, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 114, 122, 128, 134, 139, 143, 146, 152,
	155, 158, 160, 161, 162, 167, 179, 183, 184, 185,
	186, 197, 198, 199, 201, 204, 205, 206, 207, 208,
	211, 213, 214, 215, 216, 217, 218, 227, 230, 236,
	237, 238, 239, 240, 241, 243, 246, 247, 248, 249,
	256, 260, 266, 267, 276, 283, 286, 0, 0, 0,
	0, 115, 166, 182, 311, 242, 245, 251, 258, 312,
	313, 203, 0, 0, 0, 225, 195, 163, 0, 0,
	142, 171, 138, 0, 0, 0, 173, 0, 0, 0,
	175, 0, 0, 254, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 108, 109, 110, 0, 792, 0, 0,
	0, 0, 0, 0, 131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 0, 0, 314, 0, 0, 0,
	0, 222, 0, 259, 154, 172, 127, 168, 112, 123,
	0, 153, 200, 231, 235, 0, 0, 0, 135, 0,
	233, 210, 275, 0, 212, 232, 176, 265, 223, 274,
	284, 285, 262, 282, 289, 250, 116, 261, 273, 132,
	244, 0, 0, 0, 118, 271, 257, 188, 164, 165,
	117, 0, 229, 141, 149, 137, 202, 268, 269, 136,
	292, 124, 281, 120, 125, 280, 196, 264, 272, 189,
	181, 119, 270, 187, 180, 170, 145, 156, 220, 178,
	221, 157, 192, 191, 193, 0, 0, 0, 255, 278,
	293, 129, 0, 263, 287, 288, 0, 224, 130, 150,
	144, 219, 148, 194, 126, 159, 252, 169, 177, 228,
	291, 209, 234, 133, 277, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 111, 121, 174, 290, 226,
	147, 279, 0, 0, 140, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 114, 122,
	128, 134, 139, 143, 146, 152, 155, 158, 160, 161,
	162, 167, 179, 183, 184, 185, 186, 197, 198, 199,
	201, 204, 205, 206, 207, 208, 211, 213, 214, 215,
	216, 217, 218, 227, 230, 236, 237, 238, 239, 240,
	241, 243, 246, 247, 248, 249, 256, 260, 266, 267,
	276, 283, 286, 0, 0, 0, 0, 115, 166, 182,
	311, 242, 245, 251, 258, 312, 313, 203, 0, 0,
	0, 225, 195, 163, 0, 0, 142, 171, 830, 0,
	0, 0, 173, 0, 0, 0, 175, 0, 0, 254,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 108,
	109, 110, 0, 829, 0, 0, 0, 0, 0, 0,
	131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	0, 0, 314, 0, 0, 0, 0, 222, 0, 259,
	154, 172, 127, 168, 112, 123, 0, 153, 200, 231,
	235, 0, 0, 0, 135, 0, 233, 210, 275, 0,
	212, 232, 176, 265, 223, 274, 284, 285, 262, 282,
	289, 250, 116, 261, 273, 132, 244, 0, 0, 0,
	118, 271, 257, 188, 164, 165, 117, 0, 229, 141,
	149, 137, 202, 268, 269, 136, 292, 124, 281, 120,
	125, 280, 196, 264, 272, 189, 181, 119, 270, 187,
	180, 170, 145, 156, 220, 178, 221, 157, 192, 191,
	193, 0, 0, 0, 255, 278, 293, 129, 0, 263,
	287, 288, 0, 224, 130, 150, 144, 219, 148, 194,
	126, 159, 252, 169, 177, 228, 291, 209, 234, 133,
	277, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 111, 121, 174, 290, 226, 147, 279, 0, 0,
	140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 113, 114, 122, 128, 134, 139, 143,
	146, 152, 155, 158, 160, 161, 162, 167, 179, 183,
	184, 185, 186, 197, 198, 199, 201, 204, 205, 206,
	207, 208, 211, 213, 214, 215, 216, 217, 218, 227,
	230, 236, 237, 238, 239, 240, 241, 243, 246, 247,
	248, 249, 256, 260, 266, 267, 276, 283, 286, 0,
	0, 0, 0, 115, 166, 182, 311, 242, 245, 251,
	258, 312, 313, 453, 0, 0, 0, 225, 195, 163,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	171, 138, 0, 0, 0, 173, 0, 0, 0, 175,
	0, 0, 254, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 109, 110, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 0, 314, 0, 0, 0, 0,
	222, 0, 259, 154, 172, 127, 168, 112, 123, 0,
	153, 200, 231, 235, 0, 0, 0, 135, 0, 233,
	210, 275, 0, 212, 232, 176, 265, 223, 274, 284,
	285, 262, 282, 289, 250, 116, 261, 273, 132, 244,
	0, 0, 0, 118, 271, 257, 188, 164, 165, 117,
	0, 229, 141, 149, 137, 202, 268, 269, 136, 292,
	124, 281, 120, 125, 280, 196, 264, 272, 189, 181,
	119, 270, 187, 180, 170, 145, 156, 220, 178, 221,
	157, 192, 191, 193, 0, 0, 0, 255, 278, 293,
	129, 0, 263, 287, 288, 0, 224, 130, 150, 144,
	219, 148, 194, 126, 159, 252, 169, 177, 228, 291,
	209, 234, 133, 277, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 121, 174, 290, 226, 147,
	279, 0, 0, 140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 114, 122, 128,
	134, 139, 143, 146, 152, 155, 158, 160, 161, 162,
	167, 179, 183, 184, 185, 186, 197, 198, 199, 201,
	204, 205, 206, 207, 208, 211, 213, 214, 215, 216,
	217, 218, 227, 230, 236, 237, 238, 239, 240, 241,
	243, 246, 247, 248, 249, 256, 260, 266, 267, 276,
	283, 286, 0, 0, 0, 0, 115, 166, 182, 311,
	242, 245, 251, 258, 312, 313, 203, 0, 0, 0,
	225, 195, 163, 0, 0, 142, 171, 138, 0, 0,
	0, 173, 0, 0, 0, 175, 0, 0, 254, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 108, 109,
	110, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 306,
	0, 314, 0, 0, 0, 0, 222, 0, 259, 154,
	172, 127, 168, 112, 123, 0, 153, 200, 231, 235,
	0, 0, 0, 135, 0, 233, 210, 275, 0, 212,
	232, 176, 265, 223, 274, 284, 285, 262, 282, 289,
	250, 116, 261, 273, 132, 244, 0, 0, 0, 118,
	271, 257, 188, 164, 165, 117, 0, 229, 141, 149,
	137, 202, 268, 269, 136, 292, 124, 281, 120, 125,
	280, 196, 264, 272, 189, 181, 119, 270, 187, 180,
	170, 145, 156, 220, 178, 221, 157, 192, 191, 193,
	0, 0, 0, 255, 278, 293, 129, 0, 263, 287,
	288, 0, 224, 130, 150, 144, 219, 148, 194, 126,
	159, 252, 169, 177, 228, 291, 209, 234, 133, 277,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 121, 174, 290, 226, 147, 279, 0, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 114, 122, 128, 134, 139, 143, 146,
	152, 155, 158, 160, 161, 162, 167, 179, 183, 184,
	185, 186, 197, 198, 199, 201, 204, 205, 206, 207,
	208, 211, 213, 214, 215, 216, 217, 218, 227, 230,
	236, 237, 238, 239, 240, 241, 243, 246, 247, 248,
	249, 256, 260, 266, 267, 276, 283, 286, 0, 0,
	0, 0, 115, 166, 182, 311, 242, 245, 251, 258,
	312, 313, 203, 0, 0, 0, 225, 195, 163, 0,
	0, 142, 171, 138, 0, 0, 0, 173, 0, 0,
	0, 175, 0, 0, 254, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 108, 109, 110, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 0, 0, 0, 314, 0, 0,
	0, 0, 222, 0, 259, 154, 172, 127, 168, 112,
	123, 0, 153, 200, 231, 235, 0, 0, 0, 135,
	0, 233, 210, 275, 0, 212, 232, 176, 265, 223,
	274, 284, 285, 262, 282, 289, 250, 116, 261, 273,
	132, 244, 0, 0, 0, 118, 271, 257, 188, 164,
	165, 117, 0, 229, 141, 149, 137, 202, 268, 269,
	136, 292, 124, 281, 120, 125, 280, 196, 264, 272,
	189, 181, 119, 270, 187, 180, 170, 145, 156, 220,
	178, 221, 157, 192, 191, 193, 0, 0, 0, 255,
	278, 293, 129, 0, 263, 287, 288, 0, 224, 130,
	150, 144, 219, 148, 194, 126, 159, 252, 169, 177,
	228, 291, 209, 234, 133, 277, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 121, 174, 290,
	226, 147, 279, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 114,
	122, 128, 134, 139, 143, 146, 152, 155, 158, 160,
	161, 162, 167, 179, 183, 184, 185, 186, 197, 198,
	199, 201, 204, 205, 206, 207, 208, 211, 213, 214,
	215, 216, 217, 218, 227, 230, 236, 237, 238, 239,
	240, 241, 243, 246, 247, 248, 249, 256, 260, 266,
	267, 276, 283, 286, 0, 0, 0, 0, 115, 166,
	182, 311, 242, 245, 251, 258, 312, 313, 0, 0,
	0, 0, 225, 195, 163,
}

var yyPact = [...]int{
	100, -1000, -290, 1141, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1070, 864, -1000, -1000, -1000, -1000, -1000,
	-1000, 386, 13367, 55, 200, 35, 18368, 198, 117, 18724,
	-1000, 67, -1000, 41, 18724, 63, -13, -1000, -1000, -39,
	-41, -1000, 10872, -263, -1000, 514, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 865, 1047, 1056,
	1062, 712, 1169, -1000, 9430, 156, 156, 18012, 7635, -1000,
	-1000, 468, 18724, 192, 18724, -113, 178, 144, 144, 144,
	197, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 173, 18724, 566, 566, 271, -1000,
	18724, 149, 566, 149, 149, 149, 18724, -1000, 278, -1000,
	-1000, -1000, -1000, -1000, -1000, 18724, 566, 984, 422, 175,
	5003, -1000, 493, -1000, 5003, 75, 5003, -19, 1096, 76,
	19, -1000, 566, -69, -1000, -1000, -1000, -1000, -1000, -1000,
	168, -1000, -1000, 18724, -61, 171, 365, -1000, -1000, -1000,
	-1000, -1000, -1000, 648, 878, -1000, 10872, 1832, 624, 624,
	-1000, -1000, 221, -1000, -1000, 11940, 11940, 11940, 11940, 11940,
	11940, 11940, 11940, 11940, 12296, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 624,
	275, -1000, 10514, 624, 624, 624, 624, 624, 624, 624,
	624, 10872, 624, 624, 624, 624, 624, 624, 624, 624,
	624, 624, 624, 624, 624, 624, 624, 624, -1000, -1000,
	-266, -277, 18724, -1000, 18724, 550, 1070, -1000, 864, -1000,
	-1000, -1000, 1027, 10872, 10872, 1070, -1000, 964, 9430, -1000,
	-1000, 1040, -1000, -1000, -1000, -1000, 430, 1113, -1000, 13011,
	264, 16937, 15869, 18724, 858, 794, -1000, -1000, 261, 804,
	7259, -60, -1000, -1000, -1000, 205, 17649, -1000, -1000, -1000,
	982, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	770, 18724, -1000, 2090, -1000, 566, 1044, -30, 18724, 566,
	380, 566, 18724, 144, 18724, 5003, 5003, 5003, 84, 116,
	112, 18724, 799, 165, 18724, 1034, 910, 18724, 566, 566,
	-1000, 6507, -1000, 5003, 422, -1000, 549, 10872, 5003, 5003,
	5003, 18724, 5003, 5003, -1000, -1000, -1000, 407, 513, -1000,
	-1000, -1000, -1000, -1000, 5003, 5003, -1000, 1109, 404, -1000,
	-1000, -1000, -1000, 10872, 321, -1000, 908, -1000, -1000, -74,
	61, -1000, 18724, -1000, 1141, -1000, -1000, -1000, -100, -1000,
	-1000, 10872, 10872, 10872, 10872, 567, 440, -1000, 363, 11940,
	446, 366, 11940, 11940, 11940, 11940, 11940, 11940, 11940, 11940,
	11940, 11940, 11940, 11940, 11940, 11940, 11940, 533, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 566, -1000, 1137, 977,
	977, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	12652, -1000, 7998, 6507, 712, 768, 1070, 9430, 9430, 10872,
	10872, 10146, 9788, 9430, 994, 373, 878, 18724, -1000, -1000,
	11584, -1000, -1000, -1000, -1000, -1000, 498, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 18724, 18724, 9430, 9430, 9430, 9430,
	9430, 566, 566, 566, 740, 495, -1000, -1000, 1056, 712,
	1040, -1000, 1133, 313, 777, 793, -1000, 680, 1056, 15157,
	830, -1000, 1040, -1000, -1000, -1000, 18724, 440, -1000, -1000,
	17293, -1000, -1000, 6131, 104, 18724, -1000, 778, 979, -1000,
	-1000, -1000, -1000, 1043, 13723, 14086, 14801, 624, 258, 104,
	618, 15869, 18724, -1000, -1000, 15869, 18724, 5755, 6883, -60,
	-1000, 756, -1000, -75, -93, 8714, 8356, 263, -1000, -1000,
	-1000, -1000, 4627, 253, 590, 458, -16, -1000, -1000, -1000,
	809, -1000, 809, 809, 809, 809, 18, 18, 18, 18,
	-1000, -1000, -1000, -1000, -1000, 871, 868, -1000, 809, 809,
	809, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 861,
	861, 861, 818, 818, 880, 864, 18724, 177, -1000, 1041,
	5003, 995, 5003, -1000, 18724, 360, -1000, -1000, -1000, 18724,
	18724, 18724, 18724, 18724, 210, 18724, 18724, 791, -1000, 18724,
	5003, -1000, -1000, 254, -1000, -1000, -1000, -1000, -1000, 878,
	-1000, -1000, -1000, -1000, -1000, -1000, 18724, -1000, -1000, 18724,
	-1000, 16937, -1000, -1000, 18724, 422, 18724, 18724, 878, -1000,
	540, 18724, -1000, 18724, -1000, 16581, -1000, -1000, -1000, -1000,
	878, 363, 616, 491, -1000, -1000, 492, -1000, -1000, -1000,
	1884, -1000, -1000, -1000, -1000, 446, 11940, 11940, 11940, 623,
	1884, 1867, 1644, 1998, 279, 438, 438, 303, 303, 303,
	303, 303, 562, 562, -1000, -1000, -1000, 498, -1000, -1000,
	-1000, 498, 9430, 9430, 779, 624, 252, -1000, 865, -1000,
	-1000, 1056, 734, 734, 494, 927, 325, 1107, 734, 323,
	1102, 734, 734, 9430, -1000, -1000, 403, -1000, 10872, 498,
	-1000, 249, -1000, 551, 774, 772, 734, 498, 498, 734,
	734, -243, -1000, 721, -1000, -1000, 559, -1000, 352, -1000,
	1027, -1000, -1000, 961, 10872, 10872, 10872, -1000, -1000, -1000,
	1027, 1068, -1000, 973, 971, 1094, 9430, 15869, 1040, -1000,
	-1000, -1000, 248, 903, 624, -1000, 18724, 15869, 15869, 15869,
	15869, 15869, -1000, 933, 932, -1000, 930, 924, 945, 18724,
	-1000, 766, 498, 712, 13723, -1000, -1000, 16225, -1000, -1000,
	218, 624, 6507, 1094, 15869, 696, -1000, 696, -1000, 247,
	-1000, -1000, 756, -60, -40, -1000, -1000, -1000, -1000, 878,
	-1000, -1000, 878, -1000, 628, 745, 4251, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 842, 566, -1000, 1026, 277, 304,
	566, 1019, -1000, -1000, -1000, 988, -1000, 395, -20, -1000,
	-1000, 503, 18, 18, -1000, -1000, 263, 980, 263, 263,
	263, 537, 537, -1000, -1000, -1000, -1000, 497, -1000, -1000,
	-1000, 469, -1000, 906, 18724, 1141, 1038, 18724, 864, -1000,
	-1000, -1000, -1000, -1000, 437, 437, 272, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 103, 859,
	-1000, -1000, -1000, -1000, 46, 83, 161, -1000, 5003, -1000,
	6507, 404, 422, 823, 404, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 623, 1884,
	1713, -1000, 11940, 11940, -1000, -1000, 734, 734, 9430, 6507,
	1070, 1027, -1000, -1000, 216, 533, 216, 11940, 11940, -1000,
	11940, 11940, -1000, -125, 728, 368, -1000, 10872, 699, -1000,
	6507, -1000, 11940, 11940, -1000, -1000, -1000, -1000, -1000, 527,
	-1000, -1000, -1000, -1000, -1000, 495, -1000, -1000, 347, -1000,
	977, -1000, 956, 878, 878, -1000, -1000, 18724, -1000, -1000,
	-1000, -1000, 1091, 10872, -1000, 711, -1000, 5379, 899, 18724,
	624, 1141, 14442, 18724, 739, -1000, 342, 979, 834, 898,
	1219, -1000, -1000, -1000, -1000, 917, -1000, 913, -1000, -1000,
	-1000, -1000, -1000, -1000, 712, -1000, -1000, 190, 187, 180,
	18724, 624, 1070, 696, -1000, -1000, 298, -1000, -1000, -96,
	-99, -1000, -1000, -1000, 4627, -1000, 4627, 18724, 119, -1000,
	566, 566, -1000, -1000, 819, 897, 11940, -1000, -1000, -1000,
	585, 263, 263, -1000, 413, -1000, -1000, -1000, 731, -1000,
	715, 654, 708, 18724, -1000, 864, 1037, 1141, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 18724, -1000, -1000, -1000, -1000,
	-1000, 18724, -136, 566, 18724, 18724, 18724, 18724, -1000, 237,
	422, -1000, 422, 18724, 422, -1000, 11940, 1884, 1884, -1000,
	-1000, 498, -1000, 1056, -1000, 498, 809, 809, -1000, 809,
	818, -1000, 809, 44, 809, 36, 498, 498, 1943, 1908,
	1851, 1789, 624, -120, -1000, 878, 10872, -1000, 1138, 990,
	526, -1000, 977, -1000, -1000, -1000, 1088, 1058, 878, -1000,
	-1000, 1028, 803, 633, -1000, -1000, 9072, 702, 232, 681,
	-1000, 1094, 18724, 10872, -1000, -1000, 10872, 816, -1000, 10872,
	-1000, -1000, -1000, 1070, 624, 624, 624, 681, 1056, -1000,
	-1000, -1000, -1000, 4251, -1000, 679, -1000, 809, -1000, -1000,
	-1000, 18724, -5, 1128, 1884, -1000, -1000, -1000, -1000, -1000,
	18, 524, 18, 467, -1000, 454, 5003, 1141, 864, -1000,
	-1000, -1000, -1000, 1030, -1000, 6507, -1000, -1000, 807, 875,
	-1000, -1000, 6507, -1000, -1000, 676, -1000, -1000, 1884, -1000,
	1027, -1000, -1000, 172, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 11940, 11940, 11940, 11940, 11940, 1056, 523, 878,
	11940, 11940, -1000, -1000, -1000, 10872, 10872, 1011, -1000, 624,
	-1000, 907, 18724, 18724, -1000, 18724, 1070, -1000, 878, 878,
	18724, 878, 15513, 18724, 18724, 14086, -1000, 219, 18724, -1000,
	661, 242, -1000, -97, 263, -1000, 263, 580, 557, -1000,
	1141, 624, 652, -1000, 338, 18724, 18724, -1000, -1000, 18724,
	-1000, -1000, -1000, 551, 551, 551, 551, 95, 498, -1000,
	551, 551, 878, 648, 1126, -1000, 624, 1141, 231, -1000,
	-1000, 1056, 656, 644, -1000, 644, 644, 218, 219, -1000,
	566, 336, 517, -1000, 118, 412, 992, -1000, 991, -1000,
	-1000, -1000, -1000, -1000, 99, 6507, 4627, 642, -1000, -1000,
	-1000, -1000, -1000, -1000, 498, 90, -139, -1000, -1000, -1000,
	18724, 633, 18724, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 452, -1000, -1000, 18724, -1000, 459, -1000, -1000, 620,
	-1000, 18724, -1000, -1000, 859, -1000, 948, -134, -156, 625,
	-1000, -1000, 806, -1000, -1000, 99, 967, -136, -1000, 938,
	-1000, 18724, -1000, 93, -1000, -137, 577, 91, -140, 893,
	624, -157, 885, -1000, 1101, 11228, -1000, -1000, 1103, 256,
	256, 551, 498, -1000, -1000, -1000, 121, 447, -1000, -1000,
	-1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1414, 1412, 37, 63, 65, 1411, 1410, 1409, 124,
	123, 113, 1408, 1407, 1406, 1402, 1401, 1400, 1399, 1393,
	1389, 1388, 1387, 1385, 1384, 1382, 1380, 1379, 1378, 1377,
	1376, 1375, 1374, 1148, 1371, 1370, 1369, 1368, 1367, 78,
	1363, 74, 1362, 1361, 1360, 1358, 1357, 1356, 1354, 1352,
	1351, 44, 238, 51, 59, 1350, 70, 1155, 36, 96,
	73, 64, 1346, 1345, 39, 1344, 1343, 82, 1339, 1336,
	61, 1333, 1332, 81, 68, 80, 1330, 12, 25, 1329,
	1328, 1327, 1326, 42, 2682, 1325, 1324, 14, 129, 1323,
	105, 1322, 66, 27, 13, 28, 17, 1320, 67, 1318,
	9, 1317, 60, 1316, 1315, 1314, 1312, 24, 1311, 62,
	1310, 19, 30, 1309, 7, 1308, 75, 32, 29, 6,
	1307, 1305, 18, 79, 56, 72, 1304, 84, 1303, 1302,
	472, 1301, 929, 48, 1300, 1295, 104, 23, 1291, 133,
	83, 1290, 1289, 1287, 1286, 21, 831, 1744, 46, 76,
	1284, 1279, 1261, 2367, 22, 57, 16, 1260, 1259, 1258,
	35, 214, 41, 1257, 1235, 45, 1234, 1233, 1229, 1227,
	1225, 1221, 1220, 192, 1219, 1217, 1216, 34, 20, 1210,
	1208, 69, 33, 1205, 1203, 1202, 54, 71, 1198, 1195,
	53, 1194, 77, 49, 1193, 1192, 1189, 1188, 1186, 31,
	11, 1185, 15, 1184, 10, 1181, 26, 1176, 4, 1174,
	8, 1173, 3, 0, 1172, 5, 1166, 1164, 52, 2,
	1162, 1, 40, 1161, 1159, 1157, 87, 1153, 1151, 1451,
	2252, 86, 1150, 85,
}

var yyR1 = [...]int{
	0, 227, 228, 228, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 213, 213, 213, 216, 217,
	20, 3, 3, 3, 3, 2, 2, 8, 4, 5,
	5, 9, 9, 42, 42, 10, 11, 11, 11, 11,
	231, 231, 67, 67, 68, 68, 116, 116, 12, 13,
	13, 125, 125, 124, 124, 124, 126, 126, 126, 126,
	163, 163, 128, 128, 127, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 38, 38, 32, 32, 32, 32,
	35, 35, 35, 35, 35, 35, 50, 50, 50, 215,
	215, 214, 212, 212, 211, 211, 210, 21, 21, 195,
	197, 197, 196, 196, 196, 196, 187, 166, 166, 166,
	166, 169, 169, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 168, 168, 168, 168, 168, 170, 170, 170,
	170, 170, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 172, 172, 172,
	172, 172, 172, 172, 172, 186, 186, 173, 173, 181,
	181, 182, 182, 182, 179, 179, 180, 180, 183, 183,
	183, 175, 175, 176, 176, 184, 184, 177, 177, 177,
	178, 178, 178, 185, 185, 185, 185, 185, 174, 174,
	188, 188, 205, 205, 204, 204, 204, 34, 194, 194,
	201, 201, 201, 201, 201, 191, 191, 191, 192, 192,
	190, 190, 193, 193, 203, 203, 202, 189, 189, 206,
	206, 206, 206, 220, 221, 219, 219, 219, 219, 219,
	198, 198, 198, 199, 199, 199, 200, 200, 200, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	209, 207, 207, 208, 208, 16, 22, 22, 17, 17,
	17, 17, 17, 18, 18, 23, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 134, 134, 136,
	136, 132, 132, 135, 135, 133, 133, 133, 137, 137,
	137, 138, 138, 164, 164, 164, 25, 25, 27, 27,
	28, 29, 29, 158, 158, 159, 159, 30, 31, 43,
	43, 43, 43, 43, 43, 45, 45, 45, 7, 7,
	7, 7, 44, 44, 44, 6, 6, 26, 26, 26,
	26, 19, 232, 39, 40, 40, 41, 41, 41, 47,
	47, 47, 46, 46, 46, 53, 53, 55, 55, 55,
	55, 55, 56, 56, 56, 56, 56, 56, 52, 52,
	54, 54, 54, 54, 54, 150, 150, 150, 149, 149,
	58, 58, 59, 59, 60, 60, 60, 63, 61, 61,
	61, 61, 99, 76, 76, 115, 115, 114, 114, 117,
	117, 62, 62, 62, 62, 64, 64, 65, 65, 66,
	66, 157, 157, 156, 156, 156, 155, 155, 69, 69,
	69, 71, 70, 70, 70, 70, 72, 72, 74, 74,
	73, 73, 73, 73, 75, 77, 77, 77, 77, 77,
	78, 78, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 131, 131, 80, 80, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 91, 91, 91, 91, 91,
	91, 81, 81, 81, 81, 81, 81, 81, 51, 51,
	92, 92, 92, 226, 226, 98, 93, 93, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 88, 88, 88, 88, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 233, 233, 90, 89,
	89, 89, 89, 89, 89, 89, 48, 48, 48, 48,
	48, 162, 162, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 103, 103, 49, 49,
	101, 101, 102, 104, 104, 100, 100, 100, 83, 83,
	83, 83, 83, 83, 83, 83, 85, 85, 85, 105,
	105, 106, 106, 107, 107, 108, 108, 109, 110, 110,
	110, 111, 111, 111, 111, 112, 112, 112, 82, 82,
	82, 82, 113, 113, 113, 113, 118, 118, 94, 94,
	96, 96, 95, 97, 119, 119, 122, 120, 120, 120,
	123, 123, 123, 123, 123, 123, 123, 121, 121, 121,
	152, 152, 152, 129, 129, 139, 139, 140, 140, 130,
	130, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 142, 142, 142, 143, 143, 144, 144, 144, 151,
	151, 147, 147, 148, 148, 153, 153, 154, 154, 222,
	223, 224, 224, 225, 225, 225, 33, 36, 36, 37,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 229, 230, 160, 161, 161,
	161,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
	2, 4, 6, 6, 7, 4, 6, 5, 8, 1,
	3, 7, 8, 1, 1, 10, 8, 7, 6, 6,
	1, 1, 1, 3, 1, 3, 0, 4, 3, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 2, 2, 8, 5, 7,
	6, 8, 5, 5, 0, 1, 4, 5, 7, 4,
	5, 5, 4, 4, 4, 3, 1, 1, 1, 0,
	2, 1, 0, 2, 1, 3, 3, 4, 5, 4,
	2, 4, 1, 3, 3, 3, 8, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 1, 4, 4, 2, 2, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 0, 1,
	2, 0, 2, 0, 3, 0, 1, 0, 3, 3,
	0, 2, 2, 0, 2, 1, 2, 1, 0, 2,
	5, 4, 1, 2, 2, 3, 2, 2, 0, 1,
	2, 3, 3, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 3, 2, 3, 1, 10,
	11, 11, 12, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 3, 1, 2, 3, 1, 1, 1, 6,
	7, 7, 7, 7, 4, 5, 4, 4, 7, 5,
	5, 5, 12, 7, 5, 9, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	7, 1, 3, 8, 8, 3, 3, 5, 4, 6,
	5, 4, 4, 3, 2, 3, 4, 4, 3, 4,
	4, 4, 4, 4, 4, 3, 2, 7, 2, 3,
	4, 3, 7, 5, 4, 2, 4, 4, 3, 3,
	5, 2, 6, 4, 3, 7, 4, 1, 1, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 2, 1, 1, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 5, 3, 2, 2, 3,
	3, 2, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 2, 3, 5, 0, 1, 2, 1, 1,
	0, 2, 1, 3, 1, 1, 1, 2, 1, 3,
	3, 3, 3, 3, 7, 0, 3, 1, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 5, 7, 3, 0, 5, 4, 5, 5,
	0, 2, 1, 3, 3, 3, 2, 3, 2, 1,
	2, 0, 3, 1, 1, 3, 3, 4, 4, 5,
	3, 4, 5, 6, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 1, 2, 3, 1, 3, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 3, 2, 1,
	1, 1, 1, 4, 5, 5, 6, 4, 4, 6,
	6, 6, 8, 8, 8, 8, 9, 8, 5, 4,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 8, 8, 0, 2, 3, 4,
	4, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 2, 3, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 0, 2, 0, 3, 1, 3, 2, 0, 1,
	1, 0, 2, 4, 4, 0, 2, 4, 2, 1,
	5, 4, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 1, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 0, 1, 1, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 0, 1, 0, 1, 3, 5, 2, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int{
	-1000, -227, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -23, -24, -25, -27, -28,
	-29, -30, -31, -6, -26, -19, -20, -32, -35, -33,
	-34, -36, -37, -4, -229, 6, 7, -42, 9, 10,
	30, -21, 123, 124, 126, 125, 159, 127, 152, 53,
	173, 174, 176, 177, 178, 179, -45, 157, 158, 31,
	32, 129, 34, -38, 377, 371, 378, 379, 57, 8,
	262, 154, 153, 25, 380, -228, 381, -41, 5, -107,
	15, -3, -39, -232, -39, -39, -39, -39, -39, -195,
	-197, 57, 96, -144, 133, 77, -127, 254, 130, 131,
	-128, 137, -147, 367, 372, 373, -213, -146, 60, 61,
	62, 272, 145, 304, 305, 364, 173, 187, 181, 208,
	200, 273, 306, 146, 198, 201, 241, 143, 307, 228,
	235, 71, 176, 250, 308, 155, 196, 192, 29, 309,
	281, 190, 27, 310, 237, 213, 311, 277, 239, 191,
	236, 129, 312, 148, 141, 313, 214, 218, 314, 242,
	315, 316, 317, 380, 185, 186, 365, 318, 144, 244,
	212, 28, 142, 33, 274, 37, 163, 245, 216, 319,
	211, 207, 366, 320, 321, 322, 323, 210, 184, 206,
	41, 220, 219, 221, 240, 379, 203, 324, 325, 326,
	149, 327, 193, 18, 328, 329, 330, 331, 332, 248,
	158, 333, 161, 334, 335, 336, 337, 338, 339, 238,
	215, 217, 138, 165, 234, 378, 276, 340, 246, 189,
	341, 150, 162, 157, 249, 151, 342, 343, 344, 345,
	346, 347, 368, 348, 177, 369, 349, 350, 351, 352,
	172, 370, 243, 252, 40, 225, 353, 183, 371, 140,
	354, 174, 169, 230, 204, 164, 355, 356, 194, 195,
	209, 182, 205, 175, 166, 159, 357, 251, 226, 278,
	202, 199, 170, 358, 167, 168, 359, 231, 232, 171,
	275, 247, 197, 227, -130, 133, 254, 130, 232, 135,
	131, 131, 132, 133, 254, 130, 131, -73, -153, -213,
	-146, 367, 372, 373, 133, 131, 114, 201, 241, 123,
	229, 237, -136, 238, 165, -164, 131, -132, 228, 231,
	232, 171, 364, 175, 239, 243, 242, 233, -153, 175,
	-158, 180, -147, 178, -132, -43, 360, 127, -160, -160,
	230, 230, -160, -93, -57, -79, 80, -84, 29, 23,
	-83, -80, -100, -97, -98, 114, 115, 117, 116, 118,
	103, 104, 111, 81, 119, -88, -86, -87, -89, 64,
	63, 72, 65, 66, 67, 68, 73, 74, 75, -147,
	-153, -95, -229, 47, 48, 263, 264, 265, 266, 271,
	267, 83, 36, 253, 261, 260, 259, 257, 258, 255,
	256, 269, 270, 136, 254, 130, 109, 262, -213, -146,
	364, 374, -39, 65, -39, -39, -5, -4, -229, 6,
	20, 21, -111, 17, 16, -230, 59, -47, -55, 42,
	43, -56, 21, 35, 46, 44, -40, -54, 105, -57,
	-153, -130, -130, 11, -67, -68, -73, -75, -153, -120,
	-163, 175, -123, 243, 242, -148, -121, -147, -145, 241,
	201, 240, 128, 279, 79, 22, 24, 223, 82, 114,
	16, 83, 113, 263, 123, 51, 280, 255, 256, 253,
	265, 266, 254, 229, 10, 282, 25, 153, 21, 35,
	107, 125, 86, 87, 156, 377, 23, 154, 75, 285,
	19, 54, 11, 13, 286, 287, 14, 136, 135, 98,
	132, 49, 8, 119, 26, 95, 45, 288, 289, 290,
	291, 292, 47, 96, 17, 257, 258, 31, 293, 271,
	160, 109, 52, 38, 80, 294, 295, 73, 296, 76,
	55, 77, 15, 50, 297, 298, 299, 300, 97, 126,
	262, 48, 301, 130, 6, 268, 30, 152, 46, 302,
	131, 85, 269, 270, 134, 74, 5, 137, 32, 9,
	53, 56, 259, 260, 261, 36, 84, 12, 303, 78,
	-196, 96, -187, -213, -73, 132, -73, 262, 133, -140,
	136, -140, -140, 131, 131, -73, -213, -213, 123, 125,
	128, 55, -22, -73, -139, 136, -213, -139, -139, -139,
	-73, 120, -73, -213, 30, -137, 96, 12, 254, -213,
	165, 131, 166, 133, -161, -229, -148, -191, -213, 8,
	132, 33, 144, -161, 169, 170, -161, -135, -134, 235,
	236, 230, 234, 12, 170, 230, 168, -193, -213, 244,
	134, -147, -136, -7, -3, -10, -9, -11, 88, -160,
	-160, 58, 79, 77, 78, 95, -226, 69, -57, -81,
	98, 80, 96, 97, 82, 100, 99, 110, 103, 104,
	105, 106, 107, 108, 109, 101, 102, 113, 88, 89,
	90, 91, 92, 93, 94, -131, -229, -98, -229, 121,
	122, -84, -84, -84, -84, -84, -84, -84, -84, -84,
	-84, 64, -229, 120, -2, -93, -4, -229, -229, -229,
	-229, -229, -229, -229, -229, -103, -57, -229, -233, -90,
	-229, -233, -90, -233, -90, -233, -229, -233, -90, -233,
	-90, -233, -233, -90, -229, -229, -229, -229, -229, -229,
	-229, 366, 368, 375, 376, -73, -73, 64, -107, -3,
	-39, -112, 19, 31, -57, -108, -109, -57, -107, 38,
	-52, -54, -56, 42, 43, 70, 11, -226, -150, -149,
	22, -147, 64, 120, -74, 26, -73, -59, -60, -61,
	-62, -63, -76, -99, -229, -88, -73, -147, -153, -73,
	-67, -231, 58, 11, 56, -231, 58, 120, 58, 175,
	-123, -125, -124, 244, 246, 88, 134, -152, -147, 64,
	29, 30, 59, 58, -73, -166, -169, -171, -170, -172,
	-167, -168, 198, 199, 114, 202, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 30, 155, 194, 195,
	196, 197, 214, 215, 216, 217, 218, 219, 220, 221,
	181, 200, 273, 182, 183, 184, 185, 186, 187, 189,
	190, 191, 192, 193, -213, 22, 133, -127, 367, -73,
	-213, 80, -213, -73, -140, -73, -161, -161, -161, 167,
	167, 131, 131, 172, -73, 58, 134, -67, 23, 55,
	-73, -213, -213, -154, -153, -145, -161, -137, 64, -57,
	-161, -161, -161, -73, -161, -161, -192, 11, 98, -192,
	-137, -39, -161, -161, 11, -133, 11, 98, -57, -138,
	96, 55, 245, -159, 178, -73, 212, 361, 362, 363,
	-57, -57, -57, -57, -91, 73, 80, 74, 75, 69,
	-84, -92, -95, -98, 69, 98, 96, 97, 82, -84,
	-84, -84, -84, -84, -84, -84, -84, -84, -84, -84,
	-84, -84, -84, -84, -162, -213, 64, -213, -83, -83,
	-147, -53, 21, 35, -52, -148, -154, -145, -41, -230,
	-230, -107, -52, -52, -57, -57, -100, 64, -52, -100,
	64, -52, -52, -46, 21, 35, -101, -102, 84, -100,
	-147, -153, -230, -84, -147, -147, -52, -53, -53, -52,
	-52, -193, -193, -213, -213, 64, -225, -222, -216, 61,
	-111, -230, 9, 98, 58, 18, 58, -110, 24, 25,
	-111, -85, -147, 65, 68, -58, 58, 11, -56, -73,
	-149, 105, -154, -116, 161, -73, 30, 58, -69, -71,
	-70, -72, 45, 49, 51, 46, 47, 48, 52, -157,
	22, -59, -33, -3, -229, -156, -155, 22, -153, 64,
	-156, 161, 120, -116, 56, -59, -73, -59, -75, -153,
	105, -123, -125, 58, 245, 247, 248, 55, 76, -57,
	55, 76, -57, -178, 113, -198, -199, -200, -148, 64,
	65, -187, -188, -189, -201, 147, -206, 138, 140, 137,
	-190, 148, 132, 28, 59, -183, 73, 80, -179, 226,
	-173, 57, -173, -173, -173, -173, -177, 201, -177, -177,
	-177, 57, 57, -173, -173, -173, -181, 57, -181, -181,
	-182, 57, -182, -151, 56, -3, -73, 133, 22, -161,
	23, -161, -73, -141, 128, 125, 126, -209, 124, 223,
	201, 71, 29, 15, 263, 161, 278, -213, 162, -73,
	-73, -73, -73, -73, 128, 125, -73, -73, -73, -161,
	120, -73, -73, -74, -73, -137, -153, -153, 64, -73,
	-147, -44, -147, 64, 73, 74, 75, -92, -84, -84,
	-84, -51, 156, 79, -230, -230, -52, -52, -229, 120,
	-5, -111, -230, -230, 58, 56, 22, 11, 11, -230,
	11, 11, -230, -230, -52, -104, -102, 86, -57, -230,
	120, -230, 58, 58, -230, -230, -230, -230, -230, -50,
	365, 370, 369, -213, 64, 58, -224, -223, -217, 62,
	88, -112, 40, -57, -57, -109, -112, -129, 19, 11,
	36, 36, -78, 12, -54, -59, -56, 120, -82, 30,
	36, -3, -229, -229, -119, -122, -100, -60, -61, -61,
	-60, -61, 45, 45, 45, 50, 45, 50, 45, -70,
	-153, -230, -230, -230, -3, -155, -77, 53, 135, 54,
	-229, -148, -78, -59, -78, -78, 120, -124, -126, 249,
	246, 252, -213, 64, 58, -200, 88, 57, -213, 28,
	-190, -190, -193, -193, 28, -175, 29, 73, -180, 227,
	65, -177, -177, -178, 30, -178, -178, -178, -186, 64,
	-186, 65, 65, 55, -147, 22, -73, -3, -160, -218,
	143, 139, 147, 148, 141, 60, 61, 62, 132, 28,
	138, 140, 161, 137, -218, -142, -143, 134, 22, 132,
	28, 161, -215, 56, 167, 223, 167, 134, -161, -154,
	-133, -137, -115, 57, -133, -51, 79, -84, -84, -230,
	-230, -53, -148, -107, -112, -165, 114, 198, 155, 196,
	192, 212, 203, 225, 194, 226, -162, -165, -84, -84,
	-84, -84, 272, -107, 87, -57, 85, -148, -84, -84,
	64, -222, 88, -83, 41, -73, -105, 13, -57, 105,
	-118, 55, -119, -94, -96, -95, -229, -113, -147, -117,
	-147, -58, 58, 88, -65, -64, 55, 56, -66, 55,
	-64, 45, 45, -230, 132, 132, 132, -117, -107, -78,
	246, 250, 251, -199, -200, -203, -202, -147, -206, -193,
	-193, 57, -176, 55, -84, 59, -178, -178, -213, 114,
	59, 58, 59, 58, 59, 58, -73, -3, 22, -160,
	-160, -73, -160, -147, -212, 275, -214, -213, -147, -147,
	-147, -73, 120, -137, -137, -114, -147, -137, -84, -230,
	-111, -230, -173, -173, -173, -182, -173, 186, -173, 186,
	-230, -230, 19, 19, 19, 19, -229, -49, 268, -57,
	58, 58, 64, -83, -106, 14, 16, 27, -118, 58,
	-230, -230, 58, 120, -230, 58, -78, -122, -57, -57,
	57, -57, -229, -229, -229, -230, -111, 59, 58, -173,
	-114, -184, 223, 9, -177, 64, -177, 65, 65, -161,
	-3, 26, -211, -210, -148, 57, 56, -154, 59, 58,
	-112, -177, -213, -84, -84, -84, -84, -84, -111, 64,
	-84, -84, -57, -93, 28, -96, 36, -3, -147, -147,
	-147, -107, -114, -114, -230, -114, -114, -156, -205, -204,
	56, 142, 71, -202, 59, -185, 138, 28, 137, -87,
	-178, -178, 59, 59, -229, 58, 88, -114, -73, -147,
	-230, -230, -230, -230, -48, 98, 275, -230, -230, -230,
	9, -94, 120, -111, 59, -230, -230, -230, -77, -204,
	-213, -194, 88, 64, 150, -174, 71, 28, 28, -207,
	-208, 161, -210, -200, 59, -230, 273, 52, 276, -119,
	-147, 65, -73, 64, -230, 58, -147, -215, 41, 274,
	277, 57, -208, 36, -212, 41, -114, 163, 275, 59,
	164, 276, -220, -221, 55, -229, 277, -221, 55, 10,
	9, -84, 160, -219, 151, 146, 149, 30, -219, -230,
	-230, 145, 29, 73,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 663, 0, 392, 392, 392, 392, 392,
	392, 0, 736, 719, 0, 0, 0, 0, -2, 357,
	358, 0, 360, -2, 0, 0, -2, 1067, 1067, 0,
	0, 1067, 0, 0, 392, 0, 392, 392, 1065, 53,
	54, 375, 376, 377, 95, 1, 3, 0, 396, 671,
	0, 0, -2, 394, 0, 719, 719, 0, 0, 85,
	86, 0, 0, 0, 1054, 0, 0, 717, 717, 717,
	0, 737, 738, -2, -2, -2, 741, 742, 35, 36,
	37, 878, 879, 880, 881, 882, 883, 884, 885, 886,
	887, 888, 889, 890, 891, 892, 893, 894, 895, 896,
	897, 898, 899, 900, 901, 902, 903, 904, 905, 906,
	907, 908, 909, 910, 911, 912, 913, 914, 915, 916,
	917, 918, 919, 920, 921, 922, 923, 924, 925, 926,
	927, 928, 929, 930, 931, 932, 933, 934, 935, 936,
	937, 938, 939, 940, 941, 942, 943, 944, 945, 946,
	947, 948, 949, 950, 951, 952, 953, 955, 956, 957,
	958, 959, 960, 961, 962, 963, 964, 965, 966, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049,
	1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060,
	1061, 1062, 1063, 1064, 0, 0, 0, 0, 0, 720,
	0, 715, 0, 715, 715, 715, 0, 304, 480, 745,
	746, 954, 1032, 1033, 1054, 0, 0, 0, 348, 0,
	1068, 316, 0, 318, 1068, 0, 1068, 0, 325, 0,
	0, 331, 232, 0, 340, 354, 355, 342, 356, 359,
	0, 364, 367, 0, 339, 0, 0, 374, 387, 388,
	1067, 1067, 391, 40, 536, 492, 0, 499, -2, 0,
	538, 539, 540, 541, 542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 569, 570, 571, 572, 648,
	649, 650, 651, 652, 653, 654, 655, 503, 504, 645,
	0, 693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 636, 0, 606, 606, 606, 606, 606, 606, 606,
	606, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 217, 757, 0, 663, 49, 0, 392,
	397, 398, 675, 0, 0, 663, 1066, 0, 0, -2,
	-2, 408, 414, 415, 416, 417, 393, 0, 420, 425,
	0, 0, 0, 0, 0, 0, 62, 64, 480, 68,
	0, 1043, 697, -2, -2, 0, 0, 743, 744, -2,
	892, -2, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 794, 795, 796, 797,
	798, 799, 800, 801, 802, 803, 804, 805, 806, 807,
	808, 809, 810, 811, 812, 813, 814, 815, 816, 817,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 839, 840, 841, 842, 843, 844, 845, 846, 847,
	848, 849, 850, 851, 852, 853, 854, 855, 856, 857,
	858, 859, 860, 861, 862, 863, 864, 865, 866, 867,
	868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
	0, 0, 122, 0, 120, 0, 0, 0, 0, 0,
	0, 0, 0, 717, 0, 1068, 1068, 1068, 0, 0,
	0, 0, 295, 0, 0, 0, 0, 0, 0, 0,
	303, 0, 305, 1068, 348, 308, 0, 0, 1068, 1068,
	1068, 0, 1068, 1068, 315, 1069, 1070, 0, 348, 392,
	225, 226, 227, 319, 1068, 1068, 321, 0, 345, 343,
	344, 337, 338, 0, 351, 328, 329, 334, 233, 0,
	365, 368, 0, 386, 378, 379, 380, 381, 0, 389,
	390, 0, 0, 0, 0, 0, 498, 533, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 521, 522,
	523, 524, 525, 526, 527, 500, 0, 514, 0, 0,
	0, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	0, 568, 405, 0, 0, 0, 663, 0, 0, 0,
	0, 0, 0, 0, 402, 0, 637, 0, 590, 598,
	0, 591, 599, 592, 600, 593, 0, 594, 601, 595,
	602, 596, 597, 603, 0, 0, 0, 405, 405, 0,
	0, 232, 232, 0, 105, 753, 758, 759, 671, 0,
	407, 41, 0, 0, 672, 664, 665, 668, 671, 0,
	430, 418, 409, 412, 413, 395, 0, -2, 422, 426,
	0, 428, 429, 0, 66, 0, 479, 0, 432, 434,
	435, 436, 438, 461, 0, 463, 463, 0, 480, -2,
	0, 0, 0, 60, 61, 0, 0, 0, 0, 1043,
	698, 70, 71, 0, 0, 0, 0, 200, 710, 711,
	712, 708, 250, 0, 0, 188, 184, 128, 129, 130,
	177, 132, 177, 177, 177, 177, 197, 197, 197, 197,
	160, 161, 162, 163, 164, 0, 0, 147, 177, 177,
	177, 151, 167, 168, 169, 170, 171, 172, 173, 174,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 179,
	179, 179, 181, 181, 739, 0, 0, 0, 84, 0,
	1068, 0, 1068, 117, 0, 0, 264, 266, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 716, 0,
	1068, 301, 302, 481, 747, 748, 306, 307, 349, 350,
	309, 310, 311, 312, 313, 314, 0, 228, 229, 0,
	333, 0, 320, 324, 0, 348, 0, 0, 326, 327,
	0, 0, 336, 0, 366, 382, 370, 371, 372, 373,
	537, 493, 494, 495, 497, 515, 0, 517, 519, 534,
	505, 506, 530, 531, 532, 0, 0, 0, 0, 528,
	510, 0, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 557, 621, 622, 0, 555, 556,
	567, 0, 0, 0, 406, 646, 0, -2, 0, 535,
	692, 671, 0, 0, 0, 0, 540, 648, 0, 540,
	648, 0, 0, 0, 403, 404, 643, 640, 0, 0,
	645, 0, 607, 0, 0, 0, 0, 0, 0, 0,
	0, 96, 99, 102, 103, 104, 751, 754, 0, 38,
	675, 50, 676, 0, 0, 0, 0, 667, 669, 670,
	675, 0, 656, 0, 0, 490, 0, 0, 410, 47,
	427, 423, 0, 0, 0, 478, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 471, 0, 0, 0, 0,
	462, 0, 0, 0, 0, 437, 464, 0, 466, 467,
	485, 980, 0, 490, 0, 490, 63, 490, 65, 0,
	484, 699, 69, 0, 0, 74, 75, 700, 701, 702,
	703, 704, 705, 706, 0, 119, 251, 253, 256, 257,
	258, 123, 124, 125, 0, 0, 238, 0, 0, 232,
	232, 0, 230, 231, 121, 191, 189, 0, 186, 185,
	131, 0, 197, 197, 154, 155, 200, 0, 200, 200,
	200, 0, 0, 148, 149, 150, 142, 0, 143, 144,
	145, 0, 146, 0, 0, 88, 0, 0, 0, 92,
	718, 93, 118, 1067, 0, 0, 731, 265, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 0, 109,
	269, 271, 270, 274, 0, 0, 0, 296, 1068, 300,
	0, 345, 348, 445, 345, 323, 346, 347, 352, 330,
	362, 385, 383, 384, 516, 518, 520, 507, 528, 511,
	0, 508, 0, 0, 502, 573, 0, 0, 405, 0,
	663, 675, 577, 578, 0, 0, 0, 0, 0, 614,
	0, 0, 615, 0, 663, 0, 641, 0, 0, 589,
	0, 608, 0, 0, 609, 610, 611, 612, 613, 97,
	106, 107, 108, 100, 101, 0, 756, 752, 0, 39,
	0, 43, 0, 673, 674, 666, 42, 0, 713, 714,
	657, 658, 659, 0, 419, 431, 411, 0, 686, 0,
	0, 679, 0, 0, 430, 694, 0, 433, 457, 459,
	0, 454, 469, 470, 472, 0, 474, 0, 476, 477,
	439, 440, 441, 442, 0, 465, 443, 0, 0, 0,
	0, 0, 663, 490, 58, 59, 0, 72, 73, 0,
	0, 79, 201, 202, 0, 254, 0, 0, 0, 220,
	232, 232, 223, 224, 0, 193, 0, 190, 127, 187,
	0, 200, 200, 156, 0, 157, 158, 159, 0, 175,
	0, 0, 0, 0, 740, 0, 0, 90, 259, 1067,
	276, 277, 278, 279, 280, 281, 282, 283, 284, 285,
	286, 287, 288, 289, 1067, 0, 1067, 732, 733, 734,
	735, 0, 112, 0, 0, 0, 0, 0, 299, 482,
	348, 332, 348, 0, 348, 509, 0, 529, 512, 574,
	575, 0, 647, 671, 45, 0, 177, 177, 626, 177,
	181, 629, 177, 631, 177, 634, 0, 0, 0, 0,
	0, 0, 0, 638, 588, 644, 0, 646, 0, 0,
	0, 755, 0, 749, 677, 44, 661, 0, 491, 424,
	51, 0, 686, 678, 688, 690, 0, 0, 682, 0,
	449, 490, 0, 0, 451, 458, 0, 0, 452, 0,
	453, 473, 475, -2, 0, 0, 0, 0, 671, 57,
	76, 77, 78, 252, 255, 0, 234, 177, 237, 221,
	222, 0, 195, 0, 192, 178, 152, 153, 198, 199,
	197, 0, 197, 0, 182, 0, 1068, 89, 0, 260,
	261, 262, 263, 0, 268, 0, 110, 111, 0, 0,
	273, 297, 0, 317, 335, 0, 447, 322, 513, 576,
	675, 579, 623, 197, 627, 628, 630, 632, 633, 635,
	581, 580, 0, 0, 0, 0, 0, 671, 0, 642,
	0, 0, 98, 750, 48, 0, 0, 0, 52, 0,
	691, 0, 0, 0, 67, 0, 663, 695, 696, 455,
	0, 460, 0, 0, 0, 463, 56, 211, 0, 236,
	0, 203, 196, 0, 200, 176, 200, 0, 0, 87,
	91, 0, 113, 114, 0, 0, 0, 483, 446, 0,
	46, 624, 625, 0, 0, 0, 0, 616, 0, 639,
	0, 0, 662, 660, 0, 689, 0, 681, 684, 683,
	450, 671, 0, 0, 487, 0, 0, 485, 210, 212,
	0, 218, 0, 235, 0, 208, 0, 205, 207, 194,
	165, 166, 180, 183, 0, 0, 0, 0, 275, 448,
	582, 584, 583, 585, 0, 0, 0, 587, 604, 605,
	0, 680, 0, 55, 456, 486, 488, 489, 444, 213,
	214, 0, 219, 216, 0, 126, 0, 204, 206, 0,
	291, 0, 115, 116, 109, 586, 0, 0, 0, 687,
	685, 215, 0, 209, 290, 0, 0, 112, 617, 0,
	620, 0, 292, 0, 272, 618, 0, 0, 0, 239,
	0, 0, 240, 241, 0, 0, 619, 242, 0, 0,
	0, 0, 0, 243, 245, 246, 0, 0, 244, 293,
	294, 247, 248, 249,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 81, 3, 3, 3, 108, 100, 3,
	57, 59, 105, 103, 58, 104, 120, 106, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 381,
	89, 88, 90, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 110, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 99, 3, 111,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 82, 83, 84, 85,
	86, 87, 91, 92, 93, 94, 95, 96, 97, 98,
	101, 102, 107, 109, 112, 113, 114, 115, 116, 117,
	118, 119, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:369
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:374
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:375
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:379
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:412
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:418
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:422
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:426
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:432
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:438
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:444
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 41:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:450
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:458
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:462
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].str, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].str)
		}
	case 44:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:466
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 45:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:489
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:497
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].str, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].str)
		}
	case 47:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:503
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:511
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereStr, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingStr, yyDollar[8].expr))
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:517
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:521
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:528
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:540
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:552
		{
			yyVAL.str = InsertStr
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:556
		{
			yyVAL.str = ReplaceStr
		}
	case 55:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:562
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit}
		}
	case 56:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:568
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 57:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:572
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:576
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:580
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:585
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:586
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:590
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:594
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:600
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:604
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:609
		{
			yyVAL.partitions = nil
		}
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:613
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:619
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 69:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:625
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Characteristics: yyDollar[5].characteristics}
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:629
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:639
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:645
		{
			yyVAL.characteristic = &IsolationLevel{Level: string(yyDollar[3].str)}
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:649
		{
			yyVAL.characteristic = &AccessMode{Mode: TxReadWrite}
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:653
		{
			yyVAL.characteristic = &AccessMode{Mode: TxReadOnly}
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:659
		{
			yyVAL.str = RepeatableRead
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:663
		{
			yyVAL.str = ReadCommitted
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:667
		{
			yyVAL.str = ReadUncommitted
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:671
		{
			yyVAL.str = Serializable
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:677
		{
			yyVAL.str = SessionStr
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:681
		{
			yyVAL.str = GlobalStr
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:687
		{
			yyVAL.str = TempStr
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:691
		{
			yyVAL.str = TemporaryStr
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:697
		{
			yyVAL.str = MaterializedStr
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:703
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:708
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:714
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName}
		}
	case 88:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:719
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[3].tableName.ToViewName(), SelectStatement: yyDollar[5].selStmt}
		}
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:723
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[5].tableName.ToViewName(), SelectStatement: yyDollar[7].selStmt, OrReplace: true}
		}
	case 90:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:727
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[4].tableName.ToViewName(), SelectStatement: yyDollar[6].selStmt, Modifier: yyDollar[2].str}
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:731
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[6].tableName.ToViewName(), SelectStatement: yyDollar[8].selStmt, OrReplace: true, Modifier: yyDollar[4].str}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:735
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].colIdent.String()), IfNotExists: notExists}
		}
	case 93:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:743
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].colIdent.String()), IfNotExists: notExists}
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:752
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:756
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:762
		{
			yyVAL.statement = &Auth{SessionAuth: yyDollar[1].boolVal, Provider: yyDollar[4].str}
		}
	case 97:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:767
		{
			yyVAL.statement = &Auth{SessionAuth: yyDollar[1].boolVal, Provider: yyDollar[4].str, Type: yyDollar[5].str}
		}
	case 98:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:772
		{
			yyVAL.statement = &Auth{SessionAuth: yyDollar[1].boolVal, Provider: yyDollar[4].str, Type: yyDollar[5].str, KeyFilePath: string(yyDollar[6].bytes), KeyEnvVar: string(yyDollar[7].bytes)}
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:777
		{
			yyVAL.statement = &AuthRevoke{SessionAuth: yyDollar[1].boolVal, Provider: yyDollar[4].str}
		}
	case 100:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:783
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes), ProviderId: yyDollar[4].colIdent.GetRawVal(), ProviderVersion: yyDollar[5].colIdent.GetRawVal()}
		}
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:788
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes), ProviderId: yyDollar[4].colIdent.GetRawVal(), ProviderVersion: string(yyDollar[5].bytes)}
		}
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:793
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes), ProviderId: yyDollar[4].colIdent.GetRawVal()}
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:798
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes), ProviderId: yyDollar[4].colIdent.GetRawVal()}
		}
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:803
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes), ProviderId: string(yyDollar[4].bytes)}
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:808
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes)}
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:814
		{
			yyVAL.str = InteractiveStr
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:818
		{
			yyVAL.str = ServiceAccountStr
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:822
		{
			yyVAL.str = ServiceAccountStr
		}
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:828
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:832
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:838
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:843
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:848
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:854
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:859
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:865
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:871
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName, IfNotExists: notExists}
			setDDL(yylex, yyVAL.ddl)
		}
	case 118:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:880
		{
			var notExists bool
			if yyDollar[4].byt != 0 {
				notExists = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: notExists, Modifier: yyDollar[2].str}
			setDDL(yylex, yyVAL.ddl)
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:891
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:898
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:902
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:908
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:913
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:917
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:921
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 126:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:927
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolVal
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolVal
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].sqlVal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:938
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:949
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:954
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:960
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:964
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:968
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:972
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:976
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:980
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:984
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:988
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:992
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1010
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1022
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1030
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1034
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1038
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1042
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1046
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1052
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1056
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1060
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1064
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1068
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1072
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1076
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1080
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1084
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1088
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1092
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1096
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1100
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1104
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 166:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1115
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1119
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1123
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1127
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1131
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1135
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1139
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1143
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1149
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1154
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1159
		{
			yyVAL.sqlVal = nil
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1163
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1168
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 180:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1172
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1180
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1184
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 183:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1190
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1198
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1202
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1207
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1211
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1217
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1221
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1225
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1230
		{
			yyVAL.optVal = nil
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1234
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1239
		{
			yyVAL.optVal = nil
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1243
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1248
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1252
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1257
		{
			yyVAL.str = ""
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1261
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1265
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1270
		{
			yyVAL.str = ""
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1274
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1278
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1283
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1287
		{
			yyVAL.colKeyOpt = ColKeyPrimary
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1291
		{
			yyVAL.colKeyOpt = ColKey
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1295
		{
			yyVAL.colKeyOpt = ColKeyUniqueKey
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1299
		{
			yyVAL.colKeyOpt = ColKeyUnique
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1304
		{
			yyVAL.sqlVal = nil
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1308
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1314
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1318
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1324
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1328
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1334
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].colIdent.String())}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1338
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1343
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1349
		{
			yyVAL.statement = &Sleep{Duration: NewIntVal(yyDollar[2].bytes)}
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1355
		{
			yyVAL.str = ""
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1359
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1365
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1369
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1373
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1377
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1381
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1387
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1391
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1395
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1402
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1406
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1412
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1416
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1421
		{
			yyVAL.str = ""
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1425
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1431
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1435
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1441
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1447
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1451
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 239:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1458
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 240:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1462
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 241:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1466
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 242:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1470
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1476
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1482
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1492
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1496
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1500
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1504
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1509
		{
			yyVAL.str = ""
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1513
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1517
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1525
		{
			yyVAL.str = yyDollar[1].str
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1529
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1533
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 259:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1553
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 260:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1557
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 261:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1561
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 262:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1565
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 263:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1570
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1575
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1579
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1583
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1587
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 268:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1591
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1603
		{
			yyVAL.statement = &DDL{
				Action: DropVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 270:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1613
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1617
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 272:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1621
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 273:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1634
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1644
		{
			yyVAL.statement = &DDL{Action: AddSequenceStr, Table: yyDollar[5].tableName}
		}
	case 275:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1648
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncStr,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 290:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1677
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1687
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 293:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1693
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 294:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1697
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1703
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1709
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1713
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1721
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 299:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1729
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName}
		}
	case 300:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1734
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: exists}
		}
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1742
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1746
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1752
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1756
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1761
		{
			yyVAL.statement = &OtherRead{}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1767
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String())}
		}
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1772
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Type: CharsetStr, ShowTablesOpt: showTablesOpt}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1777
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1782
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1787
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String())}
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1791
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1795
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1799
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1803
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1807
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1811
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 317:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1815
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1820
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1824
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1828
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1832
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1836
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1841
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1851
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1855
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1859
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: yyDollar[4].expr}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1863
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Scope: string(yyDollar[2].bytes), Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1868
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1872
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1876
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1880
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 332:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1884
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[6].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].colIdent.String()), OnTable: yyDollar[5].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1901
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].colIdent.String()), ShowTablesOpt: showTablesOpt}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1906
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Scope: yyDollar[3].str}
		}
	case 335:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1911
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Comments: Comments(yyDollar[4].bytes2), Type: string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, ShowTablesOpt: showTablesOpt, Columns: yyDollar[6].columns}
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1917
		{
			yyVAL.statement = &Show{Type: "TRANSACTION_ISOLATION_LEVEL"}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1927
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1933
		{
			yyVAL.str = ""
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1937
		{
			yyVAL.str = "extended "
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1943
		{
			yyVAL.str = ""
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1947
		{
			yyVAL.str = "full "
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1953
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1957
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1963
		{
			yyVAL.str = ""
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1967
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1971
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1977
		{
			yyVAL.showFilter = nil
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1981
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1985
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1991
		{
			yyVAL.showFilter = nil
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1995
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2001
		{
			yyVAL.str = ""
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.str = SessionStr
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.str = GlobalStr
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2015
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.statement = &Begin{}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2029
		{
			yyVAL.statement = &Begin{}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2035
		{
			yyVAL.statement = &Commit{}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.statement = &Rollback{}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2045
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2050
		{
			yyVAL.empty = struct{}{}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2052
		{
			yyVAL.empty = struct{}{}
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2055
		{
			yyVAL.empty = struct{}{}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.empty = struct{}{}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2062
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2068
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2073
		{
			yyVAL.str = ""
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2077
		{
			yyVAL.str = JSONStr
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2081
		{
			yyVAL.str = TreeStr
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2085
		{
			yyVAL.str = VitessStr
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2089
		{
			yyVAL.str = TraditionalStr
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.str = AnalyzeStr
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2099
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2103
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2107
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2113
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2117
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2121
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2125
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2130
		{
			yyVAL.str = ""
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.str = ""
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2144
		{
			yyVAL.statement = &DescribeTable{Full: string(yyDollar[2].str), Extended: string(yyDollar[3].str), Table: yyDollar[4].tableName}
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2148
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2154
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2158
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2162
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2166
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2172
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2176
		{
			setAllowComments(yylex, true)
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2180
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2186
		{
			yyVAL.bytes2 = nil
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2190
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			yyVAL.str = UnionStr
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2200
		{
			yyVAL.str = UnionAllStr
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2204
		{
			yyVAL.str = UnionDistinctStr
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2209
		{
			yyVAL.str = ""
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2213
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2217
		{
			yyVAL.str = SQLCacheStr
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2222
		{
			yyVAL.str = ""
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.str = DistinctStr
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.str = DistinctStr
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2235
		{
			yyVAL.selectExprs = nil
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2239
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2244
		{
			yyVAL.strs = nil
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2248
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2252
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2256
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2260
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2266
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2270
		{
			yyVAL.str = SQLCacheStr
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2274
		{
			yyVAL.str = DistinctStr
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2278
		{
			yyVAL.str = DistinctStr
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2282
		{
			yyVAL.str = StraightJoinHint
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2286
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2292
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2296
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2302
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2306
		{
			concatamer := ListArgConcatamer(yyDollar[2].listArgsConcat)
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: NewColIdent(concatamer.String())}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2311
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2315
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2319
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2324
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2328
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2332
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2339
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2344
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2348
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2354
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2358
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2369
		{
			yyVAL.tableExpr = &TableValuedFuncTableExpr{FuncExpr: yyDollar[1].expr, As: yyDollar[2].tableIdent}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2375
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2379
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2383
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2387
		{
			exec := yyDollar[2].statement.(*Exec)
			yyVAL.tableExpr = &ExecSubquery{Exec: exec}
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2394
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2400
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 444:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2404
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2409
		{
			yyVAL.columns = nil
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2413
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2420
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2424
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2430
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2434
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2447
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2451
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2455
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2459
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2465
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2467
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2471
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2473
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2477
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2479
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2482
		{
			yyVAL.empty = struct{}{}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.empty = struct{}{}
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2487
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2491
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2495
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2502
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2508
		{
			yyVAL.str = JoinStr
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2512
		{
			yyVAL.str = JoinStr
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2516
		{
			yyVAL.str = JoinStr
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2522
		{
			yyVAL.str = StraightJoinStr
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2528
		{
			yyVAL.str = LeftJoinStr
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2532
		{
			yyVAL.str = LeftOuterJoinStr
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2536
		{
			yyVAL.str = RightJoinStr
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2540
		{
			yyVAL.str = RightOuterJoinStr
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2546
		{
			yyVAL.str = NaturalJoinStr
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2550
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2560
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2564
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2570
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2574
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2578
		{
			yyVAL.tableName = TableName{QualifierSecond: yyDollar[1].tableIdent, Qualifier: yyDollar[3].tableIdent, Name: yyDollar[5].tableIdent}
		}
	case 483:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2582
		{
			yyVAL.tableName = TableName{QualifierThird: yyDollar[1].tableIdent, QualifierSecond: yyDollar[3].tableIdent, Qualifier: yyDollar[5].tableIdent, Name: yyDollar[7].tableIdent}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2588
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2593
		{
			yyVAL.indexHints = nil
		}
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2597
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2601
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr}
		}
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2605
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2609
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2614
		{
			yyVAL.expr = nil
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2618
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2624
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2628
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2632
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2636
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2640
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2644
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2648
		{
			yyVAL.expr = &UnaryCastConcatamerExpr{Expr: yyDollar[1].expr, CastConcatamer: ListArgConcatamer(yyDollar[2].listArgsConcat)}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2652
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2656
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2662
		{
			yyVAL.str = ""
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2666
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2672
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2676
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2682
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2686
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2690
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2694
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2698
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2702
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2706
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2710
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 513:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2714
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2718
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2724
		{
			yyVAL.str = IsNullStr
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2728
		{
			yyVAL.str = IsNotNullStr
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2732
		{
			yyVAL.str = IsTrueStr
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2736
		{
			yyVAL.str = IsNotTrueStr
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2740
		{
			yyVAL.str = IsFalseStr
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2744
		{
			yyVAL.str = IsNotFalseStr
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2750
		{
			yyVAL.str = EqualStr
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2754
		{
			yyVAL.str = LessThanStr
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2758
		{
			yyVAL.str = GreaterThanStr
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2762
		{
			yyVAL.str = LessEqualStr
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2766
		{
			yyVAL.str = GreaterEqualStr
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2770
		{
			yyVAL.str = NotEqualStr
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2774
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2779
		{
			yyVAL.expr = nil
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2783
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2789
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2793
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2797
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2802
		{
			yyVAL.listArgsConcat = []ListArg{ListArg(yyDollar[1].bytes)}
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2806
		{
			yyVAL.listArgsConcat = append(yyDollar[1].listArgsConcat, ListArg(yyDollar[2].bytes))
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2812
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2818
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2822
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2828
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2832
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2836
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2840
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2844
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2848
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2852
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2856
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2860
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2864
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2868
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2872
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2876
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2880
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2884
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2888
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2892
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2896
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2900
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2904
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2908
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2912
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2916
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Str, Expr: yyDollar[2].expr}
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2920
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2924
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Str, Expr: yyDollar[2].expr}
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2928
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2936
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2950
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2954
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2958
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2966
		{
			inputStr := string(yyDollar[2].bytes)
			stringList := strings.Split(inputStr, " ")
			if len(stringList) != 2 {
				yylex.Error("the interval string '" + inputStr + "' is not valid")
				return 1
			}
			stringExpr := NewStrVal([]byte(stringList[0]))
			yyVAL.expr = &IntervalExpr{Expr: stringExpr, Unit: stringList[1]}
		}
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2987
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2991
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2995
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2999
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3009
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3013
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 579:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3017
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 580:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3021
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3025
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3029
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 583:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3033
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 584:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3037
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 585:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3041
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 586:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3045
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3049
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3053
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3057
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3067
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3071
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3075
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3080
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3085
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3090
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3096
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3101
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3106
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3110
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3114
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3119
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3124
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3129
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 604:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3133
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 605:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3137
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3147
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3157
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3161
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3165
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3169
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3173
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3177
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3181
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3187
		{
			yyVAL.str = ""
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3191
		{
			yyVAL.str = BooleanModeStr
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3195
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 619:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3199
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3203
		{
			yyVAL.str = QueryExpansionStr
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3209
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3213
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3219
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3223
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3227
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3231
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3235
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3239
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3245
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3249
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3253
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3257
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3261
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3265
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3269
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3274
		{
			yyVAL.expr = nil
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3278
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3283
		{
			yyVAL.str = string("")
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3287
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3293
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3297
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3303
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3308
		{
			yyVAL.expr = nil
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3312
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3318
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3322
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3326
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3332
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3336
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3340
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3344
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3348
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3352
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3356
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3360
		{
			yyVAL.expr = &NullVal{}
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3366
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3375
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3379
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3384
		{
			yyVAL.exprs = nil
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3388
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3393
		{
			yyVAL.expr = nil
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3397
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3402
		{
			yyVAL.orderBy = nil
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3406
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3412
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3416
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3422
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3427
		{
			yyVAL.str = AscScr
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3431
		{
			yyVAL.str = AscScr
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3435
		{
			yyVAL.str = DescScr
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3440
		{
			yyVAL.limit = nil
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3444
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3448
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3452
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3457
		{
			yyVAL.str = ""
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3461
		{
			yyVAL.str = ForUpdateStr
		}
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3465
		{
			yyVAL.str = ShareModeStr
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3478
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3482
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3486
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3490
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3496
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3500
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3504
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3508
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3513
		{
			yyVAL.updateExprs = nil
		}
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3517
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3523
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3527
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3533
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3537
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3543
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3549
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3559
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3563
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3569
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3575
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3579
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].str
			yyVAL.setExprs = SetExprs{yyDollar[2].setExpr}
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3584
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3590
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("on"))}
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3594
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("off"))}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3598
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3602
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("on"))}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3606
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("off"))}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3610
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3614
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3621
		{
			yyVAL.bytes = []byte("charset")
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3628
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3632
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3636
		{
			yyVAL.expr = &Default{}
		}
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3645
		{
			yyVAL.byt = 0
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3647
		{
			yyVAL.byt = 1
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3650
		{
			yyVAL.byt = 0
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3652
		{
			yyVAL.byt = 1
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3655
		{
			yyVAL.str = ""
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3657
		{
			yyVAL.str = IgnoreStr
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3661
		{
			yyVAL.empty = struct{}{}
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3663
		{
			yyVAL.empty = struct{}{}
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3665
		{
			yyVAL.empty = struct{}{}
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3667
		{
			yyVAL.empty = struct{}{}
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3669
		{
			yyVAL.empty = struct{}{}
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3671
		{
			yyVAL.empty = struct{}{}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3673
		{
			yyVAL.empty = struct{}{}
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3675
		{
			yyVAL.empty = struct{}{}
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3677
		{
			yyVAL.empty = struct{}{}
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3679
		{
			yyVAL.empty = struct{}{}
		}
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3682
		{
			yyVAL.empty = struct{}{}
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3684
		{
			yyVAL.empty = struct{}{}
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3686
		{
			yyVAL.empty = struct{}{}
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3690
		{
			yyVAL.empty = struct{}{}
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3692
		{
			yyVAL.empty = struct{}{}
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3695
		{
			yyVAL.empty = struct{}{}
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3697
		{
			yyVAL.empty = struct{}{}
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3699
		{
			yyVAL.empty = struct{}{}
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3702
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3704
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3708
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3712
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3719
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3725
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3729
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3736
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3742
		{
			yyVAL.execVarDef = NewExecVarDef(yyDollar[1].colIdent, yyDollar[3].expr)
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3748
		{
			yyVAL.execVarDef = NewExecVarDef(yyDollar[1].colIdent, yyDollar[3].expr)
		}
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3754
		{
			yyVAL.execVarDefOpt = nil
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3756
		{
			rv := yyDollar[1].execVarDef
			yyVAL.execVarDefOpt = &rv
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3762
		{
			yyVAL.execVarDefs = nil
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3764
		{
			yyVAL.execVarDefs = []ExecVarDef{yyDollar[1].execVarDef}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3768
		{
			yyVAL.execVarDefs = append(yyDollar[1].execVarDefs, yyDollar[3].execVarDef)
		}
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3775
		{
			yyVAL.statement = NewExec(yyDollar[2].bytes2, yyDollar[3].tableName, yyDollar[4].execVarDefs, yyDollar[5].execVarDefOpt)
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3781
		{
			yyVAL.statement = NewPurge(yyDollar[2].bytes2, TableName{}, true)
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3785
		{
			yyVAL.statement = NewPurge(yyDollar[2].bytes2, yyDollar[3].tableName, false)
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3791
		{
			yyVAL.statement = NewNativeQuery(yyDollar[2].bytes2, string(yyDollar[3].bytes))
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4123
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4132
		{
			decNesting(yylex)
		}
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4137
		{
			skipToEnd(yylex)
		}
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4142
		{
			skipToEnd(yylex)
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4146
		{
			skipToEnd(yylex)
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4150
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
