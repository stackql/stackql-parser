// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "strings"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:55
type yySymType struct {
	yys                  int
	empty                struct{}
	statement            Statement
	selStmt              SelectStatement
	ddl                  *DDL
	ins                  *Insert
	byt                  byte
	bytes                []byte
	bytes2               [][]byte
	str                  string
	strs                 []string
	selectExprs          SelectExprs
	selectExpr           SelectExpr
	columns              Columns
	partitions           Partitions
	colName              *ColName
	tableExprs           TableExprs
	tableExpr            TableExpr
	joinCondition        JoinCondition
	tableName            TableName
	tableNames           TableNames
	indexHints           *IndexHints
	expr                 Expr
	exprs                Exprs
	boolVal              BoolVal
	sqlVal               *SQLVal
	colTuple             ColTuple
	values               Values
	valTuple             ValTuple
	subquery             *Subquery
	execsubquery         *ExecSubquery
	whens                []*When
	when                 *When
	orderBy              OrderBy
	order                *Order
	limit                *Limit
	updateExprs          UpdateExprs
	setExprs             SetExprs
	updateExpr           *UpdateExpr
	setExpr              *SetExpr
	characteristic       Characteristic
	characteristics      []Characteristic
	colIdent             ColIdent
	tableIdent           TableIdent
	convertType          *ConvertType
	aliasedTableName     *AliasedTableExpr
	TableSpec            *TableSpec
	columnType           ColumnType
	colKeyOpt            ColumnKeyOption
	optVal               Expr
	LengthScaleOption    LengthScaleOption
	columnDefinition     *ColumnDefinition
	indexDefinition      *IndexDefinition
	indexInfo            *IndexInfo
	indexOption          *IndexOption
	indexOptions         []*IndexOption
	indexColumn          *IndexColumn
	indexColumns         []*IndexColumn
	constraintDefinition *ConstraintDefinition
	constraintInfo       ConstraintInfo
	ReferenceAction      ReferenceAction
	partDefs             []*PartitionDefinition
	partDef              *PartitionDefinition
	partSpec             *PartitionSpec
	vindexParam          VindexParam
	vindexParams         []VindexParam
	showFilter           *ShowFilter
	optLike              *OptLike
	execVarDef           ExecVarDef
	execVarDefOpt        *ExecVarDef
	execVarDefs          []ExecVarDef
	listArgsConcat       []ListArg
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const AS = 57364
const EXISTS = 57365
const ASC = 57366
const DESC = 57367
const INTO = 57368
const DUPLICATE = 57369
const KEY = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const DISTINCTROW = 57377
const VALUES = 57378
const LAST_INSERT_ID = 57379
const NEXT = 57380
const VALUE = 57381
const SHARE = 57382
const MODE = 57383
const SQL_NO_CACHE = 57384
const SQL_CACHE = 57385
const SQL_CALC_FOUND_ROWS = 57386
const JOIN = 57387
const STRAIGHT_JOIN = 57388
const LEFT = 57389
const RIGHT = 57390
const INNER = 57391
const OUTER = 57392
const CROSS = 57393
const NATURAL = 57394
const USE = 57395
const FORCE = 57396
const ON = 57397
const USING = 57398
const ID = 57399
const AT_ID = 57400
const AT_AT_ID = 57401
const HEX = 57402
const STRING = 57403
const INTEGRAL = 57404
const FLOAT = 57405
const HEXNUM = 57406
const VALUE_ARG = 57407
const LIST_ARG = 57408
const COMMENT = 57409
const COMMENT_KEYWORD = 57410
const BIT_LITERAL = 57411
const NULL = 57412
const TRUE = 57413
const FALSE = 57414
const OFF = 57415
const OR = 57416
const XOR = 57417
const AND = 57418
const NOT = 57419
const BETWEEN = 57420
const CASE = 57421
const WHEN = 57422
const THEN = 57423
const ELSE = 57424
const END = 57425
const LE = 57426
const GE = 57427
const NE = 57428
const NULL_SAFE_EQUAL = 57429
const IS = 57430
const LIKE = 57431
const REGEXP = 57432
const IN = 57433
const SHIFT_LEFT = 57434
const SHIFT_RIGHT = 57435
const DIV = 57436
const MOD = 57437
const UNARY = 57438
const COLLATE = 57439
const BINARY = 57440
const UNDERSCORE_BINARY = 57441
const UNDERSCORE_UTF8MB4 = 57442
const UNDERSCORE_UTF8 = 57443
const UNDERSCORE_LATIN1 = 57444
const INTERVAL = 57445
const JSON_EXTRACT_OP = 57446
const JSON_UNQUOTE_EXTRACT_OP = 57447
const CREATE = 57448
const ALTER = 57449
const DROP = 57450
const RENAME = 57451
const ANALYZE = 57452
const ADD = 57453
const FLUSH = 57454
const SCHEMA = 57455
const TABLE = 57456
const INDEX = 57457
const VIEW = 57458
const TO = 57459
const IGNORE = 57460
const IF = 57461
const UNIQUE = 57462
const PRIMARY = 57463
const COLUMN = 57464
const SPATIAL = 57465
const FULLTEXT = 57466
const KEY_BLOCK_SIZE = 57467
const CHECK = 57468
const INDEXES = 57469
const ACTION = 57470
const CASCADE = 57471
const CONSTRAINT = 57472
const FOREIGN = 57473
const NO = 57474
const REFERENCES = 57475
const RESTRICT = 57476
const SHOW = 57477
const DESCRIBE = 57478
const EXPLAIN = 57479
const DATE = 57480
const ESCAPE = 57481
const REPAIR = 57482
const OPTIMIZE = 57483
const TRUNCATE = 57484
const MAXVALUE = 57485
const PARTITION = 57486
const REORGANIZE = 57487
const LESS = 57488
const THAN = 57489
const PROCEDURE = 57490
const TRIGGER = 57491
const VINDEX = 57492
const VINDEXES = 57493
const STATUS = 57494
const VARIABLES = 57495
const WARNINGS = 57496
const SEQUENCE = 57497
const BEGIN = 57498
const START = 57499
const TRANSACTION = 57500
const COMMIT = 57501
const ROLLBACK = 57502
const SAVEPOINT = 57503
const RELEASE = 57504
const WORK = 57505
const BIT = 57506
const TINYINT = 57507
const SMALLINT = 57508
const MEDIUMINT = 57509
const INT = 57510
const INTEGER = 57511
const BIGINT = 57512
const INTNUM = 57513
const REAL = 57514
const DOUBLE = 57515
const FLOAT_TYPE = 57516
const DECIMAL = 57517
const NUMERIC = 57518
const TIME = 57519
const TIMESTAMP = 57520
const DATETIME = 57521
const YEAR = 57522
const CHAR = 57523
const VARCHAR = 57524
const BOOL = 57525
const CHARACTER = 57526
const VARBINARY = 57527
const NCHAR = 57528
const TEXT = 57529
const TINYTEXT = 57530
const MEDIUMTEXT = 57531
const LONGTEXT = 57532
const BLOB = 57533
const TINYBLOB = 57534
const MEDIUMBLOB = 57535
const LONGBLOB = 57536
const JSON = 57537
const ENUM = 57538
const GEOMETRY = 57539
const POINT = 57540
const LINESTRING = 57541
const POLYGON = 57542
const GEOMETRYCOLLECTION = 57543
const MULTIPOINT = 57544
const MULTILINESTRING = 57545
const MULTIPOLYGON = 57546
const NULLX = 57547
const AUTO_INCREMENT = 57548
const APPROXNUM = 57549
const SIGNED = 57550
const UNSIGNED = 57551
const ZEROFILL = 57552
const COLLATION = 57553
const DATABASES = 57554
const TABLES = 57555
const VITESS_METADATA = 57556
const VSCHEMA = 57557
const FULL = 57558
const PROCESSLIST = 57559
const COLUMNS = 57560
const FIELDS = 57561
const ENGINES = 57562
const PLUGINS = 57563
const EXTENDED = 57564
const NAMES = 57565
const CHARSET = 57566
const GLOBAL = 57567
const SESSION = 57568
const ISOLATION = 57569
const LEVEL = 57570
const READ = 57571
const WRITE = 57572
const ONLY = 57573
const REPEATABLE = 57574
const COMMITTED = 57575
const UNCOMMITTED = 57576
const SERIALIZABLE = 57577
const CURRENT_TIMESTAMP = 57578
const DATABASE = 57579
const CURRENT_DATE = 57580
const CURRENT_TIME = 57581
const LOCALTIME = 57582
const LOCALTIMESTAMP = 57583
const UTC_DATE = 57584
const UTC_TIME = 57585
const UTC_TIMESTAMP = 57586
const REPLACE = 57587
const CONVERT = 57588
const CAST = 57589
const SUBSTR = 57590
const SUBSTRING = 57591
const GROUP_CONCAT = 57592
const SEPARATOR = 57593
const TIMESTAMPADD = 57594
const TIMESTAMPDIFF = 57595
const MATCH = 57596
const AGAINST = 57597
const BOOLEAN = 57598
const LANGUAGE = 57599
const WITH = 57600
const QUERY = 57601
const EXPANSION = 57602
const UNUSED = 57603
const ARRAY = 57604
const CUME_DIST = 57605
const DESCRIPTION = 57606
const DENSE_RANK = 57607
const EMPTY = 57608
const EXCEPT = 57609
const FIRST_VALUE = 57610
const GROUPING = 57611
const GROUPS = 57612
const JSON_TABLE = 57613
const LAG = 57614
const LAST_VALUE = 57615
const LATERAL = 57616
const LEAD = 57617
const MEMBER = 57618
const NTH_VALUE = 57619
const NTILE = 57620
const OF = 57621
const OVER = 57622
const PERCENT_RANK = 57623
const RANK = 57624
const RECURSIVE = 57625
const ROW_NUMBER = 57626
const SYSTEM = 57627
const WINDOW = 57628
const ACTIVE = 57629
const ADMIN = 57630
const BUCKETS = 57631
const CLONE = 57632
const COMPONENT = 57633
const DEFINITION = 57634
const ENFORCED = 57635
const EXCLUDE = 57636
const FOLLOWING = 57637
const GEOMCOLLECTION = 57638
const GET_MASTER_PUBLIC_KEY = 57639
const HISTOGRAM = 57640
const HISTORY = 57641
const INACTIVE = 57642
const INVISIBLE = 57643
const LOCKED = 57644
const MASTER_COMPRESSION_ALGORITHMS = 57645
const MASTER_PUBLIC_KEY_PATH = 57646
const MASTER_TLS_CIPHERSUITES = 57647
const MASTER_ZSTD_COMPRESSION_LEVEL = 57648
const NESTED = 57649
const NETWORK_NAMESPACE = 57650
const NOWAIT = 57651
const NULLS = 57652
const OJ = 57653
const OLD = 57654
const OPTIONAL = 57655
const ORDINALITY = 57656
const ORGANIZATION = 57657
const OTHERS = 57658
const PATH = 57659
const PERSIST = 57660
const PERSIST_ONLY = 57661
const PRECEDING = 57662
const PRIVILEGE_CHECKS_USER = 57663
const PROCESS = 57664
const RANDOM = 57665
const REFERENCE = 57666
const REQUIRE_ROW_FORMAT = 57667
const RESOURCE = 57668
const RESPECT = 57669
const RESTART = 57670
const RETAIN = 57671
const REUSE = 57672
const ROLE = 57673
const SECONDARY = 57674
const SECONDARY_ENGINE = 57675
const SECONDARY_LOAD = 57676
const SECONDARY_UNLOAD = 57677
const SKIP = 57678
const SRID = 57679
const THREAD_PRIORITY = 57680
const TIES = 57681
const UNBOUNDED = 57682
const VCPU = 57683
const VISIBLE = 57684
const FORMAT = 57685
const TREE = 57686
const VITESS = 57687
const TRADITIONAL = 57688
const AUTH = 57689
const INTERACTIVE = 57690
const LOGIN = 57691
const REVOKE = 57692
const SA = 57693
const SERVICEACCOUNT = 57694
const SLEEP = 57695
const MATERIALIZED = 57696
const TEMP = 57697
const TEMPORARY = 57698
const REFRESH = 57699
const JSON_ARRAY_ELEMENTS_TEXT = 57700
const JSON_EACH = 57701
const UNNEST = 57702
const REGISTRY = 57703
const PULL = 57704
const LIST = 57705
const EXEC = 57706
const PURGE = 57707
const NATIVEQUERY = 57708
const STACKQL = 57709
const RETURNING = 57710

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"AUTH",
	"INTERACTIVE",
	"LOGIN",
	"REVOKE",
	"SA",
	"SERVICEACCOUNT",
	"SLEEP",
	"MATERIALIZED",
	"TEMP",
	"TEMPORARY",
	"REFRESH",
	"JSON_ARRAY_ELEMENTS_TEXT",
	"JSON_EACH",
	"UNNEST",
	"REGISTRY",
	"PULL",
	"LIST",
	"EXEC",
	"PURGE",
	"NATIVEQUERY",
	"STACKQL",
	"RETURNING",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	364, 98,
	378, 98,
	-2, 35,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 49,
	169, 358,
	170, 358,
	230, 346,
	234, 346,
	235, 346,
	236, 346,
	-2, 344,
	-1, 54,
	134, 368,
	-2, 366,
	-1, 57,
	6, 374,
	8, 374,
	9, 374,
	10, 374,
	57, 374,
	262, 374,
	-2, 346,
	-1, 85,
	38, 404,
	-2, 412,
	-1, 106,
	133, 87,
	-2, 969,
	-1, 107,
	132, 1049,
	-2, 85,
	-1, 108,
	132, 1050,
	-2, 86,
	-1, 367,
	80, 918,
	82, 918,
	88, 918,
	89, 918,
	90, 918,
	91, 918,
	92, 918,
	93, 918,
	94, 918,
	96, 918,
	97, 918,
	98, 918,
	99, 918,
	100, 918,
	101, 918,
	102, 918,
	103, 918,
	104, 918,
	105, 918,
	106, 918,
	107, 918,
	108, 918,
	109, 918,
	110, 918,
	113, 918,
	120, 918,
	121, 918,
	122, 918,
	-2, 506,
	-1, 427,
	120, 758,
	-2, 754,
	-1, 428,
	120, 759,
	-2, 755,
	-1, 448,
	38, 405,
	-2, 417,
	-1, 449,
	38, 406,
	-2, 418,
	-1, 472,
	88, 1037,
	-2, 83,
	-1, 473,
	88, 939,
	-2, 84,
	-1, 478,
	88, 906,
	134, 906,
	-2, 720,
	-1, 480,
	88, 977,
	134, 977,
	-2, 722,
	-1, 798,
	1, 426,
	5, 426,
	11, 426,
	12, 426,
	13, 426,
	14, 426,
	15, 426,
	17, 426,
	19, 426,
	31, 426,
	55, 426,
	58, 426,
	59, 426,
	268, 426,
	385, 426,
	386, 426,
	-2, 503,
	-1, 819,
	57, 579,
	-2, 951,
	-1, 820,
	57, 580,
	-2, 952,
	-1, 821,
	56, 65,
	58, 65,
	-2, 69,
	-1, 1009,
	120, 761,
	-2, 757,
}

const yyPrivate = 57344

const yyLast = 19782

var yyAct = [...]int{
	427, 1750, 1740, 1706, 1406, 1536, 1131, 1655, 371, 1308,
	1330, 735, 1618, 1508, 442, 635, 1473, 1474, 400, 1099,
	1127, 646, 1468, 82, 1309, 386, 782, 667, 925, 1160,
	1130, 1174, 1140, 369, 1069, 80, 1479, 1430, 1006, 1485,
	357, 1050, 366, 1547, 109, 1236, 1297, 947, 318, 996,
	1383, 318, 1372, 1003, 1144, 834, 109, 1100, 1095, 450,
	817, 809, 787, 1030, 973, 34, 436, 792, 1084, 805,
	373, 1170, 471, 601, 800, 362, 466, 938, 833, 810,
	463, 608, 623, 99, 823, 686, 748, 79, 1472, 773,
	774, 318, 109, 325, 1077, 602, 318, 1470, 318, 749,
	358, 429, 328, 361, 313, 308, 309, 310, 316, 898,
	335, 435, 958, 474, 7, 430, 771, 772, 84, 3,
	445, 85, 6, 1275, 356, 477, 1277, 1276, 5, 1197,
	311, 331, 412, 1743, 418, 419, 416, 417, 415, 414,
	413, 1727, 1738, 1196, 333, 1714, 437, 1735, 420, 421,
	340, 465, 1537, 1713, 342, 456, 603, 1726, 605, 87,
	88, 89, 90, 91, 1448, 1570, 606, 304, 1503, 1504,
	302, 835, 306, 836, 111, 112, 113, 1119, 1120, 1502,
	326, 1118, 954, 610, 611, 1195, 669, 431, 343, 433,
	434, 360, 666, 359, 1681, 696, 695, 705, 706, 698,
	699, 700, 701, 702, 703, 704, 697, 337, 329, 707,
	338, 339, 346, 111, 112, 113, 330, 332, 343, 1363,
	327, 345, 344, 36, 1153, 71, 72, 40, 312, 1344,
	346, 1408, 1343, 1607, 1161, 1345, 1561, 1559, 1192, 1189,
	1190, 661, 1188, 350, 956, 662, 659, 660, 352, 111,
	112, 113, 348, 644, 665, 913, 654, 655, 664, 912,
	1410, 959, 960, 961, 910, 1700, 1737, 1734, 1707, 305,
	1405, 1078, 1758, 1145, 70, 1199, 1202, 1663, 1154, 1331,
	1333, 624, 609, 1754, 641, 837, 643, 1409, 1181, 306,
	1147, 303, 1411, 1402, 917, 911, 914, 1656, 670, 1404,
	1431, 778, 1147, 318, 615, 616, 627, 607, 318, 1495,
	625, 1494, 1658, 1493, 604, 1194, 318, 1209, 640, 642,
	1208, 613, 111, 112, 113, 318, 633, 612, 1688, 639,
	109, 838, 648, 1393, 109, 324, 109, 1193, 307, 1255,
	620, 1433, 668, 341, 1587, 314, 1252, 314, 719, 720,
	1544, 1340, 1302, 109, 1265, 1244, 1215, 355, 829, 804,
	733, 1332, 631, 614, 1128, 1389, 1390, 1391, 622, 697,
	707, 1682, 707, 1114, 1712, 1436, 630, 1198, 1435, 1057,
	1440, 637, 1434, 1657, 1432, 632, 1664, 1662, 948, 1438,
	1161, 939, 1200, 626, 1146, 628, 629, 94, 1437, 1752,
	679, 680, 1753, 1403, 1751, 1401, 1146, 638, 617, 952,
	618, 1439, 1441, 619, 111, 112, 113, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 1472, 111, 112,
	113, 1698, 318, 1672, 318, 1483, 95, 1392, 1458, 717,
	1285, 678, 1397, 1394, 1385, 1395, 1388, 1450, 1384, 719,
	720, 1031, 1386, 1387, 687, 1147, 719, 720, 902, 109,
	779, 318, 318, 318, 600, 636, 1396, 736, 1521, 677,
	109, 1361, 1031, 674, 1262, 949, 109, 675, 940, 73,
	685, 980, 1702, 676, 796, 672, 791, 111, 112, 113,
	1251, 474, 775, 971, 776, 978, 979, 977, 939, 637,
	751, 753, 755, 757, 759, 761, 762, 1718, 1150, 1613,
	793, 437, 789, 752, 754, 1151, 758, 760, 1612, 763,
	808, 807, 1376, 821, 696, 695, 705, 706, 698, 699,
	700, 701, 702, 703, 704, 697, 1375, 687, 707, 1364,
	432, 649, 832, 822, 798, 683, 684, 682, 1759, 827,
	700, 701, 702, 703, 704, 697, 1720, 780, 707, 1146,
	687, 781, 687, 685, 1143, 1141, 651, 1142, 683, 684,
	682, 684, 682, 1699, 1139, 1145, 1452, 301, 1634, 70,
	687, 1237, 1610, 636, 1574, 940, 685, 653, 685, 656,
	682, 976, 1760, 111, 112, 113, 1456, 1250, 1059, 1249,
	1373, 318, 1229, 1230, 1231, 896, 685, 1223, 318, 901,
	687, 903, 318, 930, 318, 109, 109, 109, 683, 684,
	682, 318, 777, 1052, 318, 1062, 1063, 318, 1012, 923,
	924, 1280, 318, 1669, 109, 1284, 685, 687, 1058, 109,
	109, 109, 318, 109, 109, 683, 684, 682, 1668, 687,
	929, 111, 112, 113, 1517, 109, 109, 683, 684, 682,
	81, 846, 1148, 685, 942, 650, 460, 461, 900, 1071,
	687, 1482, 904, 318, 906, 685, 70, 652, 683, 684,
	682, 915, 1624, 1736, 465, 1722, 1012, 921, 1624, 1710,
	899, 967, 969, 970, 905, 1583, 685, 1728, 968, 111,
	112, 113, 935, 998, 918, 1624, 1012, 681, 997, 974,
	922, 111, 112, 113, 1012, 1347, 1482, 999, 698, 699,
	700, 701, 702, 703, 704, 697, 941, 1671, 707, 1624,
	1690, 109, 972, 957, 1070, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	1019, 1022, 1525, 1000, 1001, 1007, 1032, 927, 1624, 1660,
	1014, 975, 1008, 1624, 1623, 109, 109, 1603, 1602, 1080,
	1010, 943, 668, 668, 1046, 1047, 1015, 1016, 1081, 318,
	1021, 1024, 1025, 1620, 736, 111, 112, 113, 1108, 1279,
	824, 109, 1298, 1036, 1054, 1589, 1012, 1081, 318, 1044,
	1045, 83, 109, 1586, 1012, 1039, 36, 318, 1042, 1043,
	111, 112, 113, 1064, 1048, 825, 318, 318, 318, 1527,
	1526, 1040, 1041, 1348, 318, 318, 1007, 825, 318, 318,
	318, 109, 1071, 1076, 1523, 1524, 1641, 1104, 1081, 1053,
	1523, 1522, 1070, 1012, 1070, 109, 602, 1081, 1012, 681,
	1012, 1117, 474, 1072, 845, 844, 1268, 70, 1073, 1009,
	826, 1267, 828, 824, 1060, 916, 1132, 1079, 907, 908,
	909, 830, 826, 36, 824, 439, 1074, 336, 1407, 1070,
	1155, 1594, 1109, 1175, 1513, 1110, 1111, 928, 1418, 1162,
	1163, 1164, 932, 933, 934, 36, 936, 937, 1351, 318,
	1486, 1487, 109, 1115, 109, 1112, 318, 1201, 944, 945,
	1116, 318, 318, 318, 318, 318, 1107, 318, 318, 1135,
	1171, 318, 109, 318, 70, 1304, 70, 1176, 1166, 1165,
	1009, 1621, 1178, 1745, 1097, 353, 1741, 1515, 1489, 318,
	1492, 1377, 318, 1573, 318, 953, 70, 318, 920, 318,
	318, 1491, 1320, 1317, 318, 927, 109, 1321, 109, 1180,
	1316, 1732, 1318, 1220, 1172, 1173, 1186, 1319, 1725, 1460,
	1287, 1203, 1204, 1205, 1206, 1207, 790, 1210, 1211, 1730,
	1296, 1212, 1295, 1214, 696, 695, 705, 706, 698, 699,
	700, 701, 702, 703, 704, 697, 974, 1027, 707, 1216,
	1368, 843, 1217, 451, 807, 634, 1322, 1219, 1090, 1091,
	1360, 1028, 428, 1218, 1224, 783, 1179, 452, 1704, 1703,
	1639, 1233, 1234, 1235, 794, 795, 454, 784, 453, 1246,
	389, 388, 391, 392, 393, 394, 1358, 1353, 1581, 390,
	395, 1616, 1232, 1241, 1242, 1184, 919, 1278, 975, 1530,
	1379, 1086, 1089, 1090, 1091, 1087, 110, 1088, 1092, 1182,
	319, 1486, 1487, 319, 1094, 1259, 897, 1294, 110, 440,
	441, 1012, 318, 83, 443, 1293, 437, 1245, 1579, 1291,
	444, 1286, 318, 318, 318, 318, 318, 1578, 1464, 1310,
	1298, 663, 1256, 1261, 318, 1747, 1746, 1747, 1253, 318,
	946, 797, 318, 319, 110, 1686, 1608, 1056, 319, 318,
	319, 696, 695, 705, 706, 698, 699, 700, 701, 702,
	703, 704, 697, 1290, 439, 707, 81, 1096, 29, 1346,
	1300, 109, 1301, 1156, 1157, 1158, 1159, 1349, 1299, 86,
	1352, 1035, 78, 1311, 668, 668, 1314, 1, 1049, 1167,
	1168, 1169, 1132, 1281, 1336, 1183, 1338, 1185, 1339, 1329,
	1335, 1323, 1312, 1313, 1282, 1315, 1739, 1337, 1283, 1051,
	1538, 1356, 1357, 1341, 1617, 1213, 1191, 1705, 1654, 109,
	1421, 1367, 318, 1369, 1370, 1371, 1365, 1366, 1086, 1089,
	1090, 1091, 1087, 1507, 1088, 1092, 1305, 1354, 1355, 1138,
	696, 695, 705, 706, 698, 699, 700, 701, 702, 703,
	704, 697, 1129, 109, 707, 109, 318, 1328, 93, 1374,
	599, 92, 1697, 647, 1137, 451, 1136, 1661, 1382, 1606,
	1149, 1362, 1152, 1416, 1514, 1359, 1701, 851, 849, 452,
	1398, 850, 1380, 848, 1414, 109, 448, 449, 454, 853,
	453, 997, 695, 705, 706, 698, 699, 700, 701, 702,
	703, 704, 697, 852, 1415, 707, 1427, 1419, 847, 1428,
	334, 469, 955, 1429, 349, 1093, 839, 1177, 799, 1420,
	1422, 1423, 96, 1449, 1400, 1399, 1187, 1453, 951, 1443,
	657, 658, 715, 318, 1008, 1444, 1445, 1426, 1446, 1447,
	1442, 1381, 1292, 109, 103, 1342, 475, 109, 109, 468,
	1454, 1455, 1467, 1469, 1417, 319, 1477, 1061, 1461, 1459,
	319, 786, 1457, 1475, 1427, 1577, 1463, 1260, 319, 745,
	1029, 814, 372, 966, 816, 109, 387, 319, 384, 385,
	1065, 927, 110, 1481, 1303, 689, 110, 370, 110, 109,
	364, 109, 109, 1462, 1490, 668, 668, 1506, 813, 1085,
	1498, 1500, 1501, 1083, 445, 110, 1082, 464, 1488, 1520,
	1132, 1496, 1132, 1484, 812, 811, 447, 1471, 318, 1505,
	818, 1274, 1511, 1512, 1499, 1510, 1518, 1519, 1569, 1680,
	446, 1009, 1026, 57, 1226, 354, 39, 38, 455, 64,
	318, 32, 31, 1516, 28, 30, 109, 1572, 1539, 109,
	109, 109, 318, 27, 22, 21, 20, 19, 18, 109,
	24, 17, 16, 15, 1531, 621, 42, 33, 26, 25,
	14, 1545, 13, 1546, 12, 1549, 11, 10, 1528, 1532,
	9, 1534, 8, 1552, 319, 4, 319, 673, 696, 695,
	705, 706, 698, 699, 700, 701, 702, 703, 704, 697,
	1533, 23, 707, 734, 1550, 2, 1412, 1557, 1413, 0,
	0, 110, 1543, 319, 319, 319, 0, 0, 0, 0,
	1567, 0, 110, 0, 0, 0, 0, 0, 110, 0,
	1580, 1310, 1575, 0, 0, 0, 0, 0, 1529, 0,
	0, 0, 0, 0, 0, 0, 109, 1591, 0, 0,
	0, 1582, 1349, 1600, 109, 0, 0, 0, 0, 0,
	0, 0, 1601, 0, 0, 0, 0, 1132, 1590, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 1609, 0, 1611, 0, 1627, 1605, 0, 1619,
	696, 695, 705, 706, 698, 699, 700, 701, 702, 703,
	704, 697, 0, 1622, 707, 0, 0, 0, 0, 1625,
	0, 0, 0, 0, 1633, 1626, 0, 109, 109, 0,
	109, 1638, 0, 0, 0, 109, 0, 109, 109, 109,
	318, 1640, 1475, 0, 109, 0, 0, 1628, 1629, 1630,
	1631, 1632, 0, 319, 1646, 1635, 1636, 1659, 0, 1652,
	319, 109, 318, 1653, 319, 109, 319, 110, 110, 110,
	1666, 0, 1667, 319, 1665, 0, 319, 0, 1647, 319,
	1648, 1650, 1651, 0, 319, 0, 110, 401, 35, 1615,
	0, 110, 110, 110, 319, 110, 110, 1696, 1687, 0,
	1475, 1689, 1695, 1694, 1673, 0, 0, 110, 110, 0,
	927, 0, 109, 109, 0, 0, 0, 0, 0, 1709,
	0, 0, 1674, 35, 1708, 319, 0, 0, 0, 109,
	0, 0, 0, 1619, 1132, 1310, 1715, 0, 0, 0,
	0, 318, 0, 0, 1642, 0, 0, 0, 109, 0,
	1554, 1555, 1717, 1556, 0, 1724, 0, 1558, 0, 1560,
	0, 0, 0, 0, 0, 0, 1729, 0, 438, 109,
	1731, 0, 705, 706, 698, 699, 700, 701, 702, 703,
	704, 697, 1744, 110, 707, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1719, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1733, 0, 0, 0, 0, 110, 110, 0,
	0, 0, 1614, 0, 0, 1748, 0, 0, 1604, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 0, 0, 0, 0, 0, 0,
	319, 0, 0, 0, 110, 0, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 319,
	319, 0, 0, 0, 0, 0, 319, 319, 0, 0,
	319, 319, 319, 110, 0, 0, 0, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 1566, 110, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	691, 0, 694, 0, 0, 0, 1011, 1013, 708, 709,
	710, 711, 712, 713, 714, 0, 692, 693, 690, 696,
	695, 705, 706, 698, 699, 700, 701, 702, 703, 704,
	697, 0, 0, 707, 1565, 0, 0, 0, 0, 0,
	0, 319, 0, 363, 110, 0, 110, 0, 319, 0,
	0, 0, 1055, 319, 319, 319, 319, 319, 0, 319,
	319, 0, 0, 319, 110, 319, 696, 695, 705, 706,
	698, 699, 700, 701, 702, 703, 704, 697, 0, 0,
	707, 319, 0, 0, 319, 0, 319, 0, 0, 319,
	0, 319, 319, 0, 0, 0, 319, 0, 110, 0,
	110, 0, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 645, 0, 645, 696, 695, 705, 706, 698, 699,
	700, 701, 702, 703, 704, 697, 0, 1238, 707, 0,
	0, 0, 35, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 716, 718, 696, 695, 705,
	706, 698, 699, 700, 701, 702, 703, 704, 697, 0,
	0, 707, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 732, 0, 1564, 0,
	737, 738, 739, 740, 741, 742, 743, 744, 0, 747,
	750, 750, 750, 756, 750, 750, 756, 750, 764, 765,
	766, 767, 768, 769, 770, 0, 0, 0, 0, 105,
	0, 0, 0, 0, 319, 0, 35, 0, 0, 0,
	0, 351, 0, 438, 319, 319, 319, 319, 319, 0,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 815,
	0, 319, 0, 0, 319, 0, 0, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 476, 696, 695,
	705, 706, 698, 699, 700, 701, 702, 703, 704, 697,
	0, 1239, 707, 110, 0, 1240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1247, 1248, 0,
	0, 0, 0, 1254, 0, 0, 1257, 1258, 0, 0,
	0, 0, 0, 0, 1264, 0, 0, 0, 1266, 0,
	0, 1269, 1270, 1271, 1272, 1273, 0, 0, 0, 0,
	0, 110, 0, 0, 319, 696, 695, 705, 706, 698,
	699, 700, 701, 702, 703, 704, 697, 0, 0, 707,
	0, 0, 0, 0, 0, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 110, 0, 110, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 1325, 1326, 1327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 110, 0, 0,
	746, 0, 645, 645, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 645, 645, 645, 0,
	645, 645, 0, 785, 788, 0, 0, 0, 0, 0,
	0, 0, 645, 645, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 110, 0, 0, 0, 110,
	110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 110, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 0, 110, 110, 476, 0, 0, 0, 476,
	0, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1424, 1425, 0, 0, 0, 671, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 110, 0,
	0, 110, 110, 110, 319, 0, 0, 0, 0, 0,
	0, 110, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1098, 0, 0, 1106, 0, 0, 0,
	1327, 815, 0, 0, 0, 815, 0, 1497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 931, 0, 0,
	0, 0, 0, 0, 802, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 476, 0, 0, 0, 0,
	0, 840, 0, 950, 0, 0, 0, 0, 110, 0,
	0, 0, 0, 0, 0, 0, 110, 0, 0, 0,
	0, 962, 963, 964, 965, 0, 0, 0, 0, 0,
	0, 110, 0, 0, 0, 35, 0, 0, 0, 645,
	110, 645, 0, 0, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1551, 645,
	0, 0, 1553, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1562, 1563, 0, 0, 0, 1017,
	1018, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	110, 0, 110, 1576, 0, 0, 0, 110, 0, 110,
	110, 110, 319, 0, 0, 0, 110, 0, 1584, 1585,
	0, 1588, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 319, 0, 0, 110, 1599, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	476, 476, 476, 0, 0, 1243, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	0, 0, 0, 0, 476, 476, 476, 0, 476, 476,
	0, 0, 0, 0, 110, 110, 0, 1123, 1126, 0,
	476, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 815,
	110, 0, 0, 0, 0, 1306, 1307, 0, 0, 815,
	815, 815, 815, 815, 0, 0, 0, 0, 1649, 0,
	0, 110, 0, 0, 0, 0, 1098, 0, 0, 0,
	0, 0, 0, 1334, 0, 0, 815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1002, 399, 0, 476,
	1676, 1677, 1678, 1679, 0, 1683, 0, 1684, 1685, 0,
	0, 0, 0, 1033, 0, 0, 0, 0, 0, 0,
	1691, 0, 1692, 1693, 0, 36, 37, 71, 72, 40,
	1037, 1038, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 76, 317, 0, 0, 347, 41,
	60, 61, 1711, 63, 0, 0, 1066, 0, 0, 0,
	35, 0, 0, 0, 0, 0, 0, 802, 0, 0,
	476, 0, 50, 0, 0, 0, 70, 1721, 0, 0,
	0, 0, 0, 0, 868, 459, 0, 0, 467, 0,
	645, 0, 645, 317, 0, 317, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	476, 1263, 0, 0, 0, 0, 0, 0, 0, 0,
	1756, 1757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1288, 1289,
	788, 0, 43, 44, 46, 45, 48, 0, 62, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 476, 856, 476,
	0, 49, 75, 74, 0, 0, 58, 59, 47, 0,
	0, 0, 1476, 0, 35, 0, 0, 476, 0, 0,
	0, 0, 51, 52, 0, 53, 54, 55, 56, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1225, 0, 1227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 882, 885, 886, 887, 888,
	889, 890, 0, 891, 892, 893, 894, 895, 870, 871,
	872, 873, 854, 855, 883, 0, 857, 35, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 874, 875,
	876, 877, 878, 879, 880, 881, 0, 0, 0, 0,
	0, 73, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 1568, 884, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1451, 0, 0, 0, 1033, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1596, 1597, 1598, 0, 0, 0, 0, 1465, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 66,
	0, 0, 0, 69, 0, 0, 476, 0, 0, 0,
	65, 67, 68, 77, 0, 0, 645, 0, 35, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1378, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 317,
	317, 1476, 0, 35, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 476, 0,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 1476,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 1571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 0, 0, 1592, 0, 0, 1593, 0, 476, 1595,
	0, 0, 1478, 1480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	1480, 0, 0, 0, 0, 317, 0, 0, 0, 317,
	0, 317, 0, 0, 476, 1742, 476, 1509, 317, 0,
	0, 317, 0, 0, 317, 0, 0, 0, 0, 926,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1637, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 1535, 0, 0, 1540, 1541, 1542, 0, 0, 0,
	0, 0, 0, 0, 1548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	459, 926, 0, 0, 0, 459, 459, 0, 0, 459,
	459, 459, 0, 0, 0, 1034, 0, 0, 1033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 459, 459, 459, 459, 459, 0,
	0, 476, 0, 0, 0, 0, 317, 0, 0, 1548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 476, 317, 0, 0, 0, 0,
	0, 0, 926, 476, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 1102, 1102, 0, 0, 0, 0,
	0, 317, 317, 0, 0, 317, 1113, 926, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1643, 1644, 0, 1645, 0, 0, 0, 0,
	1548, 0, 1548, 1548, 1548, 0, 0, 0, 0, 1509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1548, 0, 0, 0,
	1675, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 317, 317,
	317, 317, 317, 0, 317, 317, 0, 0, 317, 0,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 476, 476, 317,
	0, 317, 0, 0, 317, 0, 1221, 1222, 0, 0,
	0, 317, 1033, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1548, 0, 0, 0, 0, 0,
	0, 0, 459, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 459, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 1034, 317,
	317, 317, 317, 317, 0, 0, 0, 0, 0, 0,
	0, 1324, 0, 0, 0, 0, 317, 0, 0, 1102,
	0, 0, 0, 0, 459, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 926, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 926, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 926, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 585, 573, 0, 531, 588, 503, 521, 596,
	522, 525, 561, 489, 543, 208, 519, 0, 507, 484,
	515, 485, 505, 533, 145, 176, 141, 575, 546, 587,
	178, 0, 508, 594, 180, 552, 0, 261, 195, 0,
	0, 0, 535, 577, 541, 570, 530, 562, 494, 551,
	589, 520, 559, 590, 0, 0, 0, 111, 112, 113,
	0, 1133, 1134, 0, 1034, 0, 0, 0, 134, 0,
	556, 584, 517, 558, 560, 598, 483, 553, 317, 487,
	490, 595, 580, 511, 512, 1350, 0, 0, 0, 0,
	0, 0, 534, 542, 567, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 0, 550, 0, 0, 0,
	491, 488, 0, 0, 0, 0, 532, 0, 0, 0,
	493, 0, 510, 568, 0, 481, 154, 572, 579, 529,
	323, 583, 527, 526, 586, 227, 0, 266, 157, 177,
	130, 171, 115, 126, 0, 156, 205, 236, 241, 576,
	506, 516, 138, 513, 239, 215, 282, 549, 217, 238,
	181, 272, 228, 281, 291, 292, 269, 289, 296, 257,
	119, 268, 280, 135, 251, 0, 0, 0, 121, 278,
	264, 193, 167, 168, 120, 0, 234, 144, 152, 140,
	207, 275, 276, 139, 299, 127, 288, 123, 128, 287,
	201, 271, 279, 194, 186, 122, 277, 192, 185, 173,
	148, 159, 225, 183, 226, 160, 197, 196, 198, 0,
	486, 0, 262, 285, 300, 132, 502, 270, 294, 295,
	0, 229, 133, 153, 147, 224, 151, 199, 129, 162,
	259, 172, 182, 233, 298, 214, 240, 136, 284, 260,
	498, 501, 496, 497, 544, 545, 591, 592, 593, 569,
	492, 0, 499, 500, 0, 574, 581, 582, 548, 114,
	124, 179, 297, 231, 150, 286, 482, 495, 143, 504,
	0, 0, 518, 523, 524, 536, 537, 538, 539, 540,
	547, 554, 555, 557, 563, 564, 565, 566, 571, 578,
	597, 116, 117, 125, 131, 137, 142, 146, 149, 155,
	158, 161, 163, 164, 165, 170, 184, 188, 189, 190,
	191, 202, 203, 204, 206, 209, 210, 211, 212, 213,
	216, 218, 219, 220, 221, 222, 223, 232, 235, 242,
	243, 244, 245, 246, 248, 250, 253, 254, 255, 256,
	263, 267, 273, 274, 283, 290, 293, 0, 0, 0,
	0, 118, 169, 187, 249, 252, 258, 265, 320, 321,
	322, 237, 174, 175, 0, 0, 0, 0, 514, 230,
	200, 166, 247, 585, 573, 0, 531, 588, 503, 521,
	596, 522, 525, 561, 489, 543, 208, 519, 0, 507,
	484, 515, 485, 505, 533, 145, 176, 141, 575, 546,
	587, 178, 0, 508, 594, 180, 552, 0, 261, 195,
	0, 0, 0, 535, 577, 541, 570, 530, 562, 494,
	551, 589, 520, 559, 590, 0, 0, 0, 111, 112,
	113, 0, 1133, 1134, 0, 0, 0, 0, 0, 134,
	0, 556, 584, 517, 558, 560, 598, 483, 553, 0,
	487, 490, 595, 580, 511, 512, 0, 0, 0, 0,
	0, 0, 0, 534, 542, 567, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 0, 550, 0, 0,
	0, 491, 488, 0, 0, 0, 0, 532, 0, 0,
	0, 493, 0, 510, 568, 0, 481, 154, 572, 579,
	529, 323, 583, 527, 526, 586, 227, 0, 266, 157,
	177, 130, 171, 115, 126, 0, 156, 205, 236, 241,
	576, 506, 516, 138, 513, 239, 215, 282, 549, 217,
	238, 181, 272, 228, 281, 291, 292, 269, 289, 296,
	257, 119, 268, 280, 135, 251, 0, 0, 0, 121,
	278, 264, 193, 167, 168, 120, 0, 234, 144, 152,
	140, 207, 275, 276, 139, 299, 127, 288, 123, 128,
	287, 201, 271, 279, 194, 186, 122, 277, 192, 185,
	173, 148, 159, 225, 183, 226, 160, 197, 196, 198,
	0, 486, 0, 262, 285, 300, 132, 502, 270, 294,
	295, 0, 229, 133, 153, 147, 224, 151, 199, 129,
	162, 259, 172, 182, 233, 298, 214, 240, 136, 284,
	260, 498, 501, 496, 497, 544, 545, 591, 592, 593,
	569, 492, 0, 499, 500, 0, 574, 581, 582, 548,
	114, 124, 179, 297, 231, 150, 286, 482, 495, 143,
	504, 0, 0, 518, 523, 524, 536, 537, 538, 539,
	540, 547, 554, 555, 557, 563, 564, 565, 566, 571,
	578, 597, 116, 117, 125, 131, 137, 142, 146, 149,
	155, 158, 161, 163, 164, 165, 170, 184, 188, 189,
	190, 191, 202, 203, 204, 206, 209, 210, 211, 212,
	213, 216, 218, 219, 220, 221, 222, 223, 232, 235,
	242, 243, 244, 245, 246, 248, 250, 253, 254, 255,
	256, 263, 267, 273, 274, 283, 290, 293, 0, 0,
	0, 0, 118, 169, 187, 249, 252, 258, 265, 320,
	321, 322, 237, 174, 175, 0, 0, 0, 0, 514,
	230, 200, 166, 247, 585, 573, 0, 531, 588, 503,
	521, 596, 522, 525, 561, 489, 543, 208, 519, 0,
	507, 484, 515, 485, 505, 533, 145, 176, 141, 575,
	546, 587, 178, 0, 508, 594, 180, 552, 0, 261,
	195, 0, 0, 0, 535, 577, 541, 570, 530, 562,
	494, 551, 589, 520, 559, 590, 70, 0, 0, 111,
	112, 113, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 0, 556, 584, 517, 558, 560, 598, 483, 553,
	0, 487, 490, 595, 580, 511, 512, 0, 0, 0,
	0, 0, 0, 0, 534, 542, 567, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 0, 550, 0,
	0, 0, 491, 488, 0, 0, 0, 0, 532, 0,
	0, 0, 493, 0, 510, 568, 0, 481, 154, 572,
	579, 529, 323, 583, 527, 526, 586, 227, 0, 266,
	157, 177, 130, 171, 115, 126, 0, 156, 205, 236,
	241, 576, 506, 516, 138, 513, 239, 215, 282, 549,
	217, 238, 181, 272, 228, 281, 291, 292, 269, 289,
	296, 257, 119, 268, 280, 135, 251, 0, 0, 0,
	121, 278, 264, 193, 167, 168, 120, 0, 234, 144,
	152, 140, 207, 275, 276, 139, 299, 127, 288, 123,
	128, 287, 201, 271, 279, 194, 186, 122, 277, 192,
	185, 173, 148, 159, 225, 183, 226, 160, 197, 196,
	198, 0, 486, 0, 262, 285, 300, 132, 502, 270,
	294, 295, 0, 229, 133, 153, 147, 224, 151, 199,
	129, 162, 259, 172, 182, 233, 298, 214, 240, 136,
	284, 260, 498, 501, 496, 497, 544, 545, 591, 592,
	593, 569, 492, 0, 499, 500, 0, 574, 581, 582,
	548, 114, 124, 179, 297, 231, 150, 286, 482, 495,
	143, 504, 0, 0, 518, 523, 524, 536, 537, 538,
	539, 540, 547, 554, 555, 557, 563, 564, 565, 566,
	571, 578, 597, 116, 117, 125, 131, 137, 142, 146,
	149, 155, 158, 161, 163, 164, 165, 170, 184, 188,
	189, 190, 191, 202, 203, 204, 206, 209, 210, 211,
	212, 213, 216, 218, 219, 220, 221, 222, 223, 232,
	235, 242, 243, 244, 245, 246, 248, 250, 253, 254,
	255, 256, 263, 267, 273, 274, 283, 290, 293, 0,
	0, 0, 0, 118, 169, 187, 249, 252, 258, 265,
	320, 321, 322, 237, 174, 175, 0, 0, 0, 0,
	514, 230, 200, 166, 247, 585, 573, 0, 531, 588,
	503, 521, 596, 522, 525, 561, 489, 543, 208, 519,
	0, 507, 484, 515, 485, 505, 533, 145, 176, 141,
	575, 546, 587, 178, 0, 508, 594, 180, 552, 0,
	261, 195, 0, 0, 0, 535, 577, 541, 570, 530,
	562, 494, 551, 589, 520, 559, 590, 0, 0, 0,
	111, 112, 113, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 0, 556, 584, 517, 558, 560, 598, 483,
	553, 0, 487, 490, 595, 580, 511, 512, 0, 0,
	0, 0, 0, 0, 0, 534, 542, 567, 528, 0,
	0, 0, 0, 0, 0, 1466, 0, 509, 0, 550,
	0, 0, 0, 491, 488, 0, 0, 0, 0, 532,
	0, 0, 0, 493, 0, 510, 568, 0, 481, 154,
	572, 579, 529, 323, 583, 527, 526, 586, 227, 0,
	266, 157, 177, 130, 171, 115, 126, 0, 156, 205,
	236, 241, 576, 506, 516, 138, 513, 239, 215, 282,
	549, 217, 238, 181, 272, 228, 281, 291, 292, 269,
	289, 296, 257, 119, 268, 280, 135, 251, 0, 0,
	0, 121, 278, 264, 193, 167, 168, 120, 0, 234,
	144, 152, 140, 207, 275, 276, 139, 299, 127, 288,
	123, 128, 287, 201, 271, 279, 194, 186, 122, 277,
	192, 185, 173, 148, 159, 225, 183, 226, 160, 197,
	196, 198, 0, 486, 0, 262, 285, 300, 132, 502,
	270, 294, 295, 0, 229, 133, 153, 147, 224, 151,
	199, 129, 162, 259, 172, 182, 233, 298, 214, 240,
	136, 284, 260, 498, 501, 496, 497, 544, 545, 591,
	592, 593, 569, 492, 0, 499, 500, 0, 574, 581,
	582, 548, 114, 124, 179, 297, 231, 150, 286, 482,
	495, 143, 504, 0, 0, 518, 523, 524, 536, 537,
	538, 539, 540, 547, 554, 555, 557, 563, 564, 565,
	566, 571, 578, 597, 116, 117, 125, 131, 137, 142,
	146, 149, 155, 158, 161, 163, 164, 165, 170, 184,
	188, 189, 190, 191, 202, 203, 204, 206, 209, 210,
	211, 212, 213, 216, 218, 219, 220, 221, 222, 223,
	232, 235, 242, 243, 244, 245, 246, 248, 250, 253,
	254, 255, 256, 263, 267, 273, 274, 283, 290, 293,
	0, 0, 0, 0, 118, 169, 187, 249, 252, 258,
	265, 320, 321, 322, 237, 174, 175, 0, 0, 0,
	0, 514, 230, 200, 166, 247, 585, 573, 0, 531,
	588, 503, 521, 596, 522, 525, 561, 489, 543, 208,
	519, 0, 507, 484, 515, 485, 505, 533, 145, 176,
	141, 575, 546, 587, 178, 0, 508, 594, 180, 552,
	0, 261, 195, 0, 0, 0, 535, 577, 541, 570,
	530, 562, 494, 551, 589, 520, 559, 590, 0, 0,
	0, 111, 112, 113, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 0, 556, 584, 517, 558, 560, 598,
	483, 553, 0, 487, 490, 595, 580, 511, 512, 0,
	0, 0, 0, 0, 0, 0, 534, 542, 567, 528,
	0, 0, 0, 0, 0, 0, 1114, 0, 509, 0,
	550, 0, 0, 0, 491, 488, 0, 0, 0, 0,
	532, 0, 0, 0, 493, 0, 510, 568, 0, 481,
	154, 572, 579, 529, 323, 583, 527, 526, 586, 227,
	0, 266, 157, 177, 130, 171, 115, 126, 0, 156,
	205, 236, 241, 576, 506, 516, 138, 513, 239, 215,
	282, 549, 217, 238, 181, 272, 228, 281, 291, 292,
	269, 289, 296, 257, 119, 268, 280, 135, 251, 0,
	0, 0, 121, 278, 264, 193, 167, 168, 120, 0,
	234, 144, 152, 140, 207, 275, 276, 139, 299, 127,
	288, 123, 128, 287, 201, 271, 279, 194, 186, 122,
	277, 192, 185, 173, 148, 159, 225, 183, 226, 160,
	197, 196, 198, 0, 486, 0, 262, 285, 300, 132,
	502, 270, 294, 295, 0, 229, 133, 153, 147, 224,
	151, 199, 129, 162, 259, 172, 182, 233, 298, 214,
	240, 136, 284, 260, 498, 501, 496, 497, 544, 545,
	591, 592, 593, 569, 492, 0, 499, 500, 0, 574,
	581, 582, 548, 114, 124, 179, 297, 231, 150, 286,
	482, 495, 143, 504, 0, 0, 518, 523, 524, 536,
	537, 538, 539, 540, 547, 554, 555, 557, 563, 564,
	565, 566, 571, 578, 597, 116, 117, 125, 131, 137,
	142, 146, 149, 155, 158, 161, 163, 164, 165, 170,
	184, 188, 189, 190, 191, 202, 203, 204, 206, 209,
	210, 211, 212, 213, 216, 218, 219, 220, 221, 222,
	223, 232, 235, 242, 243, 244, 245, 246, 248, 250,
	253, 254, 255, 256, 263, 267, 273, 274, 283, 290,
	293, 0, 0, 0, 0, 118, 169, 187, 249, 252,
	258, 265, 320, 321, 322, 237, 174, 175, 0, 0,
	0, 0, 514, 230, 200, 166, 247, 585, 573, 0,
	531, 588, 503, 521, 596, 522, 525, 561, 489, 543,
	208, 519, 0, 507, 484, 515, 485, 505, 533, 145,
	176, 141, 575, 546, 587, 178, 0, 508, 594, 180,
	552, 0, 261, 195, 0, 0, 0, 535, 577, 541,
	570, 530, 562, 494, 551, 589, 520, 559, 590, 0,
	0, 0, 111, 112, 113, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 0, 556, 584, 517, 558, 560,
	598, 483, 553, 0, 487, 490, 595, 580, 511, 512,
	0, 0, 0, 0, 0, 0, 0, 534, 542, 567,
	528, 0, 0, 0, 0, 0, 0, 1075, 0, 509,
	0, 550, 0, 0, 0, 491, 488, 0, 0, 0,
	0, 532, 0, 0, 0, 493, 0, 510, 568, 0,
	481, 154, 572, 579, 529, 323, 583, 527, 526, 586,
	227, 0, 266, 157, 177, 130, 171, 115, 126, 0,
	156, 205, 236, 241, 576, 506, 516, 138, 513, 239,
	215, 282, 549, 217, 238, 181, 272, 228, 281, 291,
	292, 269, 289, 296, 257, 119, 268, 280, 135, 251,
	0, 0, 0, 121, 278, 264, 193, 167, 168, 120,
	0, 234, 144, 152, 140, 207, 275, 276, 139, 299,
	127, 288, 123, 128, 287, 201, 271, 279, 194, 186,
	122, 277, 192, 185, 173, 148, 159, 225, 183, 226,
	160, 197, 196, 198, 0, 486, 0, 262, 285, 300,
	132, 502, 270, 294, 295, 0, 229, 133, 153, 147,
	224, 151, 199, 129, 162, 259, 172, 182, 233, 298,
	214, 240, 136, 284, 260, 498, 501, 496, 497, 544,
	545, 591, 592, 593, 569, 492, 0, 499, 500, 0,
	574, 581, 582, 548, 114, 124, 179, 297, 231, 150,
	286, 482, 495, 143, 504, 0, 0, 518, 523, 524,
	536, 537, 538, 539, 540, 547, 554, 555, 557, 563,
	564, 565, 566, 571, 578, 597, 116, 117, 125, 131,
	137, 142, 146, 149, 155, 158, 161, 163, 164, 165,
	170, 184, 188, 189, 190, 191, 202, 203, 204, 206,
	209, 210, 211, 212, 213, 216, 218, 219, 220, 221,
	222, 223, 232, 235, 242, 243, 244, 245, 246, 248,
	250, 253, 254, 255, 256, 263, 267, 273, 274, 283,
	290, 293, 0, 0, 0, 0, 118, 169, 187, 249,
	252, 258, 265, 320, 321, 322, 237, 174, 175, 0,
	0, 0, 0, 514, 230, 200, 166, 247, 585, 573,
	0, 531, 588, 503, 521, 596, 522, 525, 561, 489,
	543, 208, 519, 0, 507, 484, 515, 485, 505, 533,
	145, 176, 141, 575, 546, 587, 178, 0, 508, 594,
	180, 552, 0, 261, 195, 0, 0, 0, 535, 577,
	541, 570, 530, 562, 494, 551, 589, 520, 559, 590,
	0, 0, 0, 111, 112, 113, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 0, 556, 584, 517, 558,
	560, 598, 483, 553, 0, 487, 490, 595, 580, 511,
	512, 0, 0, 0, 0, 0, 0, 0, 534, 542,
	567, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 0, 550, 0, 0, 0, 491, 488, 0, 0,
	0, 0, 532, 0, 0, 0, 493, 0, 510, 568,
	0, 481, 154, 572, 579, 529, 323, 583, 527, 526,
	586, 227, 0, 266, 157, 177, 130, 171, 115, 126,
	0, 156, 205, 236, 241, 576, 506, 516, 138, 513,
	239, 215, 282, 549, 217, 238, 181, 272, 228, 281,
	291, 292, 269, 289, 296, 257, 119, 268, 280, 135,
	251, 0, 0, 0, 121, 278, 264, 193, 167, 168,
	120, 0, 234, 144, 152, 140, 207, 275, 276, 139,
	299, 127, 288, 123, 128, 287, 201, 271, 279, 194,
	186, 122, 277, 192, 185, 173, 148, 159, 225, 183,
	226, 160, 197, 196, 198, 0, 486, 0, 262, 285,
	300, 132, 502, 270, 294, 295, 0, 229, 133, 153,
	147, 224, 151, 199, 129, 162, 259, 172, 182, 233,
	298, 214, 240, 136, 284, 260, 498, 501, 496, 497,
	544, 545, 591, 592, 593, 569, 492, 0, 499, 500,
	0, 574, 581, 582, 548, 114, 124, 179, 297, 231,
	150, 286, 482, 495, 143, 504, 0, 0, 518, 523,
	524, 536, 537, 538, 539, 540, 547, 554, 555, 557,
	563, 564, 565, 566, 571, 578, 597, 116, 117, 125,
	131, 137, 142, 146, 149, 155, 158, 161, 163, 164,
	165, 170, 184, 188, 189, 190, 191, 202, 203, 204,
	206, 209, 210, 211, 212, 213, 216, 218, 219, 220,
	221, 222, 223, 232, 235, 242, 243, 244, 245, 246,
	248, 250, 253, 254, 255, 256, 263, 267, 273, 274,
	283, 290, 293, 0, 0, 0, 0, 118, 169, 187,
	249, 252, 258, 265, 320, 321, 322, 237, 174, 175,
	0, 0, 0, 0, 514, 230, 200, 166, 247, 585,
	573, 0, 531, 588, 503, 521, 596, 522, 525, 561,
	489, 543, 208, 519, 0, 507, 484, 515, 485, 505,
	533, 145, 176, 141, 575, 546, 587, 178, 0, 508,
	594, 180, 552, 0, 261, 195, 0, 0, 0, 535,
	577, 541, 570, 530, 562, 494, 551, 589, 520, 559,
	590, 0, 0, 0, 111, 112, 113, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 0, 556, 584, 517,
	558, 560, 598, 483, 553, 0, 487, 490, 595, 580,
	511, 512, 0, 0, 0, 0, 0, 0, 0, 534,
	542, 567, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 0, 550, 0, 0, 0, 491, 488, 0,
	0, 0, 0, 532, 0, 0, 0, 493, 0, 510,
	568, 0, 481, 154, 572, 579, 529, 323, 583, 527,
	526, 586, 227, 0, 266, 157, 177, 130, 171, 115,
	126, 0, 156, 205, 236, 241, 576, 506, 516, 138,
	513, 239, 215, 282, 549, 217, 238, 181, 272, 228,
	281, 291, 292, 269, 289, 296, 257, 119, 268, 280,
	135, 251, 0, 0, 0, 121, 278, 264, 193, 167,
	168, 120, 0, 234, 144, 152, 140, 207, 275, 276,
	139, 299, 127, 288, 123, 479, 287, 201, 271, 279,
	194, 186, 122, 277, 192, 185, 173, 148, 159, 225,
	183, 226, 160, 197, 196, 198, 0, 486, 0, 262,
	285, 300, 132, 502, 270, 294, 295, 0, 229, 133,
	153, 147, 224, 151, 480, 478, 162, 259, 172, 182,
	233, 298, 214, 240, 136, 284, 260, 498, 501, 496,
	497, 544, 545, 591, 592, 593, 569, 492, 0, 499,
	500, 0, 574, 581, 582, 548, 114, 124, 179, 297,
	231, 150, 286, 482, 495, 143, 504, 0, 0, 518,
	523, 524, 536, 537, 538, 539, 540, 547, 554, 555,
	557, 563, 564, 565, 566, 571, 578, 597, 116, 117,
	125, 131, 137, 142, 146, 149, 155, 158, 161, 163,
	164, 165, 170, 184, 188, 189, 190, 191, 202, 203,
	204, 206, 209, 210, 211, 212, 213, 216, 218, 219,
	220, 221, 222, 223, 232, 235, 242, 243, 244, 245,
	246, 248, 250, 253, 254, 255, 256, 263, 267, 273,
	274, 283, 290, 293, 0, 0, 0, 0, 118, 169,
	187, 249, 252, 258, 265, 320, 321, 322, 237, 174,
	175, 0, 0, 0, 0, 514, 230, 200, 166, 247,
	585, 573, 0, 531, 588, 503, 521, 596, 522, 525,
	561, 489, 543, 208, 519, 0, 507, 484, 515, 485,
	505, 533, 145, 176, 141, 575, 546, 587, 178, 0,
	508, 594, 180, 552, 0, 261, 195, 0, 0, 0,
	535, 577, 541, 570, 530, 562, 494, 551, 589, 520,
	559, 590, 0, 0, 0, 111, 112, 113, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 0, 556, 584,
	517, 558, 560, 598, 483, 553, 0, 487, 490, 595,
	580, 511, 512, 0, 0, 0, 0, 0, 0, 0,
	534, 542, 567, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 0, 550, 0, 0, 0, 491, 488,
	0, 0, 0, 0, 532, 0, 0, 0, 493, 0,
	510, 568, 0, 481, 154, 572, 579, 529, 323, 583,
	527, 526, 586, 227, 0, 266, 157, 177, 130, 171,
	115, 126, 0, 156, 205, 236, 241, 576, 506, 516,
	138, 513, 239, 215, 282, 549, 217, 238, 181, 272,
	228, 281, 291, 292, 269, 289, 296, 257, 119, 268,
	831, 135, 251, 0, 0, 0, 121, 278, 264, 193,
	167, 168, 120, 0, 234, 144, 152, 140, 207, 275,
	276, 139, 299, 127, 288, 123, 479, 287, 201, 271,
	279, 194, 186, 122, 277, 192, 185, 173, 148, 159,
	225, 183, 226, 160, 197, 196, 198, 0, 486, 0,
	262, 285, 300, 132, 502, 270, 294, 295, 0, 229,
	133, 153, 147, 224, 151, 480, 478, 162, 259, 172,
	182, 233, 298, 214, 240, 136, 284, 260, 498, 501,
	496, 497, 544, 545, 591, 592, 593, 569, 492, 0,
	499, 500, 0, 574, 581, 582, 548, 114, 124, 179,
	297, 231, 150, 286, 482, 495, 143, 504, 0, 0,
	518, 523, 524, 536, 537, 538, 539, 540, 547, 554,
	555, 557, 563, 564, 565, 566, 571, 578, 597, 116,
	117, 125, 131, 137, 142, 146, 149, 155, 158, 161,
	163, 164, 165, 170, 184, 188, 189, 190, 191, 202,
	203, 204, 206, 209, 210, 211, 212, 213, 216, 218,
	219, 220, 221, 222, 223, 232, 235, 242, 243, 244,
	245, 246, 248, 250, 253, 254, 255, 256, 263, 267,
	273, 274, 283, 290, 293, 0, 0, 0, 0, 118,
	169, 187, 249, 252, 258, 265, 320, 321, 322, 237,
	174, 175, 0, 0, 0, 0, 514, 230, 200, 166,
	247, 585, 573, 0, 531, 588, 503, 521, 596, 522,
	525, 561, 489, 543, 208, 519, 0, 507, 484, 515,
	485, 505, 533, 145, 176, 141, 575, 546, 587, 178,
	0, 508, 594, 180, 552, 0, 261, 195, 0, 0,
	0, 535, 577, 541, 570, 530, 562, 494, 551, 589,
	520, 559, 590, 0, 0, 0, 111, 112, 113, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 0, 556,
	584, 517, 558, 560, 598, 483, 553, 0, 487, 490,
	595, 580, 511, 512, 0, 0, 0, 0, 0, 0,
	0, 534, 542, 567, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 509, 0, 550, 0, 0, 0, 491,
	488, 0, 0, 0, 0, 532, 0, 0, 0, 493,
	0, 510, 568, 0, 481, 154, 572, 579, 529, 323,
	583, 527, 526, 586, 227, 0, 266, 157, 177, 130,
	171, 115, 126, 0, 156, 205, 236, 241, 576, 506,
	516, 138, 513, 239, 215, 282, 549, 217, 238, 181,
	272, 228, 281, 291, 292, 269, 289, 296, 257, 119,
	268, 470, 135, 251, 0, 0, 0, 121, 278, 264,
	193, 167, 168, 120, 0, 234, 144, 152, 140, 207,
	275, 276, 139, 299, 127, 288, 123, 479, 287, 201,
	271, 279, 194, 186, 122, 277, 192, 185, 173, 148,
	159, 225, 183, 226, 160, 197, 196, 198, 0, 486,
	0, 262, 285, 300, 132, 502, 270, 294, 295, 0,
	229, 133, 153, 147, 224, 151, 480, 478, 473, 472,
	172, 182, 233, 298, 214, 240, 136, 284, 260, 498,
	501, 496, 497, 544, 545, 591, 592, 593, 569, 492,
	0, 499, 500, 0, 574, 581, 582, 548, 114, 124,
	179, 297, 231, 150, 286, 482, 495, 143, 504, 0,
	0, 518, 523, 524, 536, 537, 538, 539, 540, 547,
	554, 555, 557, 563, 564, 565, 566, 571, 578, 597,
	116, 117, 125, 131, 137, 142, 146, 149, 155, 158,
	161, 163, 164, 165, 170, 184, 188, 189, 190, 191,
	202, 203, 204, 206, 209, 210, 211, 212, 213, 216,
	218, 219, 220, 221, 222, 223, 232, 235, 242, 243,
	244, 245, 246, 248, 250, 253, 254, 255, 256, 263,
	267, 273, 274, 283, 290, 293, 0, 0, 0, 0,
	118, 169, 187, 249, 252, 258, 265, 320, 321, 322,
	237, 174, 175, 0, 0, 0, 0, 514, 230, 200,
	166, 247, 208, 0, 0, 1004, 0, 368, 0, 0,
	0, 145, 176, 367, 0, 0, 0, 178, 0, 1005,
	411, 180, 0, 0, 261, 195, 0, 0, 0, 0,
	0, 402, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 70, 0, 0, 111, 112, 113, 389, 388, 391,
	392, 393, 394, 0, 0, 134, 390, 395, 396, 397,
	0, 0, 0, 0, 365, 382, 0, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 379, 380, 457,
	0, 0, 0, 425, 0, 381, 0, 0, 374, 375,
	377, 376, 378, 383, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 424, 0, 0, 323, 0, 0,
	422, 0, 227, 0, 266, 157, 177, 130, 171, 115,
	126, 0, 156, 205, 236, 241, 0, 0, 0, 138,
	0, 239, 215, 282, 0, 217, 238, 181, 272, 228,
	281, 291, 292, 269, 289, 296, 257, 119, 268, 280,
	135, 251, 0, 0, 0, 121, 278, 264, 193, 167,
	168, 120, 0, 234, 144, 152, 140, 207, 275, 276,
	139, 299, 127, 288, 123, 128, 287, 201, 271, 279,
	194, 186, 122, 277, 192, 185, 173, 148, 159, 225,
	183, 226, 160, 197, 196, 198, 0, 0, 0, 262,
	285, 300, 132, 0, 270, 294, 295, 0, 229, 133,
	153, 147, 224, 151, 199, 129, 162, 259, 172, 182,
	233, 298, 214, 240, 136, 284, 260, 412, 423, 418,
	419, 416, 417, 415, 414, 413, 426, 404, 405, 406,
	407, 409, 0, 420, 421, 408, 114, 124, 179, 297,
	231, 150, 286, 0, 0, 143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 117,
	125, 131, 137, 142, 146, 149, 155, 158, 161, 163,
	164, 165, 170, 184, 188, 189, 190, 191, 202, 203,
	204, 206, 209, 210, 211, 212, 213, 216, 218, 219,
	220, 221, 222, 223, 232, 235, 242, 243, 244, 245,
	246, 248, 250, 253, 254, 255, 256, 263, 267, 273,
	274, 283, 290, 293, 0, 0, 0, 0, 118, 169,
	187, 249, 252, 258, 265, 320, 321, 322, 237, 174,
	175, 0, 0, 0, 0, 208, 230, 200, 166, 247,
	368, 0, 0, 0, 145, 176, 367, 0, 0, 0,
	178, 0, 0, 411, 180, 0, 0, 261, 195, 0,
	0, 0, 0, 0, 402, 403, 0, 0, 0, 0,
	0, 0, 1124, 0, 70, 0, 0, 111, 112, 113,
	389, 388, 391, 392, 393, 394, 0, 0, 134, 390,
	395, 396, 397, 1125, 0, 0, 0, 365, 382, 0,
	410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 380, 0, 0, 0, 0, 425, 0, 381, 0,
	0, 374, 375, 377, 376, 378, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 424, 0, 0,
	323, 0, 0, 422, 0, 227, 0, 266, 157, 177,
	130, 171, 115, 126, 0, 156, 205, 236, 241, 0,
	0, 0, 138, 0, 239, 215, 282, 0, 217, 238,
	181, 272, 228, 281, 291, 292, 269, 289, 296, 257,
	119, 268, 280, 135, 251, 0, 0, 0, 121, 278,
	264, 193, 167, 168, 120, 0, 234, 144, 152, 140,
	207, 275, 276, 139, 299, 127, 288, 123, 128, 287,
	201, 271, 279, 194, 186, 122, 277, 192, 185, 173,
	148, 159, 225, 183, 226, 160, 197, 196, 198, 0,
	0, 0, 262, 285, 300, 132, 0, 270, 294, 295,
	0, 229, 133, 153, 147, 224, 151, 199, 129, 162,
	259, 172, 182, 233, 298, 214, 240, 136, 284, 260,
	412, 423, 418, 419, 416, 417, 415, 414, 413, 426,
	404, 405, 406, 407, 409, 0, 420, 421, 408, 114,
	124, 179, 297, 231, 150, 286, 0, 0, 143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 116, 117, 125, 131, 137, 142, 146, 149, 155,
	158, 161, 163, 164, 165, 170, 184, 188, 189, 190,
	191, 202, 203, 204, 206, 209, 210, 211, 212, 213,
	216, 218, 219, 220, 221, 222, 223, 232, 235, 242,
	243, 244, 245, 246, 248, 250, 253, 254, 255, 256,
	263, 267, 273, 274, 283, 290, 293, 0, 0, 0,
	0, 118, 169, 187, 249, 252, 258, 265, 320, 321,
	322, 237, 174, 175, 0, 0, 0, 0, 208, 230,
	200, 166, 247, 368, 0, 0, 0, 145, 176, 367,
	0, 0, 0, 178, 0, 0, 411, 180, 0, 0,
	261, 195, 0, 0, 0, 0, 0, 402, 403, 0,
	0, 0, 0, 0, 0, 1121, 0, 70, 0, 0,
	111, 112, 113, 389, 388, 391, 392, 393, 394, 0,
	0, 134, 390, 395, 396, 397, 1122, 0, 0, 0,
	365, 382, 0, 410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 380, 0, 0, 0, 0, 425,
	0, 381, 0, 0, 374, 375, 377, 376, 378, 383,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	424, 0, 0, 323, 0, 0, 422, 0, 227, 0,
	266, 157, 177, 130, 171, 115, 126, 0, 156, 205,
	236, 241, 0, 0, 0, 138, 0, 239, 215, 282,
	0, 217, 238, 181, 272, 228, 281, 291, 292, 269,
	289, 296, 257, 119, 268, 280, 135, 251, 0, 0,
	0, 121, 278, 264, 193, 167, 168, 120, 0, 234,
	144, 152, 140, 207, 275, 276, 139, 299, 127, 288,
	123, 128, 287, 201, 271, 279, 194, 186, 122, 277,
	192, 185, 173, 148, 159, 225, 183, 226, 160, 197,
	196, 198, 0, 0, 0, 262, 285, 300, 132, 0,
	270, 294, 295, 0, 229, 133, 153, 147, 224, 151,
	199, 129, 162, 259, 172, 182, 233, 298, 214, 240,
	136, 284, 260, 412, 423, 418, 419, 416, 417, 415,
	414, 413, 426, 404, 405, 406, 407, 409, 0, 420,
	421, 408, 114, 124, 179, 297, 231, 150, 286, 0,
	0, 143, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 116, 117, 125, 131, 137, 142,
	146, 149, 155, 158, 161, 163, 164, 165, 170, 184,
	188, 189, 190, 191, 202, 203, 204, 206, 209, 210,
	211, 212, 213, 216, 218, 219, 220, 221, 222, 223,
	232, 235, 242, 243, 244, 245, 246, 248, 250, 253,
	254, 255, 256, 263, 267, 273, 274, 283, 290, 293,
	0, 0, 0, 0, 118, 169, 187, 249, 252, 258,
	265, 320, 321, 322, 237, 174, 175, 0, 0, 0,
	0, 208, 230, 200, 166, 247, 368, 0, 0, 0,
	145, 176, 367, 0, 0, 0, 178, 0, 0, 411,
	180, 0, 0, 261, 195, 0, 0, 0, 0, 0,
	402, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	70, 0, 1012, 111, 112, 113, 389, 388, 391, 392,
	393, 394, 0, 0, 134, 390, 395, 396, 397, 0,
	0, 0, 0, 365, 382, 0, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 380, 0, 0,
	0, 0, 425, 0, 381, 0, 0, 374, 375, 377,
	376, 378, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 424, 0, 0, 323, 0, 0, 422,
	0, 227, 0, 266, 157, 177, 130, 171, 115, 126,
	0, 156, 205, 236, 241, 0, 0, 0, 138, 0,
	239, 215, 282, 0, 217, 238, 181, 272, 228, 281,
	291, 292, 269, 289, 296, 257, 119, 268, 280, 135,
	251, 0, 0, 0, 121, 278, 264, 193, 167, 168,
	120, 0, 234, 144, 152, 140, 207, 275, 276, 139,
	299, 127, 288, 123, 128, 287, 201, 271, 279, 194,
	186, 122, 277, 192, 185, 173, 148, 159, 225, 183,
	226, 160, 197, 196, 198, 0, 0, 0, 262, 285,
	300, 132, 0, 270, 294, 295, 0, 229, 133, 153,
	147, 224, 151, 199, 129, 162, 259, 172, 182, 233,
	298, 214, 240, 136, 284, 260, 412, 423, 418, 419,
	416, 417, 415, 414, 413, 426, 404, 405, 406, 407,
	409, 0, 420, 421, 408, 114, 124, 179, 297, 231,
	150, 286, 0, 0, 143, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 116, 117, 125,
	131, 137, 142, 146, 149, 155, 158, 161, 163, 164,
	165, 170, 184, 188, 189, 190, 191, 202, 203, 204,
	206, 209, 210, 211, 212, 213, 216, 218, 219, 220,
	221, 222, 223, 232, 235, 242, 243, 244, 245, 246,
	248, 250, 253, 254, 255, 256, 263, 267, 273, 274,
	283, 290, 293, 0, 0, 0, 0, 118, 169, 187,
	249, 252, 258, 265, 320, 321, 322, 237, 174, 175,
	0, 0, 0, 0, 208, 230, 200, 166, 247, 368,
	0, 0, 0, 145, 176, 367, 0, 0, 0, 178,
	0, 0, 411, 180, 0, 0, 261, 195, 0, 0,
	0, 0, 0, 402, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 70, 0, 0, 111, 112, 113, 389,
	388, 391, 392, 393, 394, 0, 0, 134, 390, 395,
	396, 397, 0, 0, 0, 0, 365, 382, 0, 410,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 379,
	380, 457, 0, 0, 0, 425, 0, 381, 0, 0,
	374, 375, 377, 376, 378, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 424, 0, 0, 323,
	0, 0, 422, 0, 227, 0, 266, 157, 177, 130,
	171, 115, 126, 0, 156, 205, 236, 241, 0, 0,
	0, 138, 0, 239, 215, 282, 0, 217, 238, 181,
	272, 228, 281, 291, 292, 269, 289, 296, 257, 119,
	268, 280, 135, 251, 0, 0, 0, 121, 278, 264,
	193, 167, 168, 120, 0, 234, 144, 152, 140, 207,
	275, 276, 139, 299, 127, 288, 123, 128, 287, 201,
	271, 279, 194, 186, 122, 277, 192, 185, 173, 148,
	159, 225, 183, 226, 160, 197, 196, 198, 0, 0,
	0, 262, 285, 300, 132, 0, 270, 294, 295, 0,
	229, 133, 153, 147, 224, 151, 199, 129, 162, 259,
	172, 182, 233, 298, 214, 240, 136, 284, 260, 412,
	423, 418, 419, 416, 417, 415, 414, 413, 426, 404,
	405, 406, 407, 409, 0, 420, 421, 408, 114, 124,
	179, 297, 231, 150, 286, 0, 0, 143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 117, 125, 131, 137, 142, 146, 149, 155, 158,
	161, 163, 164, 165, 170, 184, 188, 189, 190, 191,
	202, 203, 204, 206, 209, 210, 211, 212, 213, 216,
	218, 219, 220, 221, 222, 223, 232, 235, 242, 243,
	244, 245, 246, 248, 250, 253, 254, 255, 256, 263,
	267, 273, 274, 283, 290, 293, 0, 0, 0, 0,
	118, 169, 187, 249, 252, 258, 265, 320, 321, 322,
	237, 174, 175, 0, 0, 0, 0, 208, 230, 200,
	166, 247, 368, 0, 0, 0, 145, 176, 367, 0,
	0, 0, 178, 0, 0, 411, 180, 0, 0, 261,
	195, 0, 0, 0, 0, 0, 402, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 70, 0, 0, 111,
	112, 113, 389, 1023, 391, 392, 393, 394, 0, 0,
	134, 390, 395, 396, 397, 0, 0, 0, 0, 365,
	382, 0, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 380, 457, 0, 0, 0, 425, 0,
	381, 0, 0, 374, 375, 377, 376, 378, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 424,
	0, 0, 323, 0, 0, 422, 0, 227, 0, 266,
	157, 177, 130, 171, 115, 126, 0, 156, 205, 236,
	241, 0, 0, 0, 138, 0, 239, 215, 282, 0,
	217, 238, 181, 272, 228, 281, 291, 292, 269, 289,
	296, 257, 119, 268, 280, 135, 251, 0, 0, 0,
	121, 278, 264, 193, 167, 168, 120, 0, 234, 144,
	152, 140, 207, 275, 276, 139, 299, 127, 288, 123,
	128, 287, 201, 271, 279, 194, 186, 122, 277, 192,
	185, 173, 148, 159, 225, 183, 226, 160, 197, 196,
	198, 0, 0, 0, 262, 285, 300, 132, 0, 270,
	294, 295, 0, 229, 133, 153, 147, 224, 151, 199,
	129, 162, 259, 172, 182, 233, 298, 214, 240, 136,
	284, 260, 412, 423, 418, 419, 416, 417, 415, 414,
	413, 426, 404, 405, 406, 407, 409, 0, 420, 421,
	408, 114, 124, 179, 297, 231, 150, 286, 0, 0,
	143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 117, 125, 131, 137, 142, 146,
	149, 155, 158, 161, 163, 164, 165, 170, 184, 188,
	189, 190, 191, 202, 203, 204, 206, 209, 210, 211,
	212, 213, 216, 218, 219, 220, 221, 222, 223, 232,
	235, 242, 243, 244, 245, 246, 248, 250, 253, 254,
	255, 256, 263, 267, 273, 274, 283, 290, 293, 0,
	0, 0, 0, 118, 169, 187, 249, 252, 258, 265,
	320, 321, 322, 237, 174, 175, 0, 0, 0, 0,
	208, 230, 200, 166, 247, 368, 0, 0, 0, 145,
	176, 367, 0, 0, 0, 178, 0, 0, 411, 180,
	0, 0, 261, 195, 0, 0, 0, 0, 0, 402,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 70,
	0, 0, 111, 112, 113, 389, 1020, 391, 392, 393,
	394, 0, 0, 134, 390, 395, 396, 397, 0, 0,
	0, 0, 365, 382, 0, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 379, 380, 457, 0, 0,
	0, 425, 0, 381, 0, 0, 374, 375, 377, 376,
	378, 383, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 424, 0, 0, 323, 0, 0, 422, 0,
	227, 0, 266, 157, 177, 130, 171, 115, 126, 0,
	156, 205, 236, 241, 0, 0, 0, 138, 0, 239,
	215, 282, 0, 217, 238, 181, 272, 228, 281, 291,
	292, 269, 289, 296, 257, 119, 268, 280, 135, 251,
	0, 0, 0, 121, 278, 264, 193, 167, 168, 120,
	0, 234, 144, 152, 140, 207, 275, 276, 139, 299,
	127, 288, 123, 128, 287, 201, 271, 279, 194, 186,
	122, 277, 192, 185, 173, 148, 159, 225, 183, 226,
	160, 197, 196, 198, 0, 0, 0, 262, 285, 300,
	132, 0, 270, 294, 295, 0, 229, 133, 153, 147,
	224, 151, 199, 129, 162, 259, 172, 182, 233, 298,
	214, 240, 136, 284, 260, 412, 423, 418, 419, 416,
	417, 415, 414, 413, 426, 404, 405, 406, 407, 409,
	0, 420, 421, 408, 114, 124, 179, 297, 231, 150,
	286, 0, 0, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 117, 125, 131,
	137, 142, 146, 149, 155, 158, 161, 163, 164, 165,
	170, 184, 188, 189, 190, 191, 202, 203, 204, 206,
	209, 210, 211, 212, 213, 216, 218, 219, 220, 221,
	222, 223, 232, 235, 242, 243, 244, 245, 246, 248,
	250, 253, 254, 255, 256, 263, 267, 273, 274, 283,
	290, 293, 0, 0, 0, 0, 118, 169, 187, 249,
	252, 258, 265, 320, 321, 322, 237, 174, 175, 439,
	0, 0, 0, 0, 230, 200, 166, 247, 0, 0,
	0, 208, 0, 0, 0, 0, 368, 0, 0, 0,
	145, 176, 367, 0, 0, 0, 178, 0, 0, 411,
	180, 0, 0, 261, 195, 0, 0, 0, 0, 0,
	402, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	70, 0, 0, 111, 112, 113, 389, 388, 391, 392,
	393, 394, 0, 0, 134, 390, 395, 396, 397, 0,
	0, 0, 0, 365, 382, 0, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 380, 0, 0,
	0, 0, 425, 0, 381, 0, 0, 374, 375, 377,
	376, 378, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 424, 0, 0, 323, 0, 0, 422,
	0, 227, 0, 266, 157, 177, 130, 171, 115, 126,
	0, 156, 205, 236, 241, 0, 0, 0, 138, 0,
	239, 215, 282, 0, 217, 238, 181, 272, 228, 281,
	291, 292, 269, 289, 296, 257, 119, 268, 280, 135,
	251, 0, 0, 0, 121, 278, 264, 193, 167, 168,
	120, 0, 234, 144, 152, 140, 207, 275, 276, 139,
	299, 127, 288, 123, 128, 287, 201, 271, 279, 194,
	186, 122, 277, 192, 185, 173, 148, 159, 225, 183,
	226, 160, 197, 196, 198, 0, 0, 0, 262, 285,
	300, 132, 0, 270, 294, 295, 0, 229, 133, 153,
	147, 224, 151, 199, 129, 162, 259, 172, 182, 233,
	298, 214, 240, 136, 284, 260, 412, 423, 418, 419,
	416, 417, 415, 414, 413, 426, 404, 405, 406, 407,
	409, 0, 420, 421, 408, 114, 124, 179, 297, 231,
	150, 286, 0, 0, 143, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 116, 117, 125,
	131, 137, 142, 146, 149, 155, 158, 161, 163, 164,
	165, 170, 184, 188, 189, 190, 191, 202, 203, 204,
	206, 209, 210, 211, 212, 213, 216, 218, 219, 220,
	221, 222, 223, 232, 235, 242, 243, 244, 245, 246,
	248, 250, 253, 254, 255, 256, 263, 267, 273, 274,
	283, 290, 293, 0, 0, 0, 0, 118, 169, 187,
	249, 252, 258, 265, 320, 321, 322, 237, 174, 175,
	0, 0, 0, 0, 208, 230, 200, 166, 247, 368,
	0, 0, 0, 145, 176, 367, 0, 0, 0, 178,
	0, 0, 411, 180, 0, 0, 261, 195, 0, 0,
	0, 0, 0, 402, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 70, 0, 0, 111, 112, 113, 389,
	388, 391, 392, 393, 394, 0, 0, 134, 390, 395,
	396, 397, 0, 0, 0, 0, 365, 382, 0, 410,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 379,
	380, 0, 0, 0, 0, 425, 0, 381, 0, 0,
	374, 375, 377, 376, 378, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 424, 0, 0, 323,
	0, 0, 422, 0, 227, 0, 266, 157, 177, 130,
	171, 115, 126, 0, 156, 205, 236, 241, 0, 0,
	0, 138, 0, 239, 215, 282, 0, 217, 238, 181,
	272, 228, 281, 291, 292, 269, 289, 296, 257, 119,
	268, 280, 135, 251, 0, 0, 0, 121, 278, 264,
	193, 167, 168, 120, 0, 234, 144, 152, 140, 207,
	275, 276, 139, 299, 127, 288, 123, 128, 287, 201,
	271, 279, 194, 186, 122, 277, 192, 185, 173, 148,
	159, 225, 183, 226, 160, 197, 196, 198, 0, 0,
	0, 262, 285, 300, 132, 0, 270, 294, 295, 0,
	229, 133, 153, 147, 224, 151, 199, 129, 162, 259,
	172, 182, 233, 298, 214, 240, 136, 284, 260, 412,
	423, 418, 419, 416, 417, 415, 414, 413, 426, 404,
	405, 406, 407, 409, 0, 420, 421, 408, 114, 124,
	179, 297, 231, 150, 286, 0, 0, 143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 117, 125, 131, 137, 142, 146, 149, 155, 158,
	161, 163, 164, 165, 170, 184, 188, 189, 190, 191,
	202, 203, 204, 206, 209, 210, 211, 212, 213, 216,
	218, 219, 220, 221, 222, 223, 232, 235, 242, 243,
	244, 245, 246, 248, 250, 253, 254, 255, 256, 263,
	267, 273, 274, 283, 290, 293, 0, 0, 0, 0,
	118, 169, 187, 249, 252, 258, 265, 320, 321, 322,
	237, 174, 175, 208, 0, 0, 0, 0, 230, 200,
	166, 247, 145, 176, 141, 0, 0, 0, 178, 0,
	0, 411, 180, 0, 0, 261, 195, 0, 0, 0,
	0, 0, 402, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 70, 0, 0, 111, 112, 113, 389, 388,
	391, 392, 393, 394, 0, 0, 134, 390, 395, 396,
	397, 0, 0, 0, 0, 0, 382, 0, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 380,
	0, 0, 0, 0, 425, 0, 381, 0, 0, 374,
	375, 377, 376, 378, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 424, 0, 0, 323, 0,
	0, 422, 0, 227, 0, 266, 157, 177, 130, 171,
	115, 126, 0, 156, 205, 236, 241, 0, 0, 0,
	138, 0, 239, 215, 282, 1749, 217, 238, 181, 272,
	228, 281, 291, 292, 269, 289, 296, 257, 119, 268,
	280, 135, 251, 0, 0, 0, 121, 278, 264, 193,
	167, 168, 120, 0, 234, 144, 152, 140, 207, 275,
	276, 139, 299, 127, 288, 123, 128, 287, 201, 271,
	279, 194, 186, 122, 277, 192, 185, 173, 148, 159,
	225, 183, 226, 160, 197, 196, 198, 0, 0, 0,
	262, 285, 300, 132, 0, 270, 294, 295, 0, 229,
	133, 153, 147, 224, 151, 199, 129, 162, 259, 172,
	182, 233, 298, 214, 240, 136, 284, 260, 412, 423,
	418, 419, 416, 417, 415, 414, 413, 426, 404, 405,
	406, 407, 409, 0, 420, 421, 408, 114, 124, 179,
	297, 231, 150, 286, 0, 0, 143, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 116,
	117, 125, 131, 137, 142, 146, 149, 155, 158, 161,
	163, 164, 165, 170, 184, 188, 189, 190, 191, 202,
	203, 204, 206, 209, 210, 211, 212, 213, 216, 218,
	219, 220, 221, 222, 223, 232, 235, 242, 243, 244,
	245, 246, 248, 250, 253, 254, 255, 256, 263, 267,
	273, 274, 283, 290, 293, 0, 0, 0, 0, 118,
	169, 187, 249, 252, 258, 265, 320, 321, 322, 237,
	174, 175, 208, 0, 0, 0, 0, 230, 200, 166,
	247, 145, 176, 141, 0, 0, 0, 178, 0, 0,
	411, 180, 0, 0, 261, 195, 0, 0, 0, 0,
	0, 402, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 70, 0, 1012, 111, 112, 113, 389, 388, 391,
	392, 393, 394, 0, 0, 134, 390, 395, 396, 397,
	0, 0, 0, 0, 0, 382, 0, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 379, 380, 0,
	0, 0, 0, 425, 0, 381, 0, 0, 374, 375,
	377, 376, 378, 383, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 424, 0, 0, 323, 0, 0,
	422, 0, 227, 0, 266, 157, 177, 130, 171, 115,
	126, 0, 156, 205, 236, 241, 0, 0, 0, 138,
	0, 239, 215, 282, 0, 217, 238, 181, 272, 228,
	281, 291, 292, 269, 289, 296, 257, 119, 268, 280,
	135, 251, 0, 0, 0, 121, 278, 264, 193, 167,
	168, 120, 0, 234, 144, 152, 140, 207, 275, 276,
	139, 299, 127, 288, 123, 128, 287, 201, 271, 279,
	194, 186, 122, 277, 192, 185, 173, 148, 159, 225,
	183, 226, 160, 197, 196, 198, 0, 0, 0, 262,
	285, 300, 132, 0, 270, 294, 295, 0, 229, 133,
	153, 147, 224, 151, 199, 129, 162, 259, 172, 182,
	233, 298, 214, 240, 136, 284, 260, 412, 423, 418,
	419, 416, 417, 415, 414, 413, 426, 404, 405, 406,
	407, 409, 0, 420, 421, 408, 114, 124, 179, 297,
	231, 150, 286, 0, 0, 143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 117,
	125, 131, 137, 142, 146, 149, 155, 158, 161, 163,
	164, 165, 170, 184, 188, 189, 190, 191, 202, 203,
	204, 206, 209, 210, 211, 212, 213, 216, 218, 219,
	220, 221, 222, 223, 232, 235, 242, 243, 244, 245,
	246, 248, 250, 253, 254, 255, 256, 263, 267, 273,
	274, 283, 290, 293, 0, 0, 0, 0, 118, 169,
	187, 249, 252, 258, 265, 320, 321, 322, 237, 174,
	175, 208, 0, 0, 0, 0, 230, 200, 166, 247,
	145, 176, 141, 0, 0, 0, 178, 0, 0, 411,
	180, 0, 0, 261, 195, 0, 0, 0, 0, 0,
	402, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	70, 0, 0, 111, 112, 113, 389, 388, 391, 392,
	393, 394, 0, 0, 134, 390, 395, 396, 397, 0,
	0, 0, 0, 0, 382, 0, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 380, 0, 0,
	0, 0, 425, 0, 381, 0, 0, 374, 375, 377,
	376, 378, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 424, 0, 0, 323, 0, 0, 422,
	0, 227, 0, 266, 157, 177, 130, 171, 115, 126,
	0, 156, 205, 236, 241, 0, 0, 0, 138, 0,
	239, 215, 282, 0, 217, 238, 181, 272, 228, 281,
	291, 292, 269, 289, 296, 257, 119, 268, 280, 135,
	251, 0, 0, 0, 121, 278, 264, 193, 167, 168,
	120, 0, 234, 144, 152, 140, 207, 275, 276, 139,
	299, 127, 288, 123, 128, 287, 201, 271, 279, 194,
	186, 122, 277, 192, 185, 173, 148, 159, 225, 183,
	226, 160, 197, 196, 198, 0, 0, 0, 262, 285,
	300, 132, 0, 270, 294, 295, 0, 229, 133, 153,
	147, 224, 151, 199, 129, 162, 259, 172, 182, 233,
	298, 214, 240, 136, 284, 260, 412, 423, 418, 419,
	416, 417, 415, 414, 413, 426, 404, 405, 406, 407,
	409, 0, 420, 421, 408, 114, 124, 179, 297, 231,
	150, 286, 0, 0, 143, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 116, 117, 125,
	131, 137, 142, 146, 149, 155, 158, 161, 163, 164,
	165, 170, 184, 188, 189, 190, 191, 202, 203, 204,
	206, 209, 210, 211, 212, 213, 216, 218, 219, 220,
	221, 222, 223, 232, 235, 242, 243, 244, 245, 246,
	248, 250, 253, 254, 255, 256, 263, 267, 273, 274,
	283, 290, 293, 0, 0, 0, 0, 118, 169, 187,
	249, 252, 258, 265, 320, 321, 322, 237, 174, 175,
	208, 0, 0, 0, 0, 230, 200, 166, 247, 145,
	176, 141, 0, 0, 0, 178, 0, 0, 411, 180,
	0, 0, 261, 195, 0, 0, 0, 0, 0, 402,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 70,
	0, 0, 111, 112, 113, 389, 731, 391, 392, 393,
	394, 0, 0, 134, 390, 395, 396, 397, 0, 0,
	0, 0, 0, 382, 0, 410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 379, 380, 0, 0, 0,
	0, 425, 0, 381, 0, 0, 374, 375, 377, 376,
	378, 383, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 424, 0, 0, 323, 0, 0, 422, 0,
	227, 0, 266, 157, 177, 130, 171, 115, 126, 0,
	156, 205, 236, 241, 0, 0, 0, 138, 0, 239,
	215, 282, 0, 217, 238, 181, 272, 228, 281, 291,
	292, 269, 289, 296, 257, 119, 268, 280, 135, 251,
	0, 0, 0, 121, 278, 264, 193, 167, 168, 120,
	0, 234, 144, 152, 140, 207, 275, 276, 139, 299,
	127, 288, 123, 128, 287, 201, 271, 279, 194, 186,
	122, 277, 192, 185, 173, 148, 159, 225, 183, 226,
	160, 197, 196, 198, 0, 0, 0, 262, 285, 300,
	132, 0, 270, 294, 295, 0, 229, 133, 153, 147,
	224, 151, 199, 129, 162, 259, 172, 182, 233, 298,
	214, 240, 136, 284, 260, 412, 423, 418, 419, 416,
	417, 415, 414, 413, 426, 404, 405, 406, 407, 409,
	0, 420, 421, 408, 114, 124, 179, 297, 231, 150,
	286, 0, 0, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 117, 125, 131,
	137, 142, 146, 149, 155, 158, 161, 163, 164, 165,
	170, 184, 188, 189, 190, 191, 202, 203, 204, 206,
	209, 210, 211, 212, 213, 216, 218, 219, 220, 221,
	222, 223, 232, 235, 242, 243, 244, 245, 246, 248,
	250, 253, 254, 255, 256, 263, 267, 273, 274, 283,
	290, 293, 0, 0, 0, 0, 118, 169, 187, 249,
	252, 258, 265, 320, 321, 322, 237, 174, 175, 208,
	0, 0, 0, 0, 230, 200, 166, 247, 145, 176,
	141, 0, 0, 0, 178, 0, 0, 0, 180, 0,
	0, 261, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 111, 112, 113, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	696, 695, 705, 706, 698, 699, 700, 701, 702, 703,
	704, 697, 0, 0, 707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 0, 0, 0, 323, 0, 0, 0, 0, 227,
	0, 266, 157, 177, 130, 171, 115, 126, 0, 156,
	205, 236, 241, 0, 0, 0, 138, 0, 239, 215,
	282, 0, 217, 238, 181, 272, 228, 281, 291, 292,
	269, 289, 296, 257, 119, 268, 280, 135, 251, 0,
	0, 0, 121, 278, 264, 193, 167, 168, 120, 0,
	234, 144, 152, 140, 207, 275, 276, 139, 299, 127,
	288, 123, 128, 287, 201, 271, 279, 194, 186, 122,
	277, 192, 185, 173, 148, 159, 225, 183, 226, 160,
	197, 196, 198, 0, 0, 0, 262, 285, 300, 132,
	0, 270, 294, 295, 0, 229, 133, 153, 147, 224,
	151, 199, 129, 162, 259, 172, 182, 233, 298, 214,
	240, 136, 284, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 124, 179, 297, 231, 150, 286,
	0, 0, 143, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 116, 117, 125, 131, 137,
	142, 146, 149, 155, 158, 161, 163, 164, 165, 170,
	184, 188, 189, 190, 191, 202, 203, 204, 206, 209,
	210, 211, 212, 213, 216, 218, 219, 220, 221, 222,
	223, 232, 235, 242, 243, 244, 245, 246, 248, 250,
	253, 254, 255, 256, 263, 267, 273, 274, 283, 290,
	293, 0, 0, 0, 0, 118, 169, 187, 249, 252,
	258, 265, 320, 321, 322, 237, 174, 175, 208, 0,
	0, 0, 801, 230, 200, 166, 247, 145, 176, 141,
	0, 0, 0, 178, 0, 0, 0, 180, 0, 0,
	261, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 112, 113, 0, 803, 0, 0, 0, 0, 687,
	0, 134, 0, 0, 0, 0, 0, 683, 684, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 323, 0, 0, 0, 0, 227, 0,
	266, 157, 177, 130, 171, 115, 126, 0, 156, 205,
	236, 241, 0, 0, 0, 138, 0, 239, 215, 282,
	0, 217, 238, 181, 272, 228, 281, 291, 292, 269,
	289, 296, 257, 119, 268, 280, 135, 251, 0, 0,
	0, 121, 278, 264, 193, 167, 168, 120, 0, 234,
	144, 152, 140, 207, 275, 276, 139, 299, 127, 288,
	123, 128, 287, 201, 271, 279, 194, 186, 122, 277,
	192, 185, 173, 148, 159, 225, 183, 226, 160, 197,
	196, 198, 0, 0, 0, 262, 285, 300, 132, 0,
	270, 294, 295, 0, 229, 133, 153, 147, 224, 151,
	199, 129, 162, 259, 172, 182, 233, 298, 214, 240,
	136, 284, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 124, 179, 297, 231, 150, 286, 0,
	0, 143, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 116, 117, 125, 131, 137, 142,
	146, 149, 155, 158, 161, 163, 164, 165, 170, 184,
	188, 189, 190, 191, 202, 203, 204, 206, 209, 210,
	211, 212, 213, 216, 218, 219, 220, 221, 222, 223,
	232, 235, 242, 243, 244, 245, 246, 248, 250, 253,
	254, 255, 256, 263, 267, 273, 274, 283, 290, 293,
	0, 0, 0, 0, 118, 169, 187, 249, 252, 258,
	265, 320, 321, 322, 237, 174, 175, 208, 0, 0,
	0, 0, 230, 200, 166, 247, 145, 176, 141, 0,
	0, 0, 178, 0, 0, 0, 180, 0, 0, 261,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 111,
	112, 113, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 0, 0, 0, 0, 0, 98, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 101,
	102, 0, 97, 0, 0, 0, 104, 227, 0, 266,
	157, 177, 130, 171, 115, 126, 0, 156, 205, 236,
	241, 0, 0, 0, 138, 0, 239, 215, 282, 0,
	217, 238, 181, 272, 228, 281, 291, 292, 269, 289,
	296, 257, 119, 268, 280, 135, 251, 0, 0, 0,
	121, 278, 264, 193, 167, 168, 120, 0, 234, 144,
	152, 140, 207, 275, 276, 139, 299, 127, 288, 123,
	128, 287, 201, 271, 279, 194, 186, 122, 277, 192,
	185, 173, 148, 159, 225, 183, 226, 160, 197, 196,
	198, 0, 0, 0, 262, 285, 300, 132, 0, 270,
	294, 295, 0, 229, 133, 153, 147, 224, 151, 199,
	129, 162, 259, 172, 182, 233, 298, 214, 240, 136,
	284, 260, 0, 100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 114, 124, 179, 297, 231, 150, 286, 0, 0,
	143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 117, 125, 131, 137, 142, 146,
	149, 155, 158, 161, 163, 164, 165, 170, 184, 188,
	189, 190, 191, 202, 203, 204, 206, 209, 210, 211,
	212, 213, 216, 218, 219, 220, 221, 222, 223, 232,
	235, 242, 243, 244, 245, 246, 248, 250, 253, 254,
	255, 256, 263, 267, 273, 274, 283, 290, 293, 0,
	0, 0, 0, 118, 169, 187, 249, 252, 258, 265,
	106, 107, 108, 237, 174, 175, 36, 0, 0, 0,
	0, 230, 200, 166, 247, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 145, 176, 141,
	0, 0, 0, 178, 0, 0, 0, 180, 0, 0,
	261, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 70, 0, 0,
	111, 112, 113, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 323, 0, 0, 0, 0, 227, 0,
	266, 157, 177, 130, 171, 115, 126, 0, 156, 205,
	236, 241, 0, 0, 0, 138, 0, 239, 215, 282,
	0, 217, 238, 181, 272, 228, 281, 291, 292, 269,
	289, 296, 257, 119, 268, 280, 135, 251, 0, 0,
	0, 121, 278, 264, 193, 167, 168, 120, 0, 234,
	144, 152, 140, 207, 275, 276, 139, 299, 127, 288,
	123, 128, 287, 201, 271, 279, 194, 186, 122, 277,
	192, 185, 173, 148, 159, 225, 183, 226, 160, 197,
	196, 198, 0, 0, 0, 262, 285, 300, 132, 0,
	270, 294, 295, 0, 229, 133, 153, 147, 224, 151,
	199, 129, 162, 259, 172, 182, 233, 298, 214, 240,
	136, 284, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 124, 179, 297, 231, 150, 286, 0,
	0, 143, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 116, 117, 125, 131, 137, 142,
	146, 149, 155, 158, 161, 163, 164, 165, 170, 184,
	188, 189, 190, 191, 202, 203, 204, 206, 209, 210,
	211, 212, 213, 216, 218, 219, 220, 221, 222, 223,
	232, 235, 242, 243, 244, 245, 246, 248, 250, 253,
	254, 255, 256, 263, 267, 273, 274, 283, 290, 293,
	0, 0, 0, 0, 118, 169, 187, 249, 252, 258,
	265, 320, 321, 322, 237, 819, 820, 0, 0, 0,
	0, 65, 230, 200, 166, 247, 208, 0, 0, 0,
	1101, 0, 0, 0, 0, 145, 176, 141, 0, 0,
	0, 178, 0, 0, 0, 180, 0, 0, 261, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 112,
	113, 0, 1103, 0, 0, 0, 0, 0, 0, 134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 0, 0,
	0, 323, 0, 0, 0, 0, 227, 0, 266, 157,
	177, 130, 171, 115, 126, 0, 156, 205, 236, 241,
	0, 0, 0, 138, 0, 239, 215, 282, 0, 217,
	238, 181, 272, 228, 281, 291, 292, 269, 289, 296,
	257, 119, 268, 280, 135, 251, 0, 0, 0, 121,
	278, 264, 193, 167, 168, 120, 0, 234, 144, 152,
	140, 207, 275, 276, 139, 299, 127, 288, 123, 128,
	287, 201, 271, 279, 194, 186, 122, 277, 192, 185,
	173, 148, 159, 225, 183, 226, 160, 197, 196, 198,
	0, 0, 0, 262, 285, 300, 132, 0, 270, 294,
	295, 0, 229, 133, 153, 147, 224, 151, 199, 129,
	162, 259, 172, 182, 233, 298, 214, 240, 136, 284,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 124, 179, 297, 231, 150, 286, 0, 0, 143,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 116, 117, 125, 131, 137, 142, 146, 149,
	155, 158, 161, 163, 164, 165, 170, 184, 188, 189,
	190, 191, 202, 203, 204, 206, 209, 210, 211, 212,
	213, 216, 218, 219, 220, 221, 222, 223, 232, 235,
	242, 243, 244, 245, 246, 248, 250, 253, 254, 255,
	256, 263, 267, 273, 274, 283, 290, 293, 0, 0,
	0, 0, 118, 169, 187, 249, 252, 258, 265, 320,
	321, 322, 237, 174, 175, 36, 0, 0, 0, 0,
	230, 200, 166, 247, 0, 0, 0, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 176, 141, 0,
	0, 0, 178, 0, 0, 0, 180, 0, 0, 261,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 70, 0, 0, 111,
	112, 113, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 323, 0, 0, 0, 0, 227, 0, 266,
	157, 177, 130, 171, 115, 126, 0, 156, 205, 236,
	241, 0, 0, 0, 138, 0, 239, 215, 282, 0,
	217, 238, 181, 272, 228, 281, 291, 292, 269, 289,
	296, 257, 119, 268, 280, 135, 251, 0, 0, 0,
	121, 278, 264, 193, 167, 168, 120, 0, 234, 144,
	152, 140, 207, 275, 276, 139, 299, 127, 288, 123,
	128, 287, 201, 271, 279, 194, 186, 122, 277, 192,
	185, 173, 148, 159, 225, 183, 226, 160, 197, 196,
	198, 0, 0, 0, 262, 285, 300, 132, 0, 270,
	294, 295, 0, 229, 133, 153, 147, 224, 151, 199,
	129, 162, 259, 172, 182, 233, 298, 214, 240, 136,
	284, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 114, 124, 179, 297, 231, 150, 286, 0, 0,
	143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 117, 125, 131, 137, 142, 146,
	149, 155, 158, 161, 163, 164, 165, 170, 184, 188,
	189, 190, 191, 202, 203, 204, 206, 209, 210, 211,
	212, 213, 216, 218, 219, 220, 221, 222, 223, 232,
	235, 242, 243, 244, 245, 246, 248, 250, 253, 254,
	255, 256, 263, 267, 273, 274, 283, 290, 293, 0,
	0, 0, 0, 118, 169, 187, 249, 252, 258, 265,
	320, 321, 322, 237, 174, 175, 208, 0, 0, 0,
	1101, 230, 200, 166, 247, 145, 176, 141, 0, 0,
	0, 178, 0, 0, 0, 180, 0, 0, 261, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 112,
	113, 0, 1103, 0, 0, 0, 0, 0, 0, 134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 0, 0,
	0, 323, 0, 0, 0, 0, 227, 0, 266, 157,
	177, 130, 171, 115, 126, 0, 156, 205, 236, 241,
	0, 0, 0, 138, 0, 239, 215, 282, 0, 1105,
	238, 181, 272, 228, 281, 291, 292, 269, 289, 296,
	257, 119, 268, 280, 135, 251, 0, 0, 0, 121,
	278, 264, 193, 167, 168, 120, 0, 234, 144, 152,
	140, 207, 275, 276, 139, 299, 127, 288, 123, 128,
	287, 201, 271, 279, 194, 186, 122, 277, 192, 185,
	173, 148, 159, 225, 183, 226, 160, 197, 196, 198,
	0, 0, 0, 262, 285, 300, 132, 0, 270, 294,
	295, 0, 229, 133, 153, 147, 224, 151, 199, 129,
	162, 259, 172, 182, 233, 298, 214, 240, 136, 284,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 124, 179, 297, 231, 150, 286, 0, 0, 143,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 116, 117, 125, 131, 137, 142, 146, 149,
	155, 158, 161, 163, 164, 165, 170, 184, 188, 189,
	190, 191, 202, 203, 204, 206, 209, 210, 211, 212,
	213, 216, 218, 219, 220, 221, 222, 223, 232, 235,
	242, 243, 244, 245, 246, 248, 250, 253, 254, 255,
	256, 263, 267, 273, 274, 283, 290, 293, 0, 0,
	0, 0, 118, 169, 187, 249, 252, 258, 265, 320,
	321, 322, 237, 174, 175, 208, 0, 0, 0, 0,
	230, 200, 166, 247, 145, 176, 141, 0, 0, 0,
	178, 0, 0, 0, 180, 0, 0, 261, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 112, 113,
	0, 0, 1067, 0, 0, 1068, 0, 0, 134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 0, 0, 0,
	323, 0, 0, 0, 0, 227, 0, 266, 157, 177,
	130, 171, 115, 126, 0, 156, 205, 236, 241, 0,
	0, 0, 138, 0, 239, 215, 282, 0, 217, 238,
	181, 272, 228, 281, 291, 292, 269, 289, 296, 257,
	119, 268, 280, 135, 251, 0, 0, 0, 121, 278,
	264, 193, 167, 168, 120, 0, 234, 144, 152, 140,
	207, 275, 276, 139, 299, 127, 288, 123, 128, 287,
	201, 271, 279, 194, 186, 122, 277, 192, 185, 173,
	148, 159, 225, 183, 226, 160, 197, 196, 198, 0,
	0, 0, 262, 285, 300, 132, 0, 270, 294, 295,
	0, 229, 133, 153, 147, 224, 151, 199, 129, 162,
	259, 172, 182, 233, 298, 214, 240, 136, 284, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 114,
	124, 179, 297, 231, 150, 286, 0, 0, 143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 116, 117, 125, 131, 137, 142, 146, 149, 155,
	158, 161, 163, 164, 165, 170, 184, 188, 189, 190,
	191, 202, 203, 204, 206, 209, 210, 211, 212, 213,
	216, 218, 219, 220, 221, 222, 223, 232, 235, 242,
	243, 244, 245, 246, 248, 250, 253, 254, 255, 256,
	263, 267, 273, 274, 283, 290, 293, 0, 0, 0,
	0, 118, 169, 187, 249, 252, 258, 265, 320, 321,
	322, 237, 174, 175, 208, 0, 0, 0, 0, 230,
	200, 166, 247, 145, 176, 141, 0, 0, 0, 178,
	0, 0, 0, 180, 0, 0, 261, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1012, 111, 112, 113, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 0, 0, 0, 323,
	0, 0, 0, 0, 227, 0, 266, 157, 177, 130,
	171, 115, 126, 0, 156, 205, 236, 241, 0, 0,
	0, 138, 0, 239, 215, 282, 0, 217, 238, 181,
	272, 228, 281, 291, 292, 269, 289, 296, 257, 119,
	268, 280, 135, 251, 0, 0, 0, 121, 278, 264,
	193, 167, 168, 120, 0, 234, 144, 152, 140, 207,
	275, 276, 139, 299, 127, 288, 123, 128, 287, 201,
	271, 279, 194, 186, 122, 277, 192, 185, 173, 148,
	159, 225, 183, 226, 160, 197, 196, 198, 0, 0,
	0, 262, 285, 300, 132, 0, 270, 294, 295, 0,
	229, 133, 153, 147, 224, 151, 199, 129, 162, 259,
	172, 182, 233, 298, 214, 240, 136, 284, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 124,
	179, 297, 231, 150, 286, 0, 0, 143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 117, 125, 131, 137, 142, 146, 149, 155, 158,
	161, 163, 164, 165, 170, 184, 188, 189, 190, 191,
	202, 203, 204, 206, 209, 210, 211, 212, 213, 216,
	218, 219, 220, 221, 222, 223, 232, 235, 242, 243,
	244, 245, 246, 248, 250, 253, 254, 255, 256, 263,
	267, 273, 274, 283, 290, 293, 0, 0, 0, 0,
	118, 169, 187, 249, 252, 258, 265, 320, 321, 322,
	237, 174, 175, 208, 0, 0, 0, 0, 230, 200,
	166, 247, 145, 176, 141, 0, 0, 0, 178, 0,
	0, 0, 180, 0, 0, 261, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 70, 0, 0, 111, 112, 113, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 323, 0,
	0, 0, 0, 227, 0, 266, 157, 177, 130, 171,
	115, 126, 0, 156, 205, 236, 241, 0, 0, 0,
	138, 0, 239, 215, 282, 0, 217, 238, 181, 272,
	228, 281, 291, 292, 269, 289, 296, 257, 119, 268,
	280, 135, 251, 0, 0, 0, 121, 278, 264, 193,
	167, 168, 120, 0, 234, 144, 152, 140, 207, 275,
	276, 139, 299, 127, 288, 123, 128, 287, 201, 271,
	279, 194, 186, 122, 277, 192, 185, 173, 148, 159,
	225, 183, 226, 160, 197, 196, 198, 0, 0, 0,
	262, 285, 300, 132, 0, 270, 294, 295, 0, 229,
	133, 153, 147, 224, 151, 199, 129, 162, 259, 172,
	182, 233, 298, 214, 240, 136, 284, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 124, 179,
	297, 231, 150, 286, 0, 0, 143, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 116,
	117, 125, 131, 137, 142, 146, 149, 155, 158, 161,
	163, 164, 165, 170, 184, 188, 189, 190, 191, 202,
	203, 204, 206, 209, 210, 211, 212, 213, 216, 218,
	219, 220, 221, 222, 223, 232, 235, 242, 243, 244,
	245, 246, 248, 250, 253, 254, 255, 256, 263, 267,
	273, 274, 283, 290, 293, 0, 0, 0, 0, 118,
	169, 187, 249, 252, 258, 265, 320, 321, 322, 237,
	819, 820, 208, 0, 0, 0, 0, 230, 200, 166,
	247, 145, 176, 141, 0, 0, 0, 178, 0, 0,
	0, 180, 0, 0, 261, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 112, 113, 0, 1103, 0,
	0, 0, 0, 0, 0, 134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 0, 0, 0, 323, 0, 0,
	0, 0, 227, 0, 266, 157, 177, 130, 171, 115,
	126, 0, 156, 205, 236, 241, 0, 0, 0, 138,
	0, 239, 215, 282, 0, 217, 238, 181, 272, 228,
	281, 291, 292, 269, 289, 296, 257, 119, 268, 280,
	135, 251, 0, 0, 0, 121, 278, 264, 193, 167,
	168, 120, 0, 234, 144, 152, 140, 207, 275, 276,
	139, 299, 127, 288, 123, 128, 287, 201, 271, 279,
	194, 186, 122, 277, 192, 185, 173, 148, 159, 225,
	183, 226, 160, 197, 196, 198, 0, 0, 0, 262,
	285, 300, 132, 0, 270, 294, 295, 0, 229, 133,
	153, 147, 224, 151, 199, 129, 162, 259, 172, 182,
	233, 298, 214, 240, 136, 284, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 114, 124, 179, 297,
	231, 150, 286, 0, 0, 143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 117,
	125, 131, 137, 142, 146, 149, 155, 158, 161, 163,
	164, 165, 170, 184, 188, 189, 190, 191, 202, 203,
	204, 206, 209, 210, 211, 212, 213, 216, 218, 219,
	220, 221, 222, 223, 232, 235, 242, 243, 244, 245,
	246, 248, 250, 253, 254, 255, 256, 263, 267, 273,
	274, 283, 290, 293, 0, 0, 0, 0, 118, 169,
	187, 249, 252, 258, 265, 320, 321, 322, 237, 174,
	175, 208, 0, 0, 0, 0, 230, 200, 166, 247,
	145, 176, 141, 0, 0, 0, 178, 0, 0, 0,
	180, 0, 0, 261, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	70, 0, 0, 111, 112, 113, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 0, 0, 0, 323, 0, 0, 0,
	0, 227, 0, 266, 157, 177, 130, 171, 115, 126,
	0, 156, 205, 236, 241, 0, 0, 0, 138, 0,
	239, 215, 282, 0, 217, 238, 181, 272, 228, 281,
	291, 292, 269, 289, 296, 257, 119, 268, 280, 135,
	251, 0, 0, 0, 121, 278, 264, 193, 167, 168,
	120, 0, 234, 144, 152, 140, 207, 275, 276, 139,
	299, 127, 288, 123, 128, 287, 201, 271, 279, 194,
	186, 122, 277, 192, 185, 173, 148, 159, 225, 183,
	226, 160, 197, 196, 198, 0, 0, 0, 262, 285,
	300, 132, 0, 270, 294, 295, 0, 229, 133, 153,
	147, 224, 151, 199, 129, 162, 259, 172, 182, 233,
	298, 214, 240, 136, 284, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 124, 179, 297, 231,
	150, 286, 0, 0, 143, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 116, 117, 125,
	131, 137, 142, 146, 149, 155, 158, 161, 163, 164,
	165, 170, 184, 188, 189, 190, 191, 202, 203, 204,
	206, 209, 210, 211, 212, 213, 216, 218, 219, 220,
	221, 222, 223, 232, 235, 242, 243, 244, 245, 246,
	248, 250, 253, 254, 255, 256, 263, 267, 273, 274,
	283, 290, 293, 0, 0, 0, 0, 118, 169, 187,
	249, 252, 258, 265, 320, 321, 322, 237, 174, 175,
	208, 0, 0, 0, 0, 230, 200, 166, 247, 145,
	176, 141, 0, 0, 0, 178, 0, 0, 0, 180,
	0, 0, 261, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 112, 113, 0, 1228, 0, 0, 0,
	0, 0, 0, 134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 0, 0, 0, 323, 0, 0, 0, 0,
	227, 0, 266, 157, 177, 130, 171, 115, 126, 0,
	156, 205, 236, 241, 0, 0, 0, 138, 0, 239,
	215, 282, 0, 217, 238, 181, 272, 228, 281, 291,
	292, 269, 289, 296, 257, 119, 268, 280, 135, 251,
	0, 0, 0, 121, 278, 264, 193, 167, 168, 120,
	0, 234, 144, 152, 140, 207, 275, 276, 139, 299,
	127, 288, 123, 128, 287, 201, 271, 279, 194, 186,
	122, 277, 192, 185, 173, 148, 159, 225, 183, 226,
	160, 197, 196, 198, 0, 0, 0, 262, 285, 300,
	132, 0, 270, 294, 295, 0, 229, 133, 153, 147,
	224, 151, 199, 129, 162, 259, 172, 182, 233, 298,
	214, 240, 136, 284, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 124, 179, 297, 231, 150,
	286, 0, 0, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 117, 125, 131,
	137, 142, 146, 149, 155, 158, 161, 163, 164, 165,
	170, 184, 188, 189, 190, 191, 202, 203, 204, 206,
	209, 210, 211, 212, 213, 216, 218, 219, 220, 221,
	222, 223, 232, 235, 242, 243, 244, 245, 246, 248,
	250, 253, 254, 255, 256, 263, 267, 273, 274, 283,
	290, 293, 0, 0, 0, 0, 118, 169, 187, 249,
	252, 258, 265, 320, 321, 322, 237, 174, 175, 0,
	208, 0, 0, 0, 230, 200, 166, 247, 806, 145,
	176, 141, 0, 0, 0, 178, 0, 0, 0, 180,
	0, 0, 261, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 112, 113, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 0, 0, 0, 323, 0, 0, 0, 0,
	227, 0, 266, 157, 177, 130, 171, 115, 126, 0,
	156, 205, 236, 241, 0, 0, 0, 138, 0, 239,
	215, 282, 0, 217, 238, 181, 272, 228, 281, 291,
	292, 269, 289, 296, 257, 119, 268, 280, 135, 251,
	0, 0, 0, 121, 278, 264, 193, 167, 168, 120,
	0, 234, 144, 152, 140, 207, 275, 276, 139, 299,
	127, 288, 123, 128, 287, 201, 271, 279, 194, 186,
	122, 277, 192, 185, 173, 148, 159, 225, 183, 226,
	160, 197, 196, 198, 0, 0, 0, 262, 285, 300,
	132, 0, 270, 294, 295, 0, 229, 133, 153, 147,
	224, 151, 199, 129, 162, 259, 172, 182, 233, 298,
	214, 240, 136, 284, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 124, 179, 297, 231, 150,
	286, 0, 0, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 117, 125, 131,
	137, 142, 146, 149, 155, 158, 161, 163, 164, 165,
	170, 184, 188, 189, 190, 191, 202, 203, 204, 206,
	209, 210, 211, 212, 213, 216, 218, 219, 220, 221,
	222, 223, 232, 235, 242, 243, 244, 245, 246, 248,
	250, 253, 254, 255, 256, 263, 267, 273, 274, 283,
	290, 293, 0, 0, 0, 0, 118, 169, 187, 249,
	252, 258, 265, 320, 321, 322, 237, 174, 175, 208,
	0, 0, 0, 0, 230, 200, 166, 247, 145, 176,
	141, 0, 0, 0, 178, 0, 0, 0, 180, 0,
	0, 261, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 111, 112, 113, 0, 803, 0, 0, 0, 0,
	0, 0, 134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 0, 0, 0, 323, 0, 0, 0, 0, 227,
	0, 266, 157, 177, 130, 171, 115, 126, 0, 156,
	205, 236, 241, 0, 0, 0, 138, 0, 239, 215,
	282, 0, 217, 238, 181, 272, 228, 281, 291, 292,
	269, 289, 296, 257, 119, 268, 280, 135, 251, 0,
	0, 0, 121, 278, 264, 193, 167, 168, 120, 0,
	234, 144, 152, 140, 207, 275, 276, 139, 299, 127,
	288, 123, 128, 287, 201, 271, 279, 194, 186, 122,
	277, 192, 185, 173, 148, 159, 225, 183, 226, 160,
	197, 196, 198, 0, 0, 0, 262, 285, 300, 132,
	0, 270, 294, 295, 0, 229, 133, 153, 147, 224,
	151, 199, 129, 162, 259, 172, 182, 233, 298, 214,
	240, 136, 284, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 124, 179, 297, 231, 150, 286,
	0, 0, 143, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 116, 117, 125, 131, 137,
	142, 146, 149, 155, 158, 161, 163, 164, 165, 170,
	184, 188, 189, 190, 191, 202, 203, 204, 206, 209,
	210, 211, 212, 213, 216, 218, 219, 220, 221, 222,
	223, 232, 235, 242, 243, 244, 245, 246, 248, 250,
	253, 254, 255, 256, 263, 267, 273, 274, 283, 290,
	293, 0, 0, 0, 0, 118, 169, 187, 249, 252,
	258, 265, 320, 321, 322, 237, 174, 175, 208, 0,
	0, 0, 0, 230, 200, 166, 247, 145, 176, 842,
	0, 0, 0, 178, 0, 0, 0, 180, 0, 0,
	261, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 112, 113, 0, 841, 0, 0, 0, 0, 0,
	0, 134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 323, 0, 0, 0, 0, 227, 0,
	266, 157, 177, 130, 171, 115, 126, 0, 156, 205,
	236, 241, 0, 0, 0, 138, 0, 239, 215, 282,
	0, 217, 238, 181, 272, 228, 281, 291, 292, 269,
	289, 296, 257, 119, 268, 280, 135, 251, 0, 0,
	0, 121, 278, 264, 193, 167, 168, 120, 0, 234,
	144, 152, 140, 207, 275, 276, 139, 299, 127, 288,
	123, 128, 287, 201, 271, 279, 194, 186, 122, 277,
	192, 185, 173, 148, 159, 225, 183, 226, 160, 197,
	196, 198, 0, 0, 0, 262, 285, 300, 132, 0,
	270, 294, 295, 0, 229, 133, 153, 147, 224, 151,
	199, 129, 162, 259, 172, 182, 233, 298, 214, 240,
	136, 284, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 124, 179, 297, 231, 150, 286, 0,
	0, 143, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 116, 117, 125, 131, 137, 142,
	146, 149, 155, 158, 161, 163, 164, 165, 170, 184,
	188, 189, 190, 191, 202, 203, 204, 206, 209, 210,
	211, 212, 213, 216, 218, 219, 220, 221, 222, 223,
	232, 235, 242, 243, 244, 245, 246, 248, 250, 253,
	254, 255, 256, 263, 267, 273, 274, 283, 290, 293,
	0, 0, 0, 0, 118, 169, 187, 249, 252, 258,
	265, 320, 321, 322, 237, 174, 175, 0, 0, 462,
	0, 0, 230, 200, 166, 247, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 176, 141, 0, 0,
	0, 178, 0, 0, 0, 180, 0, 0, 261, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 112,
	113, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 0, 0,
	0, 323, 0, 0, 0, 0, 227, 0, 266, 157,
	177, 130, 171, 115, 126, 0, 156, 205, 236, 241,
	0, 0, 0, 138, 0, 239, 215, 282, 0, 217,
	238, 181, 272, 228, 281, 291, 292, 269, 289, 296,
	257, 119, 268, 280, 135, 251, 0, 0, 0, 121,
	278, 264, 193, 167, 168, 120, 0, 234, 144, 152,
	140, 207, 275, 276, 139, 299, 127, 288, 123, 128,
	287, 201, 271, 279, 194, 186, 122, 277, 192, 185,
	173, 148, 159, 225, 183, 226, 160, 197, 196, 198,
	0, 0, 0, 262, 285, 300, 132, 0, 270, 294,
	295, 0, 229, 133, 153, 147, 224, 151, 199, 129,
	162, 259, 172, 182, 233, 298, 214, 240, 136, 284,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 124, 179, 297, 231, 150, 286, 0, 0, 143,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 116, 117, 125, 131, 137, 142, 146, 149,
	155, 158, 161, 163, 164, 165, 170, 184, 188, 189,
	190, 191, 202, 203, 204, 206, 209, 210, 211, 212,
	213, 216, 218, 219, 220, 221, 222, 223, 232, 235,
	242, 243, 244, 245, 246, 248, 250, 253, 254, 255,
	256, 263, 267, 273, 274, 283, 290, 293, 0, 0,
	0, 0, 118, 169, 187, 249, 252, 258, 265, 320,
	321, 322, 237, 174, 175, 208, 0, 0, 0, 0,
	230, 200, 166, 247, 145, 176, 141, 0, 0, 0,
	178, 0, 0, 0, 180, 0, 0, 261, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 112, 113,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 0, 315, 0,
	323, 0, 0, 0, 0, 227, 0, 266, 157, 177,
	130, 171, 115, 126, 0, 156, 205, 236, 241, 0,
	0, 0, 138, 0, 239, 215, 282, 0, 217, 238,
	181, 272, 228, 281, 291, 292, 269, 289, 296, 257,
	119, 268, 280, 135, 251, 0, 0, 0, 121, 278,
	264, 193, 167, 168, 120, 0, 234, 144, 152, 140,
	207, 275, 276, 139, 299, 127, 288, 123, 128, 287,
	201, 271, 279, 194, 186, 122, 277, 192, 185, 173,
	148, 159, 225, 183, 226, 160, 197, 196, 198, 0,
	0, 0, 262, 285, 300, 132, 0, 270, 294, 295,
	0, 229, 133, 153, 147, 224, 151, 199, 129, 162,
	259, 172, 182, 233, 298, 214, 240, 136, 284, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 114,
	124, 179, 297, 231, 150, 286, 0, 0, 143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 116, 117, 125, 131, 137, 142, 146, 149, 155,
	158, 161, 163, 164, 165, 170, 184, 188, 189, 190,
	191, 202, 203, 204, 206, 209, 210, 211, 212, 213,
	216, 218, 219, 220, 221, 222, 223, 232, 235, 242,
	243, 244, 245, 246, 248, 250, 253, 254, 255, 256,
	263, 267, 273, 274, 283, 290, 293, 0, 0, 0,
	0, 118, 169, 187, 249, 252, 258, 265, 320, 321,
	322, 237, 174, 175, 208, 0, 0, 0, 0, 230,
	200, 166, 247, 145, 176, 141, 0, 0, 0, 178,
	0, 0, 0, 180, 0, 0, 261, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 112, 113, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 0, 0, 0, 323,
	0, 0, 0, 0, 227, 0, 266, 157, 177, 130,
	171, 115, 126, 0, 156, 205, 236, 241, 0, 0,
	0, 138, 0, 239, 215, 282, 0, 217, 238, 181,
	272, 228, 281, 291, 292, 269, 289, 296, 257, 119,
	268, 280, 135, 251, 0, 0, 0, 121, 278, 264,
	193, 167, 168, 120, 0, 234, 144, 152, 140, 207,
	275, 276, 139, 299, 127, 288, 123, 128, 287, 201,
	271, 279, 194, 186, 122, 277, 192, 185, 173, 148,
	159, 225, 183, 226, 160, 197, 196, 198, 0, 0,
	0, 262, 285, 300, 132, 0, 270, 294, 295, 0,
	229, 133, 153, 147, 224, 151, 199, 129, 162, 259,
	172, 182, 233, 298, 214, 240, 136, 284, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 124,
	179, 297, 231, 150, 286, 0, 0, 143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 117, 125, 131, 137, 142, 146, 149, 155, 158,
	161, 163, 164, 165, 170, 184, 188, 189, 190, 191,
	202, 203, 204, 206, 209, 210, 211, 212, 213, 216,
	218, 219, 220, 221, 222, 223, 232, 235, 242, 243,
	244, 245, 246, 248, 250, 253, 254, 255, 256, 263,
	267, 273, 274, 283, 290, 293, 0, 0, 0, 0,
	118, 169, 187, 249, 252, 258, 265, 320, 321, 322,
	237, 174, 175, 0, 0, 0, 0, 0, 230, 200,
	166, 247,
}

var yyPact = [...]int{
	2789, -1000, -299, 1121, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1058, 867, -1000, -1000, -1000, -1000,
	-1000, -1000, 340, 13609, 37, 207, -26, 19037, 204, -21,
	19396, -1000, 77, -1000, 63, 19396, 70, -3, -1000, -1000,
	-37, -39, -1000, 11096, -263, -1000, 475, -1000, -1000, -260,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	869, 1049, 1057, 1064, 1121, 1204, -1000, 9636, 154, 154,
	18678, 7816, -1000, -1000, 368, 19396, 182, 19396, -96, 174,
	146, 146, 146, 196, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 190, 19396, 591, 591, 285, -1000, 19396, 145, 591,
	145, 173, 145, 145, -1000, 19396, -1000, 242, -1000, -1000,
	-1000, -1000, -1000, -1000, 19396, 591, 975, 369, 153, 5149,
	-1000, 533, -1000, 5149, 87, 5149, 11, 1079, 88, 24,
	-1000, 591, -58, -1000, -1000, -1000, -1000, -1000, -1000, 164,
	-1000, -1000, 19396, -51, 217, 353, -1000, -1000, -1000, -1000,
	-1000, -1000, 649, 568, -1000, 11096, 1790, 619, 619, -1000,
	-1000, 227, -1000, -1000, 12173, 12173, 12173, 12173, 12173, 12173,
	12173, 12173, 12173, 12532, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 619, 240,
	-1000, 10733, 619, 619, 619, 619, 619, 619, 619, 619,
	11096, 619, 619, 619, 619, 619, 619, 619, 619, 619,
	619, 619, 619, 619, 619, 619, 619, -1000, -1000, -250,
	-290, 19396, -1000, 19396, 558, 168, 1058, -1000, 867, -1000,
	-1000, -1000, 996, 11096, 11096, 869, 938, 9636, -1000, -1000,
	982, -1000, -1000, -1000, -1000, 414, 1090, -1000, 13250, 239,
	17592, 16155, 19396, 816, 804, -1000, -1000, 238, 813, 7435,
	-73, -1000, -1000, -1000, 197, 18310, -1000, -1000, -1000, 971,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 796,
	19396, -1000, 2824, -1000, 591, 1044, -24, 19396, 591, 378,
	591, 19396, 146, 19396, 5149, 5149, 5149, 97, 128, 124,
	19396, 807, 160, 19396, 1023, 893, 19396, 145, 591, 591,
	-1000, 6673, -1000, 5149, 369, -1000, 549, 11096, 5149, 5149,
	5149, 19396, 5149, 5149, -1000, -1000, -1000, 380, 487, -1000,
	-1000, -1000, -1000, -1000, 5149, 5149, -1000, 1089, 377, -1000,
	-1000, -1000, -1000, 11096, 313, -1000, 890, -1000, -1000, -63,
	66, -1000, 19396, -1000, 1121, -1000, -1000, -1000, -100, -1000,
	-1000, 11096, 11096, 11096, 11096, 618, 424, -1000, 385, 12173,
	522, 399, 12173, 12173, 12173, 12173, 12173, 12173, 12173, 12173,
	12173, 12173, 12173, 12173, 12173, 12173, 12173, 639, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 591, -1000, 1118, 967,
	967, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	12891, -1000, 8184, 6673, 655, 791, 1058, 9636, 9636, 11096,
	11096, 10362, 9999, 9636, 976, 367, 568, 19396, -1000, -1000,
	11814, -1000, -1000, -1000, -1000, -1000, 569, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 19396, 19396, 9636, 9636, 9636, 9636,
	9636, 591, 591, 591, 750, 562, -1000, -1000, 19396, 1057,
	655, 982, -1000, 1098, 281, 580, 806, -1000, 601, 1058,
	15437, 821, -1000, 982, -1000, -1000, -1000, 19396, 424, -1000,
	-1000, 17951, -1000, -1000, 6292, 110, 19396, -1000, 739, 1143,
	-1000, -1000, -1000, -1000, 1042, 13980, 14348, 15078, 619, -1000,
	-1000, 110, 732, 16155, 19396, -1000, -1000, 16155, 19396, 5911,
	7054, -73, -1000, 793, -1000, -64, -70, 8910, 8547, 251,
	-1000, -1000, -1000, -1000, 4768, 427, 603, 435, -2, -1000,
	-1000, -1000, 823, -1000, 823, 823, 823, 823, 33, 33,
	33, 33, -1000, -1000, -1000, -1000, -1000, 872, 871, -1000,
	823, 823, 823, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 863, 863, 863, 826, 826, 876, 867, 19396, 155,
	1037, 5149, 1022, 5149, -1000, 19396, 114, -1000, -1000, -1000,
	19396, 19396, 19396, 19396, 19396, 192, 19396, 19396, 805, -1000,
	19396, 5149, 19396, -1000, -1000, 236, -1000, -1000, -1000, -1000,
	-1000, 568, -1000, -1000, -1000, -1000, -1000, -1000, 19396, -1000,
	-1000, 19396, -1000, 17592, -1000, -1000, 19396, 369, 19396, 19396,
	568, -1000, 543, 19396, -1000, 19396, -1000, 17232, -1000, -1000,
	-1000, -1000, 568, 385, 493, 511, -1000, -1000, 529, -1000,
	-1000, -1000, 2096, -1000, -1000, -1000, -1000, 522, 12173, 12173,
	12173, 425, 2096, 1918, 1631, 1152, 257, 445, 445, 259,
	259, 259, 259, 259, 615, 615, -1000, -1000, -1000, 569,
	-1000, -1000, -1000, 569, 9636, 9636, 676, 619, 235, -1000,
	869, -1000, -1000, -1000, 1057, 784, 784, 541, 468, 335,
	1087, 784, 328, 1081, 784, 784, 9636, -1000, -1000, 388,
	-1000, 11096, 569, -1000, 234, -1000, 1012, 803, 798, 784,
	569, 569, 784, 784, -242, -1000, 725, -1000, -1000, 573,
	-1000, 352, -1000, -1000, 996, -1000, -1000, 930, 11096, 11096,
	11096, -1000, -1000, -1000, 1057, 1056, -1000, 946, 944, 1078,
	9636, 16155, 982, -1000, -1000, -1000, 232, 889, 619, -1000,
	19396, 16155, 16873, 16873, 16155, 16873, -1000, 915, 908, -1000,
	917, 907, 961, 19396, -1000, 789, 569, 655, 13980, -1000,
	-1000, 16514, -1000, -1000, 226, 619, 9636, 1078, 16155, 780,
	-1000, 780, -1000, 231, -1000, -1000, 793, -73, -17, -1000,
	-1000, -1000, -1000, 568, -1000, -1000, 568, -1000, 651, 765,
	4387, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 841, 591,
	-1000, 1009, 274, 262, 591, 1008, -1000, -1000, -1000, 981,
	-1000, 398, -8, -1000, -1000, 474, 33, 33, -1000, -1000,
	251, 970, 251, 251, 251, 536, 536, -1000, -1000, -1000,
	-1000, 471, -1000, -1000, -1000, 457, -1000, 886, 19396, 1121,
	1028, 19396, 867, -1000, -1000, -1000, -1000, -1000, 305, 305,
	271, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 109, 822, -1000, -1000, -1000, -1000, 64, 93,
	158, -1000, 5149, -1000, 5149, 6673, 377, 369, 831, 377,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 425, 2096, 1101, -1000, 12173, 12173, -1000,
	-1000, 784, 784, 9636, 6673, 1058, 996, -1000, -1000, 186,
	639, 186, 12173, 12173, -1000, 12173, 12173, -1000, -108, 786,
	360, -1000, 11096, 491, -1000, 6673, -1000, 12173, 12173, -1000,
	-1000, -1000, -1000, -1000, 532, -1000, -1000, -1000, -1000, -1000,
	562, -1000, -1000, 350, -1000, 967, -1000, 928, 568, 568,
	-1000, 996, 19396, -1000, -1000, -1000, -1000, 1075, 11096, -1000,
	720, -1000, 5530, 42, 619, 1121, 14719, 19396, 658, -1000,
	347, 1143, 845, 883, 1006, -1000, -1000, -1000, -1000, 906,
	-1000, 895, -1000, -1000, -1000, -1000, -1000, -1000, 655, -1000,
	-1000, 181, 179, 177, 19396, 569, 1058, 780, -297, -297,
	268, -1000, -1000, -67, -82, -1000, -1000, -1000, 4768, -1000,
	4768, 19396, 125, -1000, 591, 591, -1000, -1000, 827, 882,
	12173, -1000, -1000, -1000, 595, 251, 251, -1000, 354, -1000,
	-1000, -1000, 782, -1000, 776, 694, 761, 19396, -1000, 867,
	1027, 1121, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19396,
	-1000, -1000, -1000, -1000, -1000, 19396, -123, 591, 19396, 19396,
	19396, 19396, -1000, -1000, 230, 369, -1000, 369, 19396, 369,
	-1000, 12173, 2096, 2096, -1000, -1000, 569, -1000, 1057, -1000,
	569, 823, 823, -1000, 823, 826, -1000, -1000, 823, 51,
	823, 50, 569, 569, 2029, 1885, 1837, 1461, 619, -103,
	-1000, 568, 11096, -1000, 1349, 885, 520, -1000, 967, -1000,
	-1000, 569, -1000, 1073, 1062, 568, -1000, -297, -1000, -1000,
	1011, -1000, 9636, 637, -1000, -1000, 9273, 745, 224, 737,
	-1000, 1078, 19396, 11096, -1000, -1000, 11096, 824, -1000, 11096,
	-1000, -1000, -1000, 619, 619, 619, 737, -1000, 1057, -297,
	-1000, -1000, -1000, -1000, -1000, 4387, -1000, 709, -1000, 823,
	-1000, -1000, -1000, 19396, 10, 1097, 2096, -1000, -1000, -1000,
	-1000, -1000, 33, 518, 33, 453, -1000, 444, 5149, 1121,
	867, -1000, -1000, -1000, -1000, 1015, -1000, 6673, -1000, -1000,
	726, 875, -1000, -1000, 6673, -1000, -1000, 705, -1000, -1000,
	2096, -1000, 996, -1000, -1000, 189, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 12173, 12173, 12173, 12173, 12173, 1057,
	514, 568, 12173, 12173, -1000, -1000, -1000, -1000, 11096, 11096,
	-1000, 992, 676, 619, -1000, 800, 19396, 19396, -1000, 19396,
	1058, -1000, 568, 568, 19396, 568, 15796, 19396, 19396, 14348,
	-297, -1000, 241, 19396, -1000, 700, 249, -1000, -121, 251,
	-1000, 251, 589, 574, -1000, 1121, 619, 669, -1000, 345,
	19396, 19396, -1000, -1000, 19396, -1000, -1000, -1000, 1012, 1012,
	1012, 1012, 96, 569, -1000, 1012, 1012, 568, 649, 1096,
	-1000, 619, 1121, 208, -1000, -1000, 1057, 671, 647, -1000,
	647, 647, 226, -1000, 241, -1000, 591, 343, 509, -1000,
	115, 411, 991, -1000, 990, -1000, -1000, -1000, -1000, -1000,
	107, 6673, 4768, 630, -1000, -1000, -1000, -1000, -1000, -1000,
	569, 101, -131, -1000, -1000, -1000, 19396, 637, 19396, -297,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 442, -1000, -1000,
	19396, -1000, 492, -1000, -1000, 627, -1000, 19396, -1000, -1000,
	822, -1000, 927, -117, -136, 613, -1000, -1000, -1000, 640,
	-1000, -1000, 107, 943, -123, -1000, 920, -1000, 19396, -1000,
	104, -1000, -128, 624, 102, -134, 881, 619, -144, 878,
	-1000, 1086, 11455, -1000, -1000, 1088, 253, 253, 1012, 569,
	-1000, -1000, -1000, 127, 519, -1000, -1000, -1000, -1000, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 1465, 1463, 118, 65, 66, 1461, 1447, 1445, 128,
	122, 114, 1442, 1440, 1437, 1436, 1434, 1432, 1430, 1429,
	1428, 1427, 1426, 1425, 1423, 1422, 1421, 1420, 1418, 1417,
	1416, 1415, 1414, 1413, 1127, 1405, 1404, 1402, 1401, 1399,
	121, 1398, 35, 1397, 1396, 1395, 1394, 1393, 1392, 1390,
	1389, 1388, 1381, 1380, 45, 38, 53, 22, 1377, 67,
	1376, 59, 1849, 34, 58, 61, 79, 1375, 1374, 39,
	1373, 1368, 80, 1367, 1366, 68, 1363, 1359, 60, 69,
	76, 1358, 10, 46, 1350, 1347, 1345, 1344, 33, 42,
	1340, 1339, 25, 1338, 1336, 99, 1334, 1333, 64, 11,
	16, 18, 17, 1332, 70, 1331, 8, 1330, 63, 1329,
	1327, 1326, 1325, 23, 1321, 62, 1317, 14, 26, 1316,
	43, 1314, 94, 36, 1313, 1312, 9, 1309, 1306, 24,
	72, 55, 78, 1305, 83, 1304, 1302, 577, 1292, 877,
	47, 1291, 1290, 131, 15, 1288, 82, 81, 1286, 1285,
	1284, 1282, 125, 1012, 2035, 21, 74, 1278, 1277, 1276,
	2767, 28, 57, 19, 1275, 1274, 1272, 40, 253, 49,
	1271, 1270, 37, 1268, 1263, 1249, 1243, 1241, 1238, 1237,
	278, 1236, 1235, 1234, 29, 20, 1232, 1231, 71, 31,
	1230, 1229, 1227, 52, 73, 1226, 1224, 54, 1223, 77,
	27, 1222, 1221, 1220, 1218, 1212, 30, 6, 1199, 13,
	1193, 7, 1178, 32, 1177, 3, 1176, 12, 1174, 5,
	0, 1170, 4, 1169, 1168, 50, 1, 1166, 2, 41,
	1164, 1153, 1148, 85, 1147, 1142, 1647, 1141, 84, 1139,
	86,
}

var yyR1 = [...]int{
	0, 234, 235, 235, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 220, 220, 220, 223,
	224, 20, 3, 3, 3, 3, 2, 2, 8, 4,
	5, 5, 9, 9, 9, 43, 44, 44, 10, 11,
	11, 11, 11, 238, 238, 72, 72, 73, 73, 122,
	122, 12, 13, 13, 132, 132, 131, 131, 131, 133,
	133, 133, 133, 170, 170, 135, 135, 134, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 21, 39, 39,
	33, 33, 33, 33, 36, 36, 36, 36, 36, 36,
	52, 52, 52, 222, 222, 221, 219, 219, 218, 218,
	217, 22, 22, 202, 204, 204, 203, 203, 203, 203,
	194, 173, 173, 173, 173, 176, 176, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 175, 175, 175, 175,
	175, 177, 177, 177, 177, 177, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 179, 179, 179, 179, 179, 179, 179, 179, 193,
	193, 180, 180, 188, 188, 189, 189, 189, 186, 186,
	187, 187, 190, 190, 190, 182, 182, 183, 183, 191,
	191, 184, 184, 184, 185, 185, 185, 192, 192, 192,
	192, 192, 181, 181, 195, 195, 212, 212, 211, 211,
	211, 35, 201, 201, 208, 208, 208, 208, 208, 198,
	198, 198, 199, 199, 197, 197, 200, 200, 210, 210,
	209, 196, 196, 213, 213, 213, 213, 227, 228, 226,
	226, 226, 226, 226, 205, 205, 205, 206, 206, 206,
	207, 207, 207, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 216, 214, 214, 215, 215, 16,
	23, 23, 17, 17, 17, 17, 17, 17, 18, 18,
	24, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 141, 141, 143, 143, 139, 139, 142, 142,
	140, 140, 140, 144, 144, 144, 145, 145, 171, 171,
	171, 26, 26, 28, 28, 29, 30, 30, 165, 165,
	166, 166, 31, 32, 45, 45, 45, 45, 45, 45,
	47, 47, 47, 7, 7, 7, 7, 46, 46, 46,
	6, 6, 27, 27, 27, 27, 19, 239, 40, 41,
	41, 42, 42, 42, 49, 49, 49, 48, 48, 48,
	56, 56, 60, 60, 60, 60, 60, 61, 61, 61,
	61, 61, 61, 55, 55, 59, 59, 59, 59, 59,
	157, 157, 157, 156, 156, 63, 63, 64, 64, 65,
	65, 65, 68, 66, 66, 66, 66, 105, 81, 81,
	121, 121, 120, 120, 123, 123, 67, 67, 67, 67,
	69, 69, 70, 70, 71, 71, 164, 164, 163, 163,
	163, 162, 162, 74, 74, 74, 76, 75, 75, 75,
	75, 77, 77, 79, 79, 78, 78, 78, 78, 80,
	82, 82, 82, 82, 82, 83, 83, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 138, 138, 85, 85,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	97, 97, 97, 97, 97, 97, 86, 86, 86, 86,
	86, 86, 86, 54, 54, 98, 98, 98, 233, 233,
	104, 99, 99, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 96, 53,
	53, 93, 93, 93, 93, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 92, 92,
	92, 92, 92, 92, 92, 92, 92, 92, 92, 92,
	92, 92, 92, 92, 240, 240, 95, 94, 94, 94,
	94, 94, 94, 94, 50, 50, 50, 50, 50, 169,
	169, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 109, 109, 51, 51, 107,
	107, 108, 110, 110, 106, 106, 106, 88, 88, 88,
	88, 88, 88, 88, 88, 90, 90, 90, 111, 111,
	112, 112, 113, 113, 114, 114, 115, 116, 116, 116,
	117, 117, 117, 117, 118, 118, 118, 87, 87, 87,
	87, 119, 119, 119, 119, 124, 124, 125, 57, 57,
	58, 100, 100, 102, 102, 101, 103, 126, 126, 129,
	127, 127, 127, 130, 130, 130, 130, 130, 130, 130,
	128, 128, 128, 159, 159, 159, 136, 136, 146, 146,
	147, 147, 137, 137, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 149, 149, 149, 150, 150, 151,
	151, 151, 158, 158, 154, 154, 155, 155, 160, 160,
	161, 161, 229, 230, 231, 231, 232, 232, 232, 34,
	37, 37, 38, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 236, 237, 167, 168, 168, 168,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	1, 2, 4, 8, 6, 7, 4, 6, 5, 8,
	1, 3, 8, 7, 7, 1, 1, 1, 11, 9,
	8, 7, 7, 1, 1, 1, 3, 1, 3, 0,
	4, 3, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 2, 2,
	8, 5, 7, 6, 8, 5, 5, 4, 0, 1,
	4, 5, 7, 4, 5, 5, 4, 4, 4, 3,
	1, 1, 1, 0, 2, 1, 0, 2, 1, 3,
	3, 4, 5, 4, 2, 4, 1, 3, 3, 3,
	8, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 1, 4, 4, 2, 2,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 6,
	6, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	0, 1, 0, 1, 2, 0, 2, 0, 3, 0,
	1, 0, 3, 3, 0, 2, 2, 0, 2, 1,
	2, 1, 0, 2, 5, 4, 1, 2, 2, 3,
	2, 2, 0, 1, 2, 3, 3, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 3,
	2, 3, 1, 10, 11, 11, 12, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 3, 1, 2, 3,
	1, 1, 1, 6, 7, 7, 7, 7, 4, 5,
	4, 4, 7, 5, 5, 5, 12, 7, 5, 9,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 7, 1, 3, 8, 8, 3,
	3, 5, 4, 6, 5, 6, 4, 4, 3, 2,
	3, 4, 4, 3, 4, 4, 4, 4, 4, 4,
	3, 2, 7, 2, 3, 4, 3, 7, 5, 4,
	2, 4, 4, 3, 3, 5, 2, 6, 4, 3,
	7, 4, 1, 1, 0, 1, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 2, 0, 1,
	1, 2, 1, 1, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	5, 3, 2, 2, 3, 3, 2, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	0, 1, 0, 1, 2, 3, 4, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 2, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 2, 1, 3, 1,
	1, 1, 2, 1, 3, 3, 3, 3, 3, 7,
	0, 3, 1, 3, 1, 3, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 0, 1,
	2, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 2, 1, 1, 3, 5, 7, 3,
	0, 5, 4, 5, 5, 0, 2, 1, 3, 3,
	3, 2, 3, 2, 1, 2, 0, 3, 1, 1,
	3, 3, 4, 4, 5, 3, 4, 5, 6, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 1, 2,
	3, 1, 3, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 2, 1, 1, 1, 1, 4, 1,
	1, 4, 5, 5, 6, 4, 4, 6, 6, 6,
	8, 8, 8, 8, 9, 8, 5, 4, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 8, 8, 0, 2, 3, 4, 4, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 2, 3, 3, 1, 2, 2, 1, 1, 2,
	1, 2, 2, 1, 2, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	0, 2, 0, 3, 1, 3, 2, 0, 1, 1,
	0, 2, 4, 4, 0, 2, 4, 2, 1, 5,
	4, 1, 3, 3, 5, 0, 1, 5, 0, 1,
	2, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	1, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 0,
	1, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 0, 1, 0, 1, 3, 5,
	2, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -234, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -24, -25, -26, -28, -29,
	-30, -31, -32, -6, -27, -19, -20, -33, -36, -34,
	-35, -37, -38, -21, -4, -236, 6, 7, -43, -44,
	10, 30, -22, 123, 124, 126, 125, 159, 127, 152,
	53, 173, 174, 176, 177, 178, 179, -47, 157, 158,
	31, 32, 129, 34, -39, 381, 370, 382, 383, 374,
	57, 8, 9, 262, 154, 153, 25, 384, -235, 386,
	-42, 5, -113, 15, -3, -40, -239, -40, -40, -40,
	-40, -40, -202, -204, 57, 96, -151, 133, 77, -134,
	254, 130, 131, -135, 137, -154, 371, 372, 373, -220,
	-153, 60, 61, 62, 272, 145, 304, 305, 364, 173,
	187, 181, 208, 200, 273, 306, 146, 198, 201, 241,
	143, 307, 228, 235, 71, 176, 250, 308, 155, 196,
	192, 29, 309, 281, 190, 27, 310, 237, 213, 311,
	277, 239, 191, 236, 129, 312, 148, 141, 313, 214,
	218, 314, 242, 315, 316, 317, 384, 185, 186, 365,
	318, 144, 244, 212, 375, 376, 28, 142, 33, 274,
	37, 163, 245, 216, 319, 211, 207, 366, 320, 321,
	322, 323, 210, 184, 206, 41, 220, 219, 221, 240,
	383, 203, 324, 325, 326, 149, 327, 193, 18, 328,
	329, 330, 331, 332, 248, 158, 333, 161, 334, 335,
	336, 337, 338, 339, 238, 215, 217, 138, 165, 234,
	382, 276, 340, 246, 189, 341, 150, 374, 162, 157,
	249, 151, 342, 343, 344, 345, 346, 385, 347, 367,
	348, 177, 368, 349, 350, 351, 352, 172, 369, 243,
	252, 40, 225, 353, 183, 370, 140, 354, 174, 169,
	230, 204, 164, 355, 356, 194, 195, 209, 182, 205,
	175, 166, 159, 357, 251, 226, 278, 202, 199, 170,
	358, 167, 168, 359, 231, 232, 171, 275, 247, 197,
	227, -137, 133, 254, 130, 232, 135, 131, 131, 132,
	133, -134, 254, 130, 371, 131, -78, -160, -220, -153,
	371, 372, 373, 133, 131, 114, 201, 241, 123, 229,
	237, -143, 238, 165, -171, 131, -139, 228, 231, 232,
	171, 364, 175, 239, 243, 242, 233, -160, 175, -165,
	180, -154, 178, -139, -45, 360, 127, -167, -167, 230,
	230, -167, -99, -62, -84, 80, -89, 29, 23, -88,
	-85, -106, -103, -104, 114, 115, 117, 116, 118, 103,
	104, 111, 81, 119, -93, -91, -92, -94, 64, 63,
	72, 65, 66, 67, 68, 73, 74, 75, -154, -160,
	-101, -236, 47, 48, 263, 264, 265, 266, 271, 267,
	83, 36, 253, 261, 260, 259, 257, 258, 255, 256,
	269, 270, 136, 254, 130, 109, 262, -220, -153, 364,
	378, -40, 65, -40, -40, 371, -5, -4, -236, 6,
	20, 21, -117, 17, 16, -42, -49, -60, 42, 43,
	-61, 21, 35, 46, 44, -41, -59, 105, -62, -160,
	-137, -137, 11, -72, -73, -78, -80, -160, -127, -170,
	175, -130, 243, 242, -155, -128, -154, -152, 241, 201,
	240, 128, 279, 79, 22, 24, 223, 82, 114, 16,
	83, 113, 263, 123, 51, 280, 255, 256, 253, 265,
	266, 254, 229, 10, 282, 25, 153, 21, 35, 107,
	125, 86, 87, 156, 381, 23, 154, 75, 285, 19,
	54, 11, 13, 286, 287, 14, 136, 135, 98, 132,
	49, 8, 119, 26, 95, 45, 288, 289, 290, 291,
	292, 47, 96, 17, 257, 258, 31, 293, 271, 160,
	109, 52, 38, 80, 294, 295, 73, 296, 76, 55,
	77, 15, 50, 297, 298, 299, 300, 97, 126, 262,
	48, 301, 130, 6, 268, 30, 152, 46, 302, 131,
	85, 269, 270, 134, 74, 5, 137, 32, 9, 53,
	56, 259, 260, 261, 36, 84, 12, 303, 78, -203,
	96, -194, -220, -78, 132, -78, 262, 133, -147, 136,
	-147, -147, 131, 131, -78, -220, -220, 123, 125, 128,
	55, -23, -78, -146, 136, -220, -146, 133, -146, -146,
	-78, 120, -78, -220, 30, -144, 96, 12, 254, -220,
	165, 131, 166, 133, -168, -236, -155, -198, -220, 8,
	132, 33, 144, -168, 169, 170, -168, -142, -141, 235,
	236, 230, 234, 12, 170, 230, 168, -200, -220, 244,
	134, -154, -143, -7, -3, -10, -9, -11, 88, -167,
	-167, 58, 79, 77, 78, 95, -233, 69, -62, -86,
	98, 80, 96, 97, 82, 100, 99, 110, 103, 104,
	105, 106, 107, 108, 109, 101, 102, 113, 88, 89,
	90, 91, 92, 93, 94, -138, -236, -104, -236, 121,
	122, -89, -89, -89, -89, -89, -89, -89, -89, -89,
	-89, 64, -236, 120, -2, -99, -4, -236, -236, -236,
	-236, -236, -236, -236, -236, -109, -62, -236, -240, -95,
	-236, -240, -95, -240, -95, -240, -236, -240, -95, -240,
	-95, -240, -240, -95, -236, -236, -236, -236, -236, -236,
	-236, 366, 367, 379, 380, -78, -78, 64, 133, -113,
	-3, -40, -118, 19, 31, -62, -114, -115, -62, -5,
	38, -55, -59, -61, 42, 43, 70, 11, -233, -157,
	-156, 22, -154, 64, 120, -79, 26, -78, -64, -65,
	-66, -67, -68, -81, -105, -236, -96, -78, -53, 375,
	376, -78, -72, -238, 58, 11, 56, -238, 58, 120,
	58, 175, -130, -132, -131, 244, 246, 88, 134, -159,
	-154, 64, 29, 30, 59, 58, -78, -173, -176, -178,
	-177, -179, -174, -175, 198, 199, 114, 202, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 30, 155,
	194, 195, 196, 197, 214, 215, 216, 217, 218, 219,
	220, 221, 181, 200, 273, 182, 183, 184, 185, 186,
	187, 189, 190, 191, 192, 193, -220, 22, 133, -134,
	-78, -220, 80, -220, -78, -147, -78, -168, -168, -168,
	167, 167, 131, 131, 172, -78, 58, 134, -72, 23,
	55, -78, -146, -220, -220, -161, -160, -152, -168, -144,
	64, -62, -168, -168, -168, -78, -168, -168, -199, 11,
	98, -199, -144, -40, -168, -168, 11, -140, 11, 98,
	-62, -145, 96, 55, 245, -166, 178, -78, 212, 361,
	362, 363, -62, -62, -62, -62, -97, 73, 80, 74,
	75, 69, -89, -98, -101, -104, 69, 98, 96, 97,
	82, -89, -89, -89, -89, -89, -89, -89, -89, -89,
	-89, -89, -89, -89, -89, -89, -169, -220, 64, -220,
	-88, -88, -154, -56, 21, 35, -55, -155, -161, -152,
	-42, -237, 59, -237, -113, -55, -55, -62, -62, -106,
	64, -55, -106, 64, -55, -55, -48, 21, 35, -107,
	-108, 84, -106, -154, -160, -237, -89, -154, -154, -55,
	-56, -56, -55, -55, -200, -200, -220, -220, 64, -232,
	-229, -223, 61, -78, -117, -237, 9, 98, 58, 18,
	58, -116, 24, 25, -113, -90, -154, 65, 68, -63,
	58, 11, -61, -78, -156, 105, -161, -122, 161, -78,
	30, 58, -74, -76, -75, -77, 45, 49, 51, 46,
	47, 48, 52, -164, 22, -64, -34, -3, -236, -163,
	-162, 22, -160, 64, -163, 161, -236, -122, 56, -64,
	-78, -64, -80, -160, 105, -130, -132, 58, 245, 247,
	248, 55, 76, -62, 55, 76, -62, -185, 113, -205,
	-206, -207, -155, 64, 65, -194, -195, -196, -208, 147,
	-213, 138, 140, 137, -197, 148, 132, 28, 59, -190,
	73, 80, -186, 226, -180, 57, -180, -180, -180, -180,
	-184, 201, -184, -184, -184, 57, 57, -180, -180, -180,
	-188, 57, -188, -188, -189, 57, -189, -158, 56, -3,
	-78, 133, 22, -168, 23, -168, -78, -148, 128, 125,
	126, -216, 124, 223, 201, 71, 29, 15, 263, 161,
	278, -220, 162, -78, -78, -78, -78, -78, 128, 125,
	-78, -78, -78, -168, -78, 120, -78, -78, -79, -78,
	-144, -160, -160, 64, -78, -154, -46, -154, 64, 73,
	74, 75, -98, -89, -89, -89, -54, 156, 79, -237,
	-237, -55, -55, -236, 120, -5, -117, -237, -237, 58,
	56, 22, 11, 11, -237, 11, 11, -237, -237, -55,
	-110, -108, 86, -62, -237, 120, -237, 58, 58, -237,
	-237, -237, -237, -237, -52, 365, 369, 368, -220, 64,
	58, -231, -230, -224, 62, 88, -118, 40, -62, -62,
	-115, -117, -136, 19, 11, 36, 36, -83, 12, -59,
	-64, -61, 120, -87, 36, -3, -236, -236, -126, -129,
	-106, -65, -66, -66, -65, -66, 45, 45, 45, 50,
	45, 50, 45, -75, -160, -237, -237, -237, -3, -162,
	-82, 53, 135, 54, -236, -56, -83, -64, -83, -83,
	120, -131, -133, 249, 246, 252, -220, 64, 58, -207,
	88, 57, -220, 28, -197, -197, -200, -200, 28, -182,
	29, 73, -187, 227, 65, -184, -184, -185, 30, -185,
	-185, -185, -193, 64, -193, 65, 65, 55, -154, 22,
	-78, -3, -167, -225, 143, 139, 147, 148, 141, 60,
	61, 62, 132, 28, 138, 140, 161, 137, -225, -149,
	-150, 134, 22, 132, 28, 161, -222, 56, 167, 223,
	167, 134, -168, -168, -161, -140, -144, -121, 57, -140,
	-54, 79, -89, -89, -237, -237, -56, -155, -113, -118,
	-172, 114, 198, 155, 196, 192, 189, 212, 203, 225,
	194, 226, -169, -172, -89, -89, -89, -89, 272, -113,
	87, -62, 85, -155, -89, -89, 64, -229, 88, -88,
	41, -118, -78, -111, 13, -62, 105, -125, -57, -124,
	55, -58, 385, -100, -102, -101, -236, -119, -154, -123,
	-154, -63, 58, 88, -70, -69, 55, 56, -71, 55,
	-69, 45, 45, 132, 132, 132, -123, -237, -113, -83,
	-57, -57, 246, 250, 251, -206, -207, -210, -209, -154,
	-213, -200, -200, 57, -183, 55, -89, 59, -185, -185,
	-220, 114, 59, 58, 59, 58, 59, 58, -78, -3,
	22, -167, -167, -78, -167, -154, -219, 275, -221, -220,
	-154, -154, -154, -78, 120, -144, -144, -120, -154, -144,
	-89, -237, -117, -237, -180, -180, -180, -189, -180, 186,
	-180, 186, -237, -237, 19, 19, 19, 19, -236, -51,
	268, -62, 58, 58, 64, -88, -237, -112, 14, 16,
	-57, 27, -55, 58, -237, -237, 58, 120, -237, 58,
	-83, -129, -62, -62, 57, -62, -236, -236, -236, -237,
	-117, -57, 59, 58, -180, -120, -191, 223, 9, -184,
	64, -184, 65, 65, -168, -3, 26, -218, -217, -155,
	57, 56, -161, 59, 58, -118, -184, -220, -89, -89,
	-89, -89, -89, -117, 64, -89, -89, -62, -99, 28,
	-102, 36, -3, -154, -154, -154, -113, -120, -120, -237,
	-120, -120, -163, -57, -212, -211, 56, 142, 71, -209,
	59, -192, 138, 28, 137, -92, -185, -185, 59, 59,
	-236, 58, 88, -120, -78, -154, -237, -237, -237, -237,
	-50, 98, 275, -237, -237, -237, 9, -100, 120, -117,
	59, -237, -237, -237, -82, -211, -220, -201, 88, 64,
	150, -181, 71, 28, 28, -214, -215, 161, -217, -207,
	59, -237, 273, 52, 276, -126, -154, -57, 65, -78,
	64, -237, 58, -154, -222, 41, 274, 277, 57, -215,
	36, -219, 41, -120, 163, 275, 59, 164, 276, -227,
	-228, 55, -236, 277, -228, 55, 10, 9, -89, 160,
	-226, 151, 146, 149, 30, -226, -237, -237, 145, 29,
	73,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 672, 0, 397, 397, 397, 397,
	397, 397, 0, 749, 732, 0, 0, 0, 0, -2,
	362, 363, 0, 365, -2, 0, 0, -2, 1084, 1084,
	0, 0, 1084, 0, 0, 397, 0, 397, 397, 0,
	1082, 55, 56, 57, 380, 381, 382, 99, 1, 3,
	0, 401, 680, 0, 0, -2, 399, 0, 732, 732,
	0, 0, 88, 89, 0, 0, 0, 1071, 0, 0,
	730, 730, 730, 0, 750, 751, -2, -2, -2, 754,
	755, 36, 37, 38, 891, 892, 893, 894, 895, 896,
	897, 898, 899, 900, 901, 902, 903, 904, 905, 906,
	907, 908, 909, 910, 911, 912, 913, 914, 915, 916,
	917, 918, 919, 920, 921, 922, 923, 924, 925, 926,
	927, 928, 929, 930, 931, 932, 933, 934, 935, 936,
	937, 938, 939, 940, 941, 942, 943, 944, 945, 946,
	947, 948, 949, 950, 951, 952, 953, 954, 955, 956,
	957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
	967, 968, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037,
	1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047,
	1048, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080,
	1081, 0, 0, 0, 0, 0, 733, 0, 728, 0,
	728, 0, 728, 728, 87, 0, 309, 485, 758, 759,
	969, 1049, 1050, 1071, 0, 0, 0, 353, 0, 1085,
	321, 0, 323, 1085, 0, 1085, 0, 330, 0, 0,
	336, 236, 0, 345, 359, 360, 347, 361, 364, 0,
	369, 372, 0, 344, 0, 0, 379, 392, 393, 1084,
	1084, 396, 41, 541, 497, 0, 504, -2, 0, 543,
	544, 545, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 574, 575, 576, 577, 657, 658,
	659, 660, 661, 662, 663, 664, 508, 509, 654, 0,
	706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	645, 0, 614, 614, 614, 614, 614, 614, 614, 614,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 221, 770, 0, 0, 672, 50, 0, 397,
	402, 403, 684, 0, 0, 0, 0, 0, -2, -2,
	413, 419, 420, 421, 422, 398, 0, 425, 430, 0,
	0, 0, 0, 0, 0, 65, 67, 485, 71, 0,
	1060, 710, -2, -2, 0, 0, 756, 757, -2, 905,
	-2, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 794, 795, 796, 797, 798, 799, 800, 801,
	802, 803, 804, 805, 806, 807, 808, 809, 810, 811,
	812, 813, 814, 815, 816, 817, 818, 819, 820, 821,
	822, 823, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 0,
	0, 126, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 0, 1085, 1085, 1085, 0, 0, 0,
	0, 299, 0, 0, 0, 0, 0, 728, 0, 0,
	308, 0, 310, 1085, 353, 313, 0, 0, 1085, 1085,
	1085, 0, 1085, 1085, 320, 1086, 1087, 0, 353, 397,
	229, 230, 231, 324, 1085, 1085, 326, 0, 350, 348,
	349, 342, 343, 0, 356, 333, 334, 339, 237, 0,
	370, 373, 0, 391, 383, 384, 385, 386, 0, 394,
	395, 0, 0, 0, 0, 0, 503, 538, 501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 526, 527,
	528, 529, 530, 531, 532, 505, 0, 519, 0, 0,
	0, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	0, 573, 410, 0, 0, 0, 672, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 646, 0, 598, 606,
	0, 599, 607, 600, 608, 601, 0, 602, 609, 603,
	610, 604, 605, 611, 0, 0, 0, 410, 410, 0,
	0, 236, 236, 0, 109, 766, 771, 772, 0, 680,
	0, 412, 42, 0, 0, 681, 673, 674, 677, 672,
	0, 435, 423, 414, 417, 418, 400, 0, -2, 427,
	431, 0, 433, 434, 0, 69, 0, 484, 0, 437,
	439, 440, 441, 443, 466, 0, 468, 468, 0, -2,
	-2, -2, 0, 0, 0, 63, 64, 0, 0, 0,
	0, 1060, 711, 73, 74, 0, 0, 0, 0, 204,
	723, 724, 725, 721, 254, 0, 0, 192, 188, 132,
	133, 134, 181, 136, 181, 181, 181, 181, 201, 201,
	201, 201, 164, 165, 166, 167, 168, 0, 0, 151,
	181, 181, 181, 155, 171, 172, 173, 174, 175, 176,
	177, 178, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 183, 183, 183, 185, 185, 752, 0, 0, 0,
	0, 1085, 0, 1085, 121, 0, 0, 268, 270, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 729,
	0, 1085, 0, 306, 307, 486, 760, 761, 311, 312,
	354, 355, 314, 315, 316, 317, 318, 319, 0, 232,
	233, 0, 338, 0, 325, 329, 0, 353, 0, 0,
	331, 332, 0, 0, 341, 0, 371, 387, 375, 376,
	377, 378, 542, 498, 499, 500, 502, 520, 0, 522,
	524, 539, 510, 511, 535, 536, 537, 0, 0, 0,
	0, 533, 515, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 562, 629, 630, 0,
	560, 561, 572, 0, 0, 0, 411, 655, 0, -2,
	0, 540, 1083, 705, 680, 0, 0, 0, 0, 545,
	657, 0, 545, 657, 0, 0, 0, 408, 409, 652,
	649, 0, 0, 654, 0, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 100, 103, 106, 107, 108, 764,
	767, 0, 39, 97, 684, 51, 685, 0, 0, 0,
	0, 676, 678, 679, 680, 0, 665, 0, 0, 495,
	0, 0, 415, 48, 432, 428, 0, 0, 0, 483,
	0, 0, 0, 0, 0, 0, 473, 0, 0, 476,
	0, 0, 0, 0, 467, 0, 0, 0, 0, 442,
	469, 0, 471, 472, 490, 995, 410, 495, 0, 495,
	66, 495, 68, 0, 489, 712, 72, 0, 0, 77,
	78, 713, 714, 715, 716, 717, 718, 719, 0, 123,
	255, 257, 260, 261, 262, 127, 128, 129, 0, 0,
	242, 0, 0, 236, 236, 0, 234, 235, 125, 195,
	193, 0, 190, 189, 135, 0, 201, 201, 158, 159,
	204, 0, 204, 204, 204, 0, 0, 152, 153, 154,
	146, 0, 147, 148, 149, 0, 150, 0, 0, 91,
	0, 0, 0, 95, 731, 96, 122, 1084, 0, 0,
	744, 269, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 0, 113, 273, 275, 274, 278, 0, 0,
	0, 300, 1085, 304, 1085, 0, 350, 353, 450, 350,
	328, 351, 352, 357, 335, 367, 390, 388, 389, 521,
	523, 525, 512, 533, 516, 0, 513, 0, 0, 507,
	581, 0, 0, 410, 0, 672, 684, 585, 586, 0,
	0, 0, 0, 0, 622, 0, 0, 623, 0, 672,
	0, 650, 0, 0, 597, 0, 616, 0, 0, 617,
	618, 619, 620, 621, 101, 110, 111, 112, 104, 105,
	0, 769, 765, 0, 40, 0, 44, 0, 682, 683,
	675, 684, 0, 726, 727, 666, 667, 668, 0, 424,
	436, 416, 0, 695, 0, 688, 0, 0, 435, 707,
	0, 438, 462, 464, 0, 459, 474, 475, 477, 0,
	479, 0, 481, 482, 444, 445, 446, 447, 0, 470,
	448, 0, 0, 0, 0, 0, 672, 495, 698, 698,
	0, 75, 76, 0, 0, 82, 205, 206, 0, 258,
	0, 0, 0, 224, 236, 236, 227, 228, 0, 197,
	0, 194, 131, 191, 0, 204, 204, 160, 0, 161,
	162, 163, 0, 179, 0, 0, 0, 0, 753, 0,
	0, 93, 263, 1084, 280, 281, 282, 283, 284, 285,
	286, 287, 288, 289, 290, 291, 292, 293, 1084, 0,
	1084, 745, 746, 747, 748, 0, 116, 0, 0, 0,
	0, 0, 303, 305, 487, 353, 337, 353, 0, 353,
	514, 0, 534, 517, 582, 583, 0, 656, 680, 46,
	0, 181, 181, 634, 181, 185, 637, 638, 181, 640,
	181, 643, 0, 0, 0, 0, 0, 0, 0, 647,
	596, 653, 0, 655, 0, 0, 0, 768, 0, 762,
	686, 44, 45, 670, 0, 496, 429, 696, 53, 54,
	0, 699, 0, 687, 701, 703, 0, 0, 691, 0,
	454, 495, 0, 0, 456, 463, 0, 0, 457, 0,
	458, 478, 480, 0, 0, 0, 0, 578, 680, 698,
	61, 62, 79, 80, 81, 256, 259, 0, 238, 181,
	241, 225, 226, 0, 199, 0, 196, 182, 156, 157,
	202, 203, 201, 0, 201, 0, 186, 0, 1085, 92,
	0, 264, 265, 266, 267, 0, 272, 0, 114, 115,
	0, 0, 277, 301, 0, 322, 340, 0, 452, 327,
	518, 584, 684, 587, 631, 201, 635, 636, 639, 641,
	642, 644, 589, 588, 0, 0, 0, 0, 0, 680,
	0, 651, 0, 0, 102, 763, 43, 49, 0, 0,
	52, 0, 700, 0, 704, 0, 0, 0, 70, 0,
	672, 708, 709, 460, 0, 465, 0, 0, 0, 468,
	698, 60, 215, 0, 240, 0, 207, 200, 0, 204,
	180, 204, 0, 0, 90, 94, 0, 117, 118, 0,
	0, 0, 488, 451, 0, 47, 632, 633, 0, 0,
	0, 0, 624, 0, 648, 0, 0, 671, 669, 0,
	702, 0, 690, 693, 692, 455, 680, 0, 0, 492,
	0, 0, 490, 59, 214, 216, 0, 222, 0, 239,
	0, 212, 0, 209, 211, 198, 169, 170, 184, 187,
	0, 0, 0, 0, 279, 453, 590, 592, 591, 593,
	0, 0, 0, 595, 612, 613, 0, 689, 0, 698,
	461, 491, 493, 494, 449, 217, 218, 0, 223, 220,
	0, 130, 0, 208, 210, 0, 295, 0, 119, 120,
	113, 594, 0, 0, 0, 697, 694, 58, 219, 0,
	213, 294, 0, 0, 116, 625, 0, 628, 0, 296,
	0, 276, 626, 0, 0, 0, 243, 0, 0, 244,
	245, 0, 0, 627, 246, 0, 0, 0, 0, 0,
	247, 249, 250, 0, 0, 248, 297, 298, 251, 252,
	253,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 81, 3, 3, 3, 108, 100, 3,
	57, 59, 105, 103, 58, 104, 120, 106, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 386,
	89, 88, 90, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 110, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 99, 3, 111,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 82, 83, 84, 85,
	86, 87, 91, 92, 93, 94, 95, 96, 97, 98,
	101, 102, 107, 109, 112, 113, 114, 115, 116, 117,
	118, 119, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:382
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:387
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:388
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:392
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:426
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:432
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:436
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:440
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:446
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:452
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:458
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 42:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:464
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 43:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:472
		{
			yyVAL.selStmt = Unionize(yyDollar[2].selStmt, yyDollar[4].selStmt, yyDollar[3].str, yyDollar[5].orderBy, yyDollar[6].limit, yyDollar[7].str)
		}
	case 44:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:476
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].str, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].str)
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:480
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:503
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:511
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].str, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].str)
		}
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:517
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:525
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereStr, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingStr, yyDollar[8].expr))
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:531
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:535
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:542
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			ins.SelectExprs = yyDollar[8].selectExprs
			yyVAL.statement = ins
		}
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:555
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(nil)
			ins.SelectExprs = yyDollar[7].selectExprs
			yyVAL.statement = ins
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:568
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:582
		{
			yyVAL.str = InsertStr
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:588
		{
			yyVAL.str = UpdateStr
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:592
		{
			yyVAL.str = ReplaceStr
		}
	case 58:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:598
		{
			yyVAL.statement = &Update{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, SelectExprs: yyDollar[11].selectExprs}
		}
	case 59:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:604
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit, SelectExprs: yyDollar[9].selectExprs}
		}
	case 60:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:608
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), SelectExprs: yyDollar[8].selectExprs}
		}
	case 61:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:612
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr), SelectExprs: yyDollar[7].selectExprs}
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:616
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr), SelectExprs: yyDollar[7].selectExprs}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:621
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:622
		{
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:626
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:630
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:636
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:640
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:645
		{
			yyVAL.partitions = nil
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:649
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:655
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 72:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:661
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Characteristics: yyDollar[5].characteristics}
		}
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:665
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:671
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:675
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:681
		{
			yyVAL.characteristic = &IsolationLevel{Level: string(yyDollar[3].str)}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:685
		{
			yyVAL.characteristic = &AccessMode{Mode: TxReadWrite}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:689
		{
			yyVAL.characteristic = &AccessMode{Mode: TxReadOnly}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:695
		{
			yyVAL.str = RepeatableRead
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:699
		{
			yyVAL.str = ReadCommitted
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:703
		{
			yyVAL.str = ReadUncommitted
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:707
		{
			yyVAL.str = Serializable
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:713
		{
			yyVAL.str = SessionStr
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:717
		{
			yyVAL.str = GlobalStr
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:723
		{
			yyVAL.str = TempStr
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:727
		{
			yyVAL.str = TemporaryStr
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:733
		{
			yyVAL.str = MaterializedStr
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:739
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:744
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:750
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName}
		}
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:755
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[3].tableName.ToViewName(), SelectStatement: yyDollar[5].selStmt}
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:759
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[5].tableName.ToViewName(), SelectStatement: yyDollar[7].selStmt, OrReplace: true}
		}
	case 93:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:763
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[4].tableName.ToViewName(), SelectStatement: yyDollar[6].selStmt, Modifier: yyDollar[2].str}
		}
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:767
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[6].tableName.ToViewName(), SelectStatement: yyDollar[8].selStmt, OrReplace: true, Modifier: yyDollar[4].str}
		}
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:771
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].colIdent.String()), IfNotExists: notExists}
		}
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:779
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].colIdent.String()), IfNotExists: notExists}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:789
		{
			yyVAL.statement = &RefreshMaterializedView{ViewName: yyDollar[4].tableName}
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:794
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:798
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:804
		{
			yyVAL.statement = &Auth{SessionAuth: yyDollar[1].boolVal, Provider: yyDollar[4].str}
		}
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:809
		{
			yyVAL.statement = &Auth{SessionAuth: yyDollar[1].boolVal, Provider: yyDollar[4].str, Type: yyDollar[5].str}
		}
	case 102:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:814
		{
			yyVAL.statement = &Auth{SessionAuth: yyDollar[1].boolVal, Provider: yyDollar[4].str, Type: yyDollar[5].str, KeyFilePath: string(yyDollar[6].bytes), KeyEnvVar: string(yyDollar[7].bytes)}
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:819
		{
			yyVAL.statement = &AuthRevoke{SessionAuth: yyDollar[1].boolVal, Provider: yyDollar[4].str}
		}
	case 104:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:825
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes), ProviderId: yyDollar[4].colIdent.GetRawVal(), ProviderVersion: yyDollar[5].colIdent.GetRawVal()}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:830
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes), ProviderId: yyDollar[4].colIdent.GetRawVal(), ProviderVersion: string(yyDollar[5].bytes)}
		}
	case 106:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:835
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes), ProviderId: yyDollar[4].colIdent.GetRawVal()}
		}
	case 107:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:840
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes), ProviderId: yyDollar[4].colIdent.GetRawVal()}
		}
	case 108:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:845
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes), ProviderId: string(yyDollar[4].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:850
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:856
		{
			yyVAL.str = InteractiveStr
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:860
		{
			yyVAL.str = ServiceAccountStr
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:864
		{
			yyVAL.str = ServiceAccountStr
		}
	case 113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:870
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:874
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:880
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:885
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:890
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:896
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:901
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:907
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:913
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName, IfNotExists: notExists}
			setDDL(yylex, yyVAL.ddl)
		}
	case 122:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:922
		{
			var notExists bool
			if yyDollar[4].byt != 0 {
				notExists = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: notExists, Modifier: yyDollar[2].str}
			setDDL(yylex, yyVAL.ddl)
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:933
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:940
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:944
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:950
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:955
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:959
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:963
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 130:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:969
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolVal
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolVal
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].sqlVal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:980
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:991
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:996
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1002
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1006
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1010
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1014
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1018
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1022
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1026
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1030
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1034
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1040
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1046
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1052
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1058
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1064
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1072
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1076
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1080
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1084
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1088
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1094
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1098
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1102
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1106
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1110
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1114
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1118
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1122
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1126
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1130
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1134
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1138
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1142
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1146
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 170:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1151
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1157
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1161
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1165
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1169
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1173
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1177
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1181
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1185
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1191
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1196
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1201
		{
			yyVAL.sqlVal = nil
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1205
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1210
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1214
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1222
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1226
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 187:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1232
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1240
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1244
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1249
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1253
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1259
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1263
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1267
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1272
		{
			yyVAL.optVal = nil
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1276
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1281
		{
			yyVAL.optVal = nil
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1285
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1290
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1294
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1299
		{
			yyVAL.str = ""
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1303
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1307
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1312
		{
			yyVAL.str = ""
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1316
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1320
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1325
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1329
		{
			yyVAL.colKeyOpt = ColKeyPrimary
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1333
		{
			yyVAL.colKeyOpt = ColKey
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1337
		{
			yyVAL.colKeyOpt = ColKeyUniqueKey
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1341
		{
			yyVAL.colKeyOpt = ColKeyUnique
		}
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1346
		{
			yyVAL.sqlVal = nil
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1350
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 214:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1356
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1360
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1366
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1370
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1376
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].colIdent.String())}
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1380
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1385
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1391
		{
			yyVAL.statement = &Sleep{Duration: NewIntVal(yyDollar[2].bytes)}
		}
	case 222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1397
		{
			yyVAL.str = ""
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1401
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1407
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1411
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1415
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1419
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1423
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1429
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1433
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1437
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1444
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1448
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1454
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1458
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = ""
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1467
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1473
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1477
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1483
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1489
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1493
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 243:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1500
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 244:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1504
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 245:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1508
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 246:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1512
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1518
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1524
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1530
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1538
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1542
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1546
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 254:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1551
		{
			yyVAL.str = ""
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1559
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1567
		{
			yyVAL.str = yyDollar[1].str
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1571
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1581
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1585
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1589
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 263:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1595
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 264:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1599
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 265:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1603
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 266:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1607
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 267:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1612
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1617
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1621
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1625
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1629
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 272:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1633
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1645
		{
			yyVAL.statement = &DDL{
				Action: DropVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1655
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1659
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 276:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1663
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 277:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1676
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 278:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1686
		{
			yyVAL.statement = &DDL{Action: AddSequenceStr, Table: yyDollar[5].tableName}
		}
	case 279:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1690
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncStr,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 294:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1719
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1725
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1729
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 297:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1735
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 298:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1739
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1745
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1751
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1755
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1763
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists, Modifier: "table"}
		}
	case 303:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1771
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName}
		}
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1776
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: exists}
		}
	case 305:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1784
		{
			var exists bool
			if yyDollar[4].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: TableNames{yyDollar[5].tableName.ToViewName()}, IfExists: exists, Modifier: yyDollar[2].str}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1792
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1796
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1802
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1806
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1811
		{
			yyVAL.statement = &OtherRead{}
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1817
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String())}
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1822
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Type: CharsetStr, ShowTablesOpt: showTablesOpt}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1827
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1832
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1837
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String())}
		}
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1841
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1845
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1849
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1853
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1857
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1861
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1865
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1870
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1874
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1878
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1882
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1886
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1891
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1901
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1909
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: yyDollar[4].expr}
		}
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1913
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Scope: string(yyDollar[2].bytes), Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1918
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1922
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1926
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1930
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 337:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1934
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[6].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].colIdent.String()), OnTable: yyDollar[5].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1951
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].colIdent.String()), ShowTablesOpt: showTablesOpt}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1956
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Scope: yyDollar[3].str}
		}
	case 340:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1961
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Comments: Comments(yyDollar[4].bytes2), Type: string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, ShowTablesOpt: showTablesOpt, Columns: yyDollar[6].columns}
		}
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1967
		{
			yyVAL.statement = &Show{Type: "TRANSACTION_ISOLATION_LEVEL"}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1973
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1977
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1983
		{
			yyVAL.str = ""
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1987
		{
			yyVAL.str = "extended "
		}
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1993
		{
			yyVAL.str = ""
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1997
		{
			yyVAL.str = "full "
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2003
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2007
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2013
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2017
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2021
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2027
		{
			yyVAL.showFilter = nil
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2031
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2035
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2041
		{
			yyVAL.showFilter = nil
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2045
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2051
		{
			yyVAL.str = ""
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2055
		{
			yyVAL.str = SessionStr
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2059
		{
			yyVAL.str = GlobalStr
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2065
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.statement = &Begin{}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2079
		{
			yyVAL.statement = &Begin{}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2085
		{
			yyVAL.statement = &Commit{}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2091
		{
			yyVAL.statement = &Rollback{}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2095
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2100
		{
			yyVAL.empty = struct{}{}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2102
		{
			yyVAL.empty = struct{}{}
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2105
		{
			yyVAL.empty = struct{}{}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2107
		{
			yyVAL.empty = struct{}{}
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2112
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2118
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2123
		{
			yyVAL.str = ""
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2127
		{
			yyVAL.str = JSONStr
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2131
		{
			yyVAL.str = TreeStr
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2135
		{
			yyVAL.str = VitessStr
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2139
		{
			yyVAL.str = TraditionalStr
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2143
		{
			yyVAL.str = AnalyzeStr
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2149
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2153
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2157
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2163
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2167
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2180
		{
			yyVAL.str = ""
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2184
		{
			yyVAL.str = ""
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2194
		{
			yyVAL.statement = &DescribeTable{Full: string(yyDollar[2].str), Extended: string(yyDollar[3].str), Table: yyDollar[4].tableName}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2198
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2204
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2208
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2212
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2216
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2222
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2226
		{
			setAllowComments(yylex, true)
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2230
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2236
		{
			yyVAL.bytes2 = nil
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2240
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2246
		{
			yyVAL.str = UnionStr
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2250
		{
			yyVAL.str = UnionAllStr
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2254
		{
			yyVAL.str = UnionDistinctStr
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2259
		{
			yyVAL.str = ""
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2263
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2267
		{
			yyVAL.str = SQLCacheStr
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2272
		{
			yyVAL.str = ""
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2276
		{
			yyVAL.str = DistinctStr
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2280
		{
			yyVAL.str = DistinctStr
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2285
		{
			yyVAL.selectExprs = nil
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2289
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2294
		{
			yyVAL.strs = nil
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2298
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2302
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2306
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2310
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2316
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2320
		{
			yyVAL.str = SQLCacheStr
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2324
		{
			yyVAL.str = DistinctStr
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2328
		{
			yyVAL.str = DistinctStr
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2332
		{
			yyVAL.str = StraightJoinHint
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2336
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2342
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2346
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2352
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2356
		{
			concatamer := ListArgConcatamer(yyDollar[2].listArgsConcat)
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: NewColIdent(concatamer.String())}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2361
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2365
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2369
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2374
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2378
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2382
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2389
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2394
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2398
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2404
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2408
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2419
		{
			yyVAL.tableExpr = &TableValuedFuncTableExpr{FuncExpr: yyDollar[1].expr, As: yyDollar[2].tableIdent}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2425
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2429
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2433
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2437
		{
			exec := yyDollar[2].statement.(*Exec)
			yyVAL.tableExpr = &ExecSubquery{Exec: exec}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2444
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2450
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 449:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2454
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2459
		{
			yyVAL.columns = nil
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2463
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2470
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2474
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2484
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2497
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2501
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2505
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2509
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2515
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2517
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2521
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2523
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2527
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2529
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2532
		{
			yyVAL.empty = struct{}{}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2534
		{
			yyVAL.empty = struct{}{}
		}
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2537
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2541
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2545
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2552
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2558
		{
			yyVAL.str = JoinStr
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2562
		{
			yyVAL.str = JoinStr
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2566
		{
			yyVAL.str = JoinStr
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2572
		{
			yyVAL.str = StraightJoinStr
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2578
		{
			yyVAL.str = LeftJoinStr
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2582
		{
			yyVAL.str = LeftOuterJoinStr
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2586
		{
			yyVAL.str = RightJoinStr
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2590
		{
			yyVAL.str = RightOuterJoinStr
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2596
		{
			yyVAL.str = NaturalJoinStr
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2600
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2610
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2614
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2620
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2624
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2628
		{
			yyVAL.tableName = TableName{QualifierSecond: yyDollar[1].tableIdent, Qualifier: yyDollar[3].tableIdent, Name: yyDollar[5].tableIdent}
		}
	case 488:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2632
		{
			yyVAL.tableName = TableName{QualifierThird: yyDollar[1].tableIdent, QualifierSecond: yyDollar[3].tableIdent, Qualifier: yyDollar[5].tableIdent, Name: yyDollar[7].tableIdent}
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2638
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2643
		{
			yyVAL.indexHints = nil
		}
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2647
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2651
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr}
		}
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2655
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2659
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2664
		{
			yyVAL.expr = nil
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2668
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2674
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2678
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2682
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2686
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2690
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2694
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2698
		{
			yyVAL.expr = &UnaryCastConcatamerExpr{Expr: yyDollar[1].expr, CastConcatamer: ListArgConcatamer(yyDollar[2].listArgsConcat)}
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2702
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2706
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2712
		{
			yyVAL.str = ""
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2716
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2722
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2726
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2732
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2736
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2740
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2744
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2748
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2752
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2756
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2760
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2764
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2768
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2774
		{
			yyVAL.str = IsNullStr
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2778
		{
			yyVAL.str = IsNotNullStr
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2782
		{
			yyVAL.str = IsTrueStr
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2786
		{
			yyVAL.str = IsNotTrueStr
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2790
		{
			yyVAL.str = IsFalseStr
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2794
		{
			yyVAL.str = IsNotFalseStr
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2800
		{
			yyVAL.str = EqualStr
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2804
		{
			yyVAL.str = LessThanStr
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2808
		{
			yyVAL.str = GreaterThanStr
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2812
		{
			yyVAL.str = LessEqualStr
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2816
		{
			yyVAL.str = GreaterEqualStr
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2820
		{
			yyVAL.str = NotEqualStr
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2824
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2829
		{
			yyVAL.expr = nil
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2833
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2839
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2843
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2847
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2852
		{
			yyVAL.listArgsConcat = []ListArg{ListArg(yyDollar[1].bytes)}
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2856
		{
			yyVAL.listArgsConcat = append(yyDollar[1].listArgsConcat, ListArg(yyDollar[2].bytes))
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2862
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2868
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2872
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2878
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2882
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2886
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2890
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2894
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2898
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2902
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2906
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2910
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2914
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2918
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2922
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2926
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2930
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2934
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2938
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2942
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2946
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2950
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2954
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2958
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2962
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2966
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Str, Expr: yyDollar[2].expr}
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2970
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2974
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Str, Expr: yyDollar[2].expr}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2978
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2986
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3000
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3004
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3008
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3016
		{
			inputStr := string(yyDollar[2].bytes)
			stringList := strings.Split(inputStr, " ")
			if len(stringList) != 2 {
				yylex.Error("the interval string '" + inputStr + "' is not valid")
				return 1
			}
			stringExpr := NewStrVal([]byte(stringList[0]))
			yyVAL.expr = &IntervalExpr{Expr: stringExpr, Unit: stringList[1]}
		}
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3033
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(yyDollar[1].str), Exprs: yyDollar[3].selectExprs}
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3039
		{
			yyVAL.str = JsonArrayElementsTextStr
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3043
		{
			yyVAL.str = JsonEachStr
		}
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3053
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3057
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3061
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3065
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3075
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3079
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3083
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3087
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3091
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 590:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3095
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 591:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3099
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 592:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3103
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 593:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3107
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 594:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3111
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 595:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3115
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3119
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3123
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3133
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3137
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3141
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3146
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3151
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3156
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3162
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3167
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3172
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3176
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3180
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3185
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3190
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3195
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 612:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3199
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 613:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3203
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3213
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3223
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3227
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3231
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3235
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3239
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3243
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3247
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3253
		{
			yyVAL.str = ""
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3257
		{
			yyVAL.str = BooleanModeStr
		}
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3261
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 627:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3265
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3269
		{
			yyVAL.str = QueryExpansionStr
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3275
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3279
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3285
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3289
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3293
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3297
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3301
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3305
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3311
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3315
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3319
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3323
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3327
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3331
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3335
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3339
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3344
		{
			yyVAL.expr = nil
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3348
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3353
		{
			yyVAL.str = string("")
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3357
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3363
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3367
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3373
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3378
		{
			yyVAL.expr = nil
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3382
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3388
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3392
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3396
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3402
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3406
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3410
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3414
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3418
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3422
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3426
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3430
		{
			yyVAL.expr = &NullVal{}
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3436
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3445
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3449
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3454
		{
			yyVAL.exprs = nil
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3458
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3463
		{
			yyVAL.expr = nil
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3467
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3472
		{
			yyVAL.orderBy = nil
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3476
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3482
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3486
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3492
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3497
		{
			yyVAL.str = AscScr
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3501
		{
			yyVAL.str = AscScr
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3505
		{
			yyVAL.str = DescScr
		}
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3510
		{
			yyVAL.limit = nil
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3514
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3518
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3522
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3527
		{
			yyVAL.str = ""
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3531
		{
			yyVAL.str = ForUpdateStr
		}
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3535
		{
			yyVAL.str = ShareModeStr
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3548
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3552
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3556
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3560
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3566
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3570
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3574
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3578
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3583
		{
			yyVAL.updateExprs = nil
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3587
		{
			yyVAL.updateExprs = yyDollar[1].updateExprs
		}
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3593
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3598
		{
			yyVAL.selectExprs = nil
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3602
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3608
		{
			yyVAL.selectExprs = yyDollar[2].selectExprs
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3614
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3618
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3624
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3628
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3634
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3640
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3650
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3654
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3660
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3666
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3670
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].str
			yyVAL.setExprs = SetExprs{yyDollar[2].setExpr}
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3675
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3681
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("on"))}
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3685
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("off"))}
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3689
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3693
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("on"))}
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3697
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("off"))}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3701
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3705
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3712
		{
			yyVAL.bytes = []byte("charset")
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3719
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3723
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3727
		{
			yyVAL.expr = &Default{}
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3736
		{
			yyVAL.byt = 0
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3738
		{
			yyVAL.byt = 1
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3741
		{
			yyVAL.byt = 0
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3743
		{
			yyVAL.byt = 1
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3746
		{
			yyVAL.str = ""
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3748
		{
			yyVAL.str = IgnoreStr
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3752
		{
			yyVAL.empty = struct{}{}
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3754
		{
			yyVAL.empty = struct{}{}
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3756
		{
			yyVAL.empty = struct{}{}
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3758
		{
			yyVAL.empty = struct{}{}
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3760
		{
			yyVAL.empty = struct{}{}
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3762
		{
			yyVAL.empty = struct{}{}
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3764
		{
			yyVAL.empty = struct{}{}
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3766
		{
			yyVAL.empty = struct{}{}
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3768
		{
			yyVAL.empty = struct{}{}
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3770
		{
			yyVAL.empty = struct{}{}
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3773
		{
			yyVAL.empty = struct{}{}
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3775
		{
			yyVAL.empty = struct{}{}
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3777
		{
			yyVAL.empty = struct{}{}
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3781
		{
			yyVAL.empty = struct{}{}
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3783
		{
			yyVAL.empty = struct{}{}
		}
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3786
		{
			yyVAL.empty = struct{}{}
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3788
		{
			yyVAL.empty = struct{}{}
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3790
		{
			yyVAL.empty = struct{}{}
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3793
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3795
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3799
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3803
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3810
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3816
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3820
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3827
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3833
		{
			yyVAL.execVarDef = NewExecVarDef(yyDollar[1].colIdent, yyDollar[3].expr)
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3839
		{
			yyVAL.execVarDef = NewExecVarDef(yyDollar[1].colIdent, yyDollar[3].expr)
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3845
		{
			yyVAL.execVarDefOpt = nil
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3847
		{
			rv := yyDollar[1].execVarDef
			yyVAL.execVarDefOpt = &rv
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3853
		{
			yyVAL.execVarDefs = nil
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3855
		{
			yyVAL.execVarDefs = []ExecVarDef{yyDollar[1].execVarDef}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3859
		{
			yyVAL.execVarDefs = append(yyDollar[1].execVarDefs, yyDollar[3].execVarDef)
		}
	case 769:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3866
		{
			yyVAL.statement = NewExec(yyDollar[2].bytes2, yyDollar[3].tableName, yyDollar[4].execVarDefs, yyDollar[5].execVarDefOpt)
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3872
		{
			yyVAL.statement = NewPurge(yyDollar[2].bytes2, TableName{}, true)
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3876
		{
			yyVAL.statement = NewPurge(yyDollar[2].bytes2, yyDollar[3].tableName, false)
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3882
		{
			yyVAL.statement = NewNativeQuery(yyDollar[2].bytes2, string(yyDollar[3].bytes))
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4227
		{
			decNesting(yylex)
		}
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4232
		{
			skipToEnd(yylex)
		}
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4237
		{
			skipToEnd(yylex)
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4241
		{
			skipToEnd(yylex)
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4245
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
