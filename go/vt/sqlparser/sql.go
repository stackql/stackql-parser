// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "strings"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:55
type yySymType struct {
	yys                  int
	empty                struct{}
	statement            Statement
	selStmt              SelectStatement
	ddl                  *DDL
	ins                  *Insert
	byt                  byte
	bytes                []byte
	bytes2               [][]byte
	str                  string
	strs                 []string
	selectExprs          SelectExprs
	selectExpr           SelectExpr
	columns              Columns
	partitions           Partitions
	colName              *ColName
	tableExprs           TableExprs
	tableExpr            TableExpr
	joinCondition        JoinCondition
	tableName            TableName
	tableNames           TableNames
	indexHints           *IndexHints
	expr                 Expr
	exprs                Exprs
	boolVal              BoolVal
	sqlVal               *SQLVal
	colTuple             ColTuple
	values               Values
	valTuple             ValTuple
	subquery             *Subquery
	execsubquery         *ExecSubquery
	whens                []*When
	when                 *When
	orderBy              OrderBy
	order                *Order
	limit                *Limit
	updateExprs          UpdateExprs
	setExprs             SetExprs
	updateExpr           *UpdateExpr
	setExpr              *SetExpr
	characteristic       Characteristic
	characteristics      []Characteristic
	colIdent             ColIdent
	tableIdent           TableIdent
	convertType          *ConvertType
	aliasedTableName     *AliasedTableExpr
	TableSpec            *TableSpec
	columnType           ColumnType
	colKeyOpt            ColumnKeyOption
	optVal               Expr
	LengthScaleOption    LengthScaleOption
	columnDefinition     *ColumnDefinition
	indexDefinition      *IndexDefinition
	indexInfo            *IndexInfo
	indexOption          *IndexOption
	indexOptions         []*IndexOption
	indexColumn          *IndexColumn
	indexColumns         []*IndexColumn
	constraintDefinition *ConstraintDefinition
	constraintInfo       ConstraintInfo
	ReferenceAction      ReferenceAction
	partDefs             []*PartitionDefinition
	partDef              *PartitionDefinition
	partSpec             *PartitionSpec
	vindexParam          VindexParam
	vindexParams         []VindexParam
	showFilter           *ShowFilter
	optLike              *OptLike
	execVarDef           ExecVarDef
	execVarDefOpt        *ExecVarDef
	execVarDefs          []ExecVarDef
	listArgsConcat       []ListArg
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const AS = 57364
const EXISTS = 57365
const ASC = 57366
const DESC = 57367
const INTO = 57368
const DUPLICATE = 57369
const KEY = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const DISTINCTROW = 57377
const VALUES = 57378
const LAST_INSERT_ID = 57379
const NEXT = 57380
const VALUE = 57381
const SHARE = 57382
const MODE = 57383
const SQL_NO_CACHE = 57384
const SQL_CACHE = 57385
const SQL_CALC_FOUND_ROWS = 57386
const JOIN = 57387
const STRAIGHT_JOIN = 57388
const LEFT = 57389
const RIGHT = 57390
const INNER = 57391
const OUTER = 57392
const CROSS = 57393
const NATURAL = 57394
const USE = 57395
const FORCE = 57396
const ON = 57397
const USING = 57398
const ID = 57399
const AT_ID = 57400
const AT_AT_ID = 57401
const HEX = 57402
const STRING = 57403
const INTEGRAL = 57404
const FLOAT = 57405
const HEXNUM = 57406
const VALUE_ARG = 57407
const LIST_ARG = 57408
const COMMENT = 57409
const COMMENT_KEYWORD = 57410
const BIT_LITERAL = 57411
const NULL = 57412
const TRUE = 57413
const FALSE = 57414
const OFF = 57415
const OR = 57416
const XOR = 57417
const AND = 57418
const NOT = 57419
const BETWEEN = 57420
const CASE = 57421
const WHEN = 57422
const THEN = 57423
const ELSE = 57424
const END = 57425
const LE = 57426
const GE = 57427
const NE = 57428
const NULL_SAFE_EQUAL = 57429
const IS = 57430
const LIKE = 57431
const REGEXP = 57432
const IN = 57433
const SHIFT_LEFT = 57434
const SHIFT_RIGHT = 57435
const DIV = 57436
const MOD = 57437
const UNARY = 57438
const COLLATE = 57439
const BINARY = 57440
const UNDERSCORE_BINARY = 57441
const UNDERSCORE_UTF8MB4 = 57442
const UNDERSCORE_UTF8 = 57443
const UNDERSCORE_LATIN1 = 57444
const INTERVAL = 57445
const JSON_EXTRACT_OP = 57446
const JSON_UNQUOTE_EXTRACT_OP = 57447
const CREATE = 57448
const ALTER = 57449
const DROP = 57450
const RENAME = 57451
const ANALYZE = 57452
const ADD = 57453
const FLUSH = 57454
const SCHEMA = 57455
const TABLE = 57456
const INDEX = 57457
const VIEW = 57458
const TO = 57459
const IGNORE = 57460
const IF = 57461
const UNIQUE = 57462
const PRIMARY = 57463
const COLUMN = 57464
const SPATIAL = 57465
const FULLTEXT = 57466
const KEY_BLOCK_SIZE = 57467
const CHECK = 57468
const INDEXES = 57469
const ACTION = 57470
const CASCADE = 57471
const CONSTRAINT = 57472
const FOREIGN = 57473
const NO = 57474
const REFERENCES = 57475
const RESTRICT = 57476
const SHOW = 57477
const DESCRIBE = 57478
const EXPLAIN = 57479
const DATE = 57480
const ESCAPE = 57481
const REPAIR = 57482
const OPTIMIZE = 57483
const TRUNCATE = 57484
const MAXVALUE = 57485
const PARTITION = 57486
const REORGANIZE = 57487
const LESS = 57488
const THAN = 57489
const PROCEDURE = 57490
const TRIGGER = 57491
const VINDEX = 57492
const VINDEXES = 57493
const STATUS = 57494
const VARIABLES = 57495
const WARNINGS = 57496
const SEQUENCE = 57497
const BEGIN = 57498
const START = 57499
const TRANSACTION = 57500
const COMMIT = 57501
const ROLLBACK = 57502
const SAVEPOINT = 57503
const RELEASE = 57504
const WORK = 57505
const BIT = 57506
const TINYINT = 57507
const SMALLINT = 57508
const MEDIUMINT = 57509
const INT = 57510
const INTEGER = 57511
const BIGINT = 57512
const INTNUM = 57513
const REAL = 57514
const DOUBLE = 57515
const FLOAT_TYPE = 57516
const DECIMAL = 57517
const NUMERIC = 57518
const TIME = 57519
const TIMESTAMP = 57520
const DATETIME = 57521
const YEAR = 57522
const CHAR = 57523
const VARCHAR = 57524
const BOOL = 57525
const CHARACTER = 57526
const VARBINARY = 57527
const NCHAR = 57528
const TEXT = 57529
const TINYTEXT = 57530
const MEDIUMTEXT = 57531
const LONGTEXT = 57532
const BLOB = 57533
const TINYBLOB = 57534
const MEDIUMBLOB = 57535
const LONGBLOB = 57536
const JSON = 57537
const ENUM = 57538
const GEOMETRY = 57539
const POINT = 57540
const LINESTRING = 57541
const POLYGON = 57542
const GEOMETRYCOLLECTION = 57543
const MULTIPOINT = 57544
const MULTILINESTRING = 57545
const MULTIPOLYGON = 57546
const NULLX = 57547
const AUTO_INCREMENT = 57548
const APPROXNUM = 57549
const SIGNED = 57550
const UNSIGNED = 57551
const ZEROFILL = 57552
const COLLATION = 57553
const DATABASES = 57554
const TABLES = 57555
const VITESS_METADATA = 57556
const VSCHEMA = 57557
const FULL = 57558
const PROCESSLIST = 57559
const COLUMNS = 57560
const FIELDS = 57561
const ENGINES = 57562
const PLUGINS = 57563
const EXTENDED = 57564
const NAMES = 57565
const CHARSET = 57566
const GLOBAL = 57567
const SESSION = 57568
const ISOLATION = 57569
const LEVEL = 57570
const READ = 57571
const WRITE = 57572
const ONLY = 57573
const REPEATABLE = 57574
const COMMITTED = 57575
const UNCOMMITTED = 57576
const SERIALIZABLE = 57577
const CURRENT_TIMESTAMP = 57578
const DATABASE = 57579
const CURRENT_DATE = 57580
const CURRENT_TIME = 57581
const LOCALTIME = 57582
const LOCALTIMESTAMP = 57583
const UTC_DATE = 57584
const UTC_TIME = 57585
const UTC_TIMESTAMP = 57586
const REPLACE = 57587
const CONVERT = 57588
const CAST = 57589
const SUBSTR = 57590
const SUBSTRING = 57591
const GROUP_CONCAT = 57592
const SEPARATOR = 57593
const TIMESTAMPADD = 57594
const TIMESTAMPDIFF = 57595
const MATCH = 57596
const AGAINST = 57597
const BOOLEAN = 57598
const LANGUAGE = 57599
const WITH = 57600
const QUERY = 57601
const EXPANSION = 57602
const UNUSED = 57603
const ARRAY = 57604
const CUME_DIST = 57605
const DESCRIPTION = 57606
const DENSE_RANK = 57607
const EMPTY = 57608
const EXCEPT = 57609
const FIRST_VALUE = 57610
const GROUPING = 57611
const GROUPS = 57612
const JSON_TABLE = 57613
const LAG = 57614
const LAST_VALUE = 57615
const LATERAL = 57616
const LEAD = 57617
const MEMBER = 57618
const NTH_VALUE = 57619
const NTILE = 57620
const OF = 57621
const OVER = 57622
const PERCENT_RANK = 57623
const RANK = 57624
const RECURSIVE = 57625
const ROW_NUMBER = 57626
const SYSTEM = 57627
const WINDOW = 57628
const ACTIVE = 57629
const ADMIN = 57630
const BUCKETS = 57631
const CLONE = 57632
const COMPONENT = 57633
const DEFINITION = 57634
const ENFORCED = 57635
const EXCLUDE = 57636
const FOLLOWING = 57637
const GEOMCOLLECTION = 57638
const GET_MASTER_PUBLIC_KEY = 57639
const HISTOGRAM = 57640
const HISTORY = 57641
const INACTIVE = 57642
const INVISIBLE = 57643
const LOCKED = 57644
const MASTER_COMPRESSION_ALGORITHMS = 57645
const MASTER_PUBLIC_KEY_PATH = 57646
const MASTER_TLS_CIPHERSUITES = 57647
const MASTER_ZSTD_COMPRESSION_LEVEL = 57648
const NESTED = 57649
const NETWORK_NAMESPACE = 57650
const NOWAIT = 57651
const NULLS = 57652
const OJ = 57653
const OLD = 57654
const OPTIONAL = 57655
const ORDINALITY = 57656
const ORGANIZATION = 57657
const OTHERS = 57658
const PATH = 57659
const PERSIST = 57660
const PERSIST_ONLY = 57661
const PRECEDING = 57662
const PRIVILEGE_CHECKS_USER = 57663
const PROCESS = 57664
const RANDOM = 57665
const REFERENCE = 57666
const REQUIRE_ROW_FORMAT = 57667
const RESOURCE = 57668
const RESPECT = 57669
const RESTART = 57670
const RETAIN = 57671
const REUSE = 57672
const ROLE = 57673
const SECONDARY = 57674
const SECONDARY_ENGINE = 57675
const SECONDARY_LOAD = 57676
const SECONDARY_UNLOAD = 57677
const SKIP = 57678
const SRID = 57679
const THREAD_PRIORITY = 57680
const TIES = 57681
const UNBOUNDED = 57682
const VCPU = 57683
const VISIBLE = 57684
const FORMAT = 57685
const TREE = 57686
const VITESS = 57687
const TRADITIONAL = 57688
const AUTH = 57689
const INTERACTIVE = 57690
const LOGIN = 57691
const REVOKE = 57692
const SA = 57693
const SERVICEACCOUNT = 57694
const SLEEP = 57695
const MATERIALIZED = 57696
const TEMP = 57697
const TEMPORARY = 57698
const JSON_EACH = 57699
const UNNEST = 57700
const REGISTRY = 57701
const PULL = 57702
const LIST = 57703
const EXEC = 57704
const PURGE = 57705
const NATIVEQUERY = 57706
const STACKQL = 57707

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"AUTH",
	"INTERACTIVE",
	"LOGIN",
	"REVOKE",
	"SA",
	"SERVICEACCOUNT",
	"SLEEP",
	"MATERIALIZED",
	"TEMP",
	"TEMPORARY",
	"JSON_EACH",
	"UNNEST",
	"REGISTRY",
	"PULL",
	"LIST",
	"EXEC",
	"PURGE",
	"NATIVEQUERY",
	"STACKQL",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	364, 94,
	376, 94,
	-2, 34,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 48,
	169, 353,
	170, 353,
	230, 341,
	234, 341,
	235, 341,
	236, 341,
	-2, 339,
	-1, 53,
	134, 363,
	-2, 361,
	-1, 56,
	6, 369,
	8, 369,
	9, 369,
	10, 369,
	57, 369,
	262, 369,
	-2, 341,
	-1, 82,
	38, 399,
	-2, 407,
	-1, 103,
	133, 84,
	-2, 956,
	-1, 104,
	132, 1034,
	-2, 82,
	-1, 105,
	132, 1035,
	-2, 83,
	-1, 359,
	80, 906,
	82, 906,
	88, 906,
	89, 906,
	90, 906,
	91, 906,
	92, 906,
	93, 906,
	94, 906,
	96, 906,
	97, 906,
	98, 906,
	99, 906,
	100, 906,
	101, 906,
	102, 906,
	103, 906,
	104, 906,
	105, 906,
	106, 906,
	107, 906,
	108, 906,
	109, 906,
	110, 906,
	113, 906,
	120, 906,
	121, 906,
	122, 906,
	-2, 501,
	-1, 419,
	120, 746,
	-2, 742,
	-1, 420,
	120, 747,
	-2, 743,
	-1, 440,
	38, 400,
	-2, 412,
	-1, 441,
	38, 401,
	-2, 413,
	-1, 464,
	88, 1022,
	-2, 80,
	-1, 465,
	88, 927,
	-2, 81,
	-1, 470,
	88, 894,
	134, 894,
	-2, 708,
	-1, 472,
	88, 964,
	134, 964,
	-2, 710,
	-1, 788,
	1, 421,
	5, 421,
	11, 421,
	12, 421,
	13, 421,
	14, 421,
	15, 421,
	17, 421,
	19, 421,
	31, 421,
	55, 421,
	58, 421,
	59, 421,
	268, 421,
	383, 421,
	-2, 498,
	-1, 809,
	56, 62,
	58, 62,
	-2, 66,
	-1, 997,
	120, 749,
	-2, 745,
	-1, 1473,
	5, 664,
	17, 664,
	19, 664,
	31, 664,
	59, 664,
	-2, 442,
}

const yyPrivate = 57344

const yyLast = 19409

var yyAct = [...]int{
	419, 1724, 1714, 1515, 1681, 1392, 363, 1526, 1294, 1594,
	1630, 1453, 1316, 1487, 378, 1085, 1282, 1117, 1140, 433,
	1113, 1295, 779, 1454, 1450, 1160, 637, 658, 392, 1459,
	361, 1126, 349, 726, 1055, 1465, 1146, 1037, 1415, 1221,
	1116, 935, 991, 106, 984, 1369, 1130, 310, 822, 626,
	310, 1358, 1086, 800, 1070, 106, 79, 442, 777, 1017,
	427, 807, 469, 81, 3, 33, 795, 782, 772, 961,
	799, 913, 1156, 365, 593, 458, 790, 821, 1081, 463,
	82, 455, 600, 77, 926, 96, 811, 677, 310, 106,
	76, 350, 594, 310, 353, 310, 354, 739, 764, 765,
	421, 886, 1063, 762, 763, 946, 1260, 317, 308, 1262,
	1261, 740, 422, 348, 7, 466, 320, 84, 85, 86,
	87, 88, 6, 5, 327, 323, 615, 1717, 1183, 1656,
	687, 686, 696, 697, 689, 690, 691, 692, 693, 694,
	695, 688, 1182, 428, 698, 423, 1701, 425, 426, 457,
	1712, 1689, 448, 1709, 595, 1516, 597, 1700, 325, 1688,
	1432, 598, 1549, 35, 332, 69, 38, 39, 334, 306,
	302, 303, 304, 108, 109, 110, 108, 109, 110, 1482,
	1483, 602, 603, 404, 1181, 410, 411, 408, 409, 407,
	406, 405, 298, 1481, 318, 296, 1104, 300, 1330, 412,
	413, 1329, 1105, 1106, 1331, 823, 660, 824, 942, 335,
	657, 652, 352, 351, 68, 653, 650, 651, 1349, 338,
	1139, 329, 321, 1394, 330, 331, 338, 1583, 1147, 1540,
	322, 324, 335, 1538, 319, 337, 336, 1178, 1175, 1176,
	342, 1174, 108, 109, 110, 944, 344, 632, 340, 634,
	902, 645, 646, 655, 947, 948, 949, 1396, 899, 901,
	1711, 1708, 1682, 1391, 1064, 1675, 1131, 1732, 601, 1631,
	1416, 994, 656, 616, 1185, 1188, 1728, 1638, 640, 1395,
	300, 631, 633, 825, 1633, 1317, 1319, 1397, 906, 661,
	1476, 903, 1133, 305, 299, 900, 1167, 310, 607, 608,
	599, 1388, 310, 642, 617, 1475, 1657, 1390, 310, 1474,
	596, 1418, 605, 1663, 1180, 604, 297, 310, 624, 316,
	301, 630, 106, 1564, 639, 1523, 106, 1326, 106, 826,
	108, 109, 110, 1114, 659, 1195, 1179, 1240, 1194, 888,
	710, 711, 1287, 1250, 1229, 106, 347, 612, 1420, 1200,
	1424, 817, 1419, 1237, 1417, 1632, 1133, 333, 606, 1422,
	794, 724, 622, 614, 108, 109, 110, 1318, 1421, 621,
	629, 1133, 688, 698, 1100, 698, 1184, 91, 623, 936,
	1687, 1423, 1425, 1147, 670, 671, 1639, 1637, 108, 109,
	110, 1186, 1726, 968, 856, 1727, 1132, 1725, 1043, 927,
	628, 678, 641, 108, 109, 110, 635, 966, 967, 965,
	665, 1389, 940, 1387, 643, 609, 92, 610, 1500, 70,
	611, 1673, 1647, 927, 310, 1463, 310, 676, 628, 1442,
	1018, 618, 619, 620, 708, 687, 686, 696, 697, 689,
	690, 691, 692, 693, 694, 695, 688, 710, 711, 698,
	769, 106, 1434, 310, 310, 310, 891, 1270, 669, 727,
	1132, 668, 106, 710, 711, 1018, 937, 1247, 106, 666,
	667, 663, 955, 957, 958, 1132, 1347, 1677, 844, 956,
	1129, 1127, 1136, 1128, 627, 766, 928, 767, 466, 1137,
	1125, 1131, 1222, 770, 691, 692, 693, 694, 695, 688,
	783, 68, 698, 742, 744, 746, 748, 750, 752, 753,
	928, 771, 627, 964, 797, 786, 809, 743, 745, 857,
	749, 751, 959, 754, 689, 690, 691, 692, 693, 694,
	695, 688, 798, 1692, 698, 1589, 810, 1588, 788, 1362,
	1361, 820, 1350, 815, 424, 870, 873, 874, 875, 876,
	877, 878, 1694, 879, 880, 881, 882, 883, 858, 859,
	860, 861, 842, 843, 871, 1674, 845, 1733, 846, 847,
	848, 849, 850, 851, 852, 853, 854, 855, 862, 863,
	864, 865, 866, 867, 868, 869, 108, 109, 110, 1214,
	1215, 1216, 678, 310, 1379, 295, 1610, 884, 1586, 1045,
	310, 890, 673, 892, 310, 1553, 310, 106, 106, 106,
	1440, 1734, 1359, 310, 1208, 918, 310, 768, 676, 310,
	911, 912, 592, 310, 1039, 106, 1375, 1376, 1377, 437,
	106, 106, 106, 310, 106, 106, 1644, 872, 1643, 1044,
	108, 109, 110, 678, 986, 1236, 106, 106, 1496, 1235,
	678, 1234, 675, 673, 834, 108, 109, 110, 674, 675,
	673, 889, 678, 78, 310, 893, 1283, 895, 1134, 676,
	674, 675, 673, 1462, 904, 917, 676, 457, 1560, 1265,
	910, 452, 453, 1269, 887, 915, 813, 894, 676, 930,
	1600, 1710, 678, 672, 923, 1696, 437, 907, 1378, 985,
	674, 675, 673, 1383, 1380, 1371, 1381, 1374, 987, 1370,
	962, 781, 1067, 1372, 1373, 1048, 1049, 437, 676, 1646,
	678, 931, 106, 1451, 929, 945, 1462, 1382, 674, 675,
	673, 814, 644, 816, 647, 1504, 1436, 1600, 1685, 1006,
	1009, 988, 989, 1600, 437, 1019, 676, 1600, 1665, 68,
	1001, 995, 1600, 1635, 35, 963, 106, 106, 1600, 1599,
	678, 1579, 1578, 659, 659, 1033, 1034, 1066, 674, 675,
	673, 1566, 437, 1067, 678, 727, 108, 109, 110, 80,
	1333, 106, 674, 675, 673, 1057, 676, 997, 310, 1040,
	1031, 1032, 106, 1563, 437, 1067, 996, 310, 1334, 1050,
	676, 1027, 1028, 1506, 1505, 68, 310, 310, 310, 998,
	1502, 1503, 310, 310, 1502, 1501, 310, 310, 310, 106,
	813, 995, 1056, 1090, 1056, 437, 381, 380, 383, 384,
	385, 386, 1462, 106, 594, 382, 387, 1103, 108, 109,
	110, 1058, 1264, 1067, 437, 466, 108, 109, 110, 1059,
	1035, 672, 437, 833, 832, 1253, 1252, 997, 1065, 1118,
	1056, 1142, 1143, 1144, 1145, 814, 1062, 812, 1060, 1083,
	1094, 812, 812, 430, 1096, 35, 1046, 1153, 1154, 1155,
	915, 905, 1057, 818, 1148, 1149, 1150, 310, 1702, 1596,
	1095, 106, 1098, 106, 1097, 310, 1187, 1102, 1101, 1289,
	310, 310, 310, 310, 310, 1290, 310, 310, 1121, 1162,
	310, 106, 1093, 696, 697, 689, 690, 691, 692, 693,
	694, 695, 688, 420, 68, 698, 68, 310, 35, 1056,
	310, 1141, 310, 1571, 1161, 310, 1492, 310, 310, 1466,
	1467, 1393, 310, 1403, 106, 1337, 106, 1157, 1166, 1165,
	1152, 1151, 328, 1158, 1159, 1597, 1172, 1164, 1617, 1719,
	1715, 1189, 1190, 1191, 1192, 1193, 107, 1196, 1197, 1494,
	311, 1198, 1469, 311, 1451, 1363, 941, 1472, 107, 68,
	1072, 1075, 1076, 1077, 1073, 1205, 1074, 1078, 1201, 909,
	1306, 1202, 1304, 797, 962, 1307, 1204, 1305, 1203, 1471,
	1002, 1003, 1303, 1209, 1008, 1011, 1012, 1302, 1706, 345,
	1699, 311, 107, 896, 897, 898, 311, 1308, 311, 1076,
	1077, 1231, 1444, 1272, 780, 1704, 1281, 1280, 1014, 1026,
	1354, 916, 1029, 1030, 1263, 1217, 920, 921, 922, 963,
	924, 925, 1015, 773, 831, 625, 1346, 1679, 1678, 1615,
	1022, 1344, 932, 933, 1339, 774, 1558, 1592, 310, 1230,
	1170, 443, 908, 1509, 428, 1365, 1168, 434, 310, 310,
	310, 310, 310, 1296, 1080, 444, 1246, 885, 431, 432,
	310, 1279, 784, 785, 446, 310, 445, 1557, 310, 1278,
	1072, 1075, 1076, 1077, 1073, 310, 1074, 1078, 435, 80,
	1466, 1467, 1556, 1447, 1283, 1275, 654, 1721, 1720, 1271,
	1322, 1241, 1324, 1238, 1325, 1332, 1286, 106, 934, 1276,
	1721, 787, 1298, 1299, 1284, 1301, 1338, 1291, 1546, 1661,
	659, 659, 436, 1309, 1335, 1321, 1285, 1584, 1297, 443,
	1315, 1300, 437, 1118, 1042, 430, 78, 83, 1314, 1082,
	29, 75, 1327, 444, 1, 1036, 1266, 1342, 1343, 1267,
	440, 441, 446, 1713, 445, 106, 1268, 1353, 310, 1355,
	1356, 1357, 1038, 1323, 1517, 1340, 1341, 1593, 1177, 1351,
	1352, 1680, 687, 686, 696, 697, 689, 690, 691, 692,
	693, 694, 695, 688, 1629, 1486, 698, 1124, 1115, 106,
	90, 310, 591, 89, 1360, 1672, 1368, 638, 687, 686,
	696, 697, 689, 690, 691, 692, 693, 694, 695, 688,
	311, 1384, 698, 1123, 1122, 311, 1636, 1582, 1135, 1366,
	106, 311, 1367, 1348, 1138, 1493, 985, 1345, 1676, 839,
	311, 837, 838, 1400, 836, 107, 1404, 841, 840, 107,
	835, 107, 1401, 1413, 326, 461, 1412, 943, 1405, 341,
	1079, 827, 1163, 915, 1226, 1227, 789, 1433, 107, 93,
	1386, 1411, 1399, 1385, 1173, 1427, 939, 1437, 310, 648,
	1426, 649, 706, 1277, 100, 1244, 1328, 467, 106, 460,
	1402, 1457, 1047, 106, 106, 776, 1296, 1169, 1452, 1171,
	1414, 1443, 1555, 1441, 1446, 1245, 736, 1016, 804, 364,
	954, 806, 379, 997, 1412, 376, 377, 1199, 1051, 1455,
	1288, 106, 996, 680, 362, 356, 803, 1071, 1069, 1461,
	1068, 456, 1468, 1464, 802, 106, 1470, 106, 106, 1445,
	1480, 659, 659, 801, 439, 1479, 1259, 311, 1548, 311,
	1477, 1655, 438, 1013, 1485, 1499, 56, 1211, 346, 37,
	447, 1118, 63, 1118, 310, 32, 31, 28, 1490, 1491,
	1489, 30, 1497, 1498, 107, 1484, 311, 311, 311, 27,
	22, 21, 20, 19, 18, 107, 310, 24, 17, 16,
	15, 107, 106, 613, 1518, 106, 106, 106, 310, 41,
	26, 25, 1510, 14, 106, 686, 696, 697, 689, 690,
	691, 692, 693, 694, 695, 688, 13, 1511, 698, 1513,
	12, 11, 10, 9, 8, 1507, 4, 664, 23, 1508,
	725, 2, 0, 1531, 0, 1533, 1534, 0, 1535, 0,
	0, 1537, 0, 1539, 0, 0, 1536, 1512, 0, 0,
	1524, 0, 1525, 0, 1528, 0, 0, 0, 0, 1522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1296,
	0, 0, 0, 1554, 0, 0, 0, 1559, 1567, 0,
	0, 0, 0, 0, 1568, 106, 0, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 450, 0, 0, 1577,
	1581, 0, 1335, 0, 0, 0, 0, 1580, 106, 0,
	0, 1118, 0, 0, 0, 0, 311, 106, 0, 0,
	0, 0, 0, 311, 310, 0, 0, 311, 0, 311,
	107, 107, 107, 1545, 0, 1603, 311, 0, 1585, 311,
	1587, 0, 311, 1595, 0, 0, 311, 0, 107, 0,
	393, 34, 0, 107, 107, 107, 311, 107, 107, 355,
	0, 0, 0, 0, 106, 106, 0, 106, 1609, 107,
	107, 1602, 106, 1591, 106, 106, 106, 310, 0, 1623,
	106, 1624, 1626, 1627, 1616, 34, 915, 311, 0, 1455,
	1622, 1614, 1628, 1634, 0, 1598, 0, 106, 310, 1640,
	1601, 106, 0, 0, 1648, 1398, 1641, 0, 1642, 0,
	0, 0, 0, 687, 686, 696, 697, 689, 690, 691,
	692, 693, 694, 695, 688, 0, 1618, 698, 429, 1662,
	0, 0, 1671, 0, 0, 0, 0, 0, 0, 0,
	1670, 1669, 1664, 0, 0, 107, 1455, 106, 106, 0,
	0, 0, 0, 0, 0, 0, 1683, 0, 0, 1649,
	0, 0, 0, 1544, 106, 1684, 0, 0, 1296, 0,
	1690, 0, 0, 1595, 1118, 0, 310, 0, 0, 107,
	107, 0, 0, 106, 0, 0, 0, 0, 0, 0,
	0, 1698, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1703, 1705, 106, 107, 0, 0, 0, 0, 0,
	1707, 311, 0, 0, 0, 107, 1718, 0, 0, 0,
	311, 0, 0, 1729, 0, 0, 0, 0, 0, 311,
	311, 311, 0, 0, 0, 311, 311, 1693, 0, 311,
	311, 311, 107, 687, 686, 696, 697, 689, 690, 691,
	692, 693, 694, 695, 688, 1543, 107, 698, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	682, 0, 685, 0, 0, 0, 999, 1000, 699, 700,
	701, 702, 703, 704, 705, 0, 683, 684, 681, 687,
	686, 696, 697, 689, 690, 691, 692, 693, 694, 695,
	688, 0, 0, 698, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 107, 0, 107, 0, 311, 0,
	0, 1041, 0, 311, 311, 311, 311, 311, 0, 311,
	311, 0, 0, 311, 107, 687, 686, 696, 697, 689,
	690, 691, 692, 693, 694, 695, 688, 0, 0, 698,
	311, 0, 0, 311, 679, 311, 0, 0, 311, 0,
	311, 311, 0, 0, 0, 311, 0, 107, 0, 107,
	0, 0, 636, 0, 1552, 0, 636, 0, 636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	355, 0, 0, 0, 0, 0, 0, 34, 0, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	707, 709, 0, 0, 1590, 687, 686, 696, 697, 689,
	690, 691, 692, 693, 694, 695, 688, 0, 390, 698,
	0, 775, 778, 0, 0, 0, 0, 0, 0, 0,
	0, 723, 0, 0, 0, 728, 729, 730, 731, 732,
	733, 734, 735, 0, 738, 741, 741, 741, 747, 741,
	741, 747, 741, 755, 756, 757, 758, 759, 760, 761,
	0, 102, 0, 0, 0, 0, 0, 0, 1551, 0,
	34, 311, 0, 343, 0, 0, 0, 0, 0, 0,
	0, 311, 311, 311, 311, 311, 0, 0, 0, 0,
	0, 0, 0, 311, 805, 0, 0, 0, 311, 0,
	0, 311, 0, 0, 0, 0, 0, 468, 311, 687,
	686, 696, 697, 689, 690, 691, 692, 693, 694, 695,
	688, 0, 0, 698, 0, 0, 0, 0, 1224, 0,
	107, 0, 1225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1232, 1233, 0, 0, 0, 0, 1239,
	0, 0, 1242, 1243, 0, 0, 0, 0, 0, 0,
	1249, 0, 1406, 0, 1251, 0, 0, 1254, 1255, 1256,
	1257, 1258, 0, 0, 0, 0, 0, 1223, 107, 0,
	0, 311, 687, 686, 696, 697, 689, 690, 691, 692,
	693, 694, 695, 688, 0, 0, 698, 687, 686, 696,
	697, 689, 690, 691, 692, 693, 694, 695, 688, 0,
	0, 698, 107, 0, 311, 919, 0, 0, 0, 0,
	0, 0, 1311, 1312, 1313, 687, 686, 696, 697, 689,
	690, 691, 692, 693, 694, 695, 688, 0, 0, 698,
	0, 938, 0, 107, 0, 0, 0, 636, 636, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 950,
	951, 952, 953, 0, 0, 636, 0, 0, 0, 0,
	636, 636, 636, 0, 636, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 636, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 107, 0, 0, 0, 0, 107, 107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1004, 1005, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 107, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 468, 0, 468, 0, 107, 0,
	107, 107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 662, 0, 0, 0, 1409, 1410, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 107, 0, 0, 107, 107,
	107, 311, 1109, 1112, 0, 358, 0, 107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1084, 0, 0, 1092,
	0, 0, 805, 0, 0, 1473, 805, 0, 0, 0,
	0, 0, 1478, 0, 0, 0, 0, 0, 0, 792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 0, 828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 107, 0, 0, 0, 0, 34, 0, 0, 0,
	107, 636, 0, 636, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 636, 1530, 0, 0, 0, 1532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1541, 1542, 0,
	0, 0, 0, 0, 0, 0, 0, 107, 107, 0,
	107, 0, 0, 0, 0, 107, 0, 107, 107, 107,
	311, 0, 0, 107, 0, 0, 0, 1561, 1562, 0,
	1565, 0, 0, 0, 0, 1248, 0, 0, 0, 0,
	107, 311, 0, 0, 107, 0, 0, 0, 1576, 0,
	0, 0, 0, 0, 0, 468, 468, 468, 0, 0,
	0, 1273, 1274, 778, 0, 0, 1228, 0, 391, 429,
	0, 0, 0, 468, 0, 0, 0, 0, 468, 468,
	468, 0, 468, 468, 0, 0, 0, 0, 0, 0,
	107, 107, 0, 0, 468, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 107, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 339, 311,
	0, 0, 0, 0, 0, 0, 107, 0, 805, 0,
	0, 0, 0, 0, 1292, 1293, 0, 0, 805, 805,
	805, 805, 805, 0, 1625, 0, 107, 0, 0, 0,
	0, 0, 0, 451, 0, 1084, 459, 0, 0, 0,
	0, 309, 1320, 309, 0, 805, 0, 0, 0, 0,
	990, 0, 0, 468, 0, 1651, 1652, 1653, 1654, 0,
	1658, 0, 1659, 1660, 0, 0, 0, 1020, 0, 0,
	0, 0, 0, 0, 0, 1666, 0, 1667, 1668, 0,
	0, 0, 0, 0, 1024, 1025, 0, 0, 0, 0,
	0, 0, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 0, 0, 0, 0, 1686, 0, 0, 1052,
	0, 35, 36, 69, 38, 39, 0, 0, 0, 34,
	792, 0, 0, 468, 0, 0, 0, 0, 0, 0,
	73, 1695, 0, 0, 0, 40, 59, 60, 0, 62,
	0, 0, 0, 0, 1435, 0, 0, 468, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 0,
	0, 468, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1730, 1731, 0, 0, 0, 0, 0,
	1448, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 468, 0, 0, 0, 0, 0, 0, 42, 43,
	45, 44, 47, 0, 61, 0, 0, 0, 0, 468,
	0, 1456, 0, 34, 0, 309, 0, 0, 0, 0,
	309, 0, 0, 0, 0, 0, 309, 48, 72, 71,
	0, 0, 57, 58, 46, 309, 0, 0, 0, 0,
	0, 0, 1210, 0, 1212, 0, 0, 0, 50, 51,
	0, 52, 53, 54, 55, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 34, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 355, 0, 0, 0, 0, 0, 0,
	1569, 0, 0, 1570, 0, 0, 1572, 70, 0, 0,
	0, 0, 309, 0, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 1547, 0, 0, 0, 0, 451, 0,
	0, 0, 0, 0, 0, 1020, 0, 0, 0, 0,
	0, 309, 309, 309, 0, 0, 960, 0, 0, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 0, 1573, 1574, 1575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	0, 0, 0, 1613, 355, 0, 0, 0, 636, 0,
	34, 0, 0, 0, 0, 0, 0, 1023, 0, 0,
	0, 0, 0, 0, 0, 65, 0, 0, 0, 0,
	0, 0, 0, 0, 64, 66, 67, 74, 0, 0,
	0, 0, 0, 1364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1456, 0, 34, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 1645, 0, 0, 0, 0, 309, 0,
	0, 0, 309, 0, 309, 0, 0, 0, 468, 0,
	0, 309, 0, 0, 309, 0, 0, 309, 1456, 0,
	0, 914, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 0, 0, 0, 468, 0, 1020, 0,
	0, 1458, 1460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1460,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1716, 468, 0, 468, 1488, 0, 0, 0,
	0, 0, 451, 914, 0, 0, 0, 451, 451, 0,
	0, 451, 451, 451, 0, 0, 0, 1021, 0, 0,
	0, 0, 1218, 1219, 1220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 451, 451, 451, 451,
	451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1514, 0, 0, 1519, 1520, 1521, 0, 0, 0, 0,
	0, 0, 1527, 0, 0, 0, 309, 0, 0, 0,
	0, 0, 0, 914, 0, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 1088, 1088, 0, 0, 0,
	309, 309, 0, 0, 309, 1099, 914, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1020, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 0, 0,
	0, 1527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 468, 0, 0, 0,
	0, 0, 0, 309, 0, 468, 0, 0, 309, 309,
	309, 309, 309, 0, 309, 309, 0, 0, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 309, 0,
	309, 0, 0, 309, 0, 1206, 1207, 0, 0, 0,
	309, 0, 1619, 1620, 0, 1621, 0, 0, 0, 0,
	1527, 0, 1527, 1527, 1527, 0, 0, 0, 1488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1527, 0, 0, 0, 1650,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 451, 451, 0, 0, 0, 0, 0, 1407, 1408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 451, 1428, 1429, 0, 1430, 1431, 0, 0,
	0, 0, 0, 0, 0, 468, 468, 0, 1438, 1439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1020, 0, 1691, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 451, 309, 0, 0, 0,
	0, 1697, 0, 0, 0, 1021, 309, 309, 309, 309,
	309, 0, 0, 0, 0, 0, 0, 0, 1310, 0,
	0, 1527, 0, 309, 0, 0, 1088, 0, 0, 0,
	0, 451, 0, 309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 914,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 914,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1021, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1604,
	1605, 1606, 1607, 1608, 0, 0, 0, 1611, 1612, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1021, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 914, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 577, 565,
	0, 523, 580, 495, 513, 588, 514, 517, 553, 481,
	535, 204, 511, 0, 499, 476, 507, 477, 497, 525,
	142, 172, 138, 567, 538, 579, 174, 0, 500, 586,
	176, 544, 0, 255, 191, 0, 0, 0, 527, 569,
	533, 562, 522, 554, 486, 543, 581, 512, 551, 582,
	0, 0, 0, 108, 109, 110, 0, 1119, 1120, 0,
	1021, 0, 0, 0, 131, 0, 548, 576, 509, 550,
	552, 590, 475, 545, 309, 479, 482, 587, 572, 503,
	504, 1336, 0, 0, 0, 0, 0, 0, 526, 534,
	559, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	501, 0, 542, 0, 0, 0, 483, 480, 0, 0,
	0, 0, 524, 0, 0, 0, 485, 0, 502, 560,
	0, 473, 151, 564, 571, 521, 315, 575, 519, 518,
	578, 223, 0, 260, 154, 173, 127, 168, 112, 123,
	0, 153, 201, 232, 236, 568, 498, 508, 135, 505,
	234, 211, 276, 541, 213, 233, 177, 266, 224, 275,
	285, 286, 263, 283, 290, 251, 116, 262, 274, 132,
	245, 0, 0, 0, 118, 272, 258, 189, 164, 165,
	117, 0, 230, 141, 149, 137, 203, 269, 270, 136,
	293, 124, 282, 120, 125, 281, 197, 265, 273, 190,
	182, 119, 271, 188, 181, 170, 145, 156, 221, 179,
	222, 157, 193, 192, 194, 0, 478, 0, 256, 279,
	294, 129, 494, 264, 288, 289, 0, 225, 130, 150,
	144, 220, 148, 195, 126, 159, 253, 169, 178, 229,
	292, 210, 235, 133, 278, 254, 490, 493, 488, 489,
	536, 537, 583, 584, 585, 561, 484, 0, 491, 492,
	0, 566, 573, 574, 540, 111, 121, 175, 291, 227,
	147, 280, 474, 487, 140, 496, 0, 0, 510, 515,
	516, 528, 529, 530, 531, 532, 539, 546, 547, 549,
	555, 556, 557, 558, 563, 570, 589, 113, 114, 122,
	128, 134, 139, 143, 146, 152, 155, 158, 160, 161,
	162, 167, 180, 184, 185, 186, 187, 198, 199, 200,
	202, 205, 206, 207, 208, 209, 212, 214, 215, 216,
	217, 218, 219, 228, 231, 237, 238, 239, 240, 241,
	242, 244, 247, 248, 249, 250, 257, 261, 267, 268,
	277, 284, 287, 0, 0, 0, 0, 115, 166, 183,
	243, 246, 252, 259, 312, 313, 314, 171, 0, 0,
	0, 0, 506, 226, 196, 163, 577, 565, 0, 523,
	580, 495, 513, 588, 514, 517, 553, 481, 535, 204,
	511, 0, 499, 476, 507, 477, 497, 525, 142, 172,
	138, 567, 538, 579, 174, 0, 500, 586, 176, 544,
	0, 255, 191, 0, 0, 0, 527, 569, 533, 562,
	522, 554, 486, 543, 581, 512, 551, 582, 0, 0,
	0, 108, 109, 110, 0, 1119, 1120, 0, 0, 0,
	0, 0, 131, 0, 548, 576, 509, 550, 552, 590,
	475, 545, 0, 479, 482, 587, 572, 503, 504, 0,
	0, 0, 0, 0, 0, 0, 526, 534, 559, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 501, 0,
	542, 0, 0, 0, 483, 480, 0, 0, 0, 0,
	524, 0, 0, 0, 485, 0, 502, 560, 0, 473,
	151, 564, 571, 521, 315, 575, 519, 518, 578, 223,
	0, 260, 154, 173, 127, 168, 112, 123, 0, 153,
	201, 232, 236, 568, 498, 508, 135, 505, 234, 211,
	276, 541, 213, 233, 177, 266, 224, 275, 285, 286,
	263, 283, 290, 251, 116, 262, 274, 132, 245, 0,
	0, 0, 118, 272, 258, 189, 164, 165, 117, 0,
	230, 141, 149, 137, 203, 269, 270, 136, 293, 124,
	282, 120, 125, 281, 197, 265, 273, 190, 182, 119,
	271, 188, 181, 170, 145, 156, 221, 179, 222, 157,
	193, 192, 194, 0, 478, 0, 256, 279, 294, 129,
	494, 264, 288, 289, 0, 225, 130, 150, 144, 220,
	148, 195, 126, 159, 253, 169, 178, 229, 292, 210,
	235, 133, 278, 254, 490, 493, 488, 489, 536, 537,
	583, 584, 585, 561, 484, 0, 491, 492, 0, 566,
	573, 574, 540, 111, 121, 175, 291, 227, 147, 280,
	474, 487, 140, 496, 0, 0, 510, 515, 516, 528,
	529, 530, 531, 532, 539, 546, 547, 549, 555, 556,
	557, 558, 563, 570, 589, 113, 114, 122, 128, 134,
	139, 143, 146, 152, 155, 158, 160, 161, 162, 167,
	180, 184, 185, 186, 187, 198, 199, 200, 202, 205,
	206, 207, 208, 209, 212, 214, 215, 216, 217, 218,
	219, 228, 231, 237, 238, 239, 240, 241, 242, 244,
	247, 248, 249, 250, 257, 261, 267, 268, 277, 284,
	287, 0, 0, 0, 0, 115, 166, 183, 243, 246,
	252, 259, 312, 313, 314, 171, 0, 0, 0, 0,
	506, 226, 196, 163, 577, 565, 0, 523, 580, 495,
	513, 588, 514, 517, 553, 481, 535, 204, 511, 0,
	499, 476, 507, 477, 497, 525, 142, 172, 138, 567,
	538, 579, 174, 0, 500, 586, 176, 544, 0, 255,
	191, 0, 0, 0, 527, 569, 533, 562, 522, 554,
	486, 543, 581, 512, 551, 582, 68, 0, 0, 108,
	109, 110, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 0, 548, 576, 509, 550, 552, 590, 475, 545,
	0, 479, 482, 587, 572, 503, 504, 0, 0, 0,
	0, 0, 0, 0, 526, 534, 559, 520, 0, 0,
	0, 0, 0, 0, 0, 0, 501, 0, 542, 0,
	0, 0, 483, 480, 0, 0, 0, 0, 524, 0,
	0, 0, 485, 0, 502, 560, 0, 473, 151, 564,
	571, 521, 315, 575, 519, 518, 578, 223, 0, 260,
	154, 173, 127, 168, 112, 123, 0, 153, 201, 232,
	236, 568, 498, 508, 135, 505, 234, 211, 276, 541,
	213, 233, 177, 266, 224, 275, 285, 286, 263, 283,
	290, 251, 116, 262, 274, 132, 245, 0, 0, 0,
	118, 272, 258, 189, 164, 165, 117, 0, 230, 141,
	149, 137, 203, 269, 270, 136, 293, 124, 282, 120,
	125, 281, 197, 265, 273, 190, 182, 119, 271, 188,
	181, 170, 145, 156, 221, 179, 222, 157, 193, 192,
	194, 0, 478, 0, 256, 279, 294, 129, 494, 264,
	288, 289, 0, 225, 130, 150, 144, 220, 148, 195,
	126, 159, 253, 169, 178, 229, 292, 210, 235, 133,
	278, 254, 490, 493, 488, 489, 536, 537, 583, 584,
	585, 561, 484, 0, 491, 492, 0, 566, 573, 574,
	540, 111, 121, 175, 291, 227, 147, 280, 474, 487,
	140, 496, 0, 0, 510, 515, 516, 528, 529, 530,
	531, 532, 539, 546, 547, 549, 555, 556, 557, 558,
	563, 570, 589, 113, 114, 122, 128, 134, 139, 143,
	146, 152, 155, 158, 160, 161, 162, 167, 180, 184,
	185, 186, 187, 198, 199, 200, 202, 205, 206, 207,
	208, 209, 212, 214, 215, 216, 217, 218, 219, 228,
	231, 237, 238, 239, 240, 241, 242, 244, 247, 248,
	249, 250, 257, 261, 267, 268, 277, 284, 287, 0,
	0, 0, 0, 115, 166, 183, 243, 246, 252, 259,
	312, 313, 314, 171, 0, 0, 0, 0, 506, 226,
	196, 163, 577, 565, 0, 523, 580, 495, 513, 588,
	514, 517, 553, 481, 535, 204, 511, 0, 499, 476,
	507, 477, 497, 525, 142, 172, 138, 567, 538, 579,
	174, 0, 500, 586, 176, 544, 0, 255, 191, 0,
	0, 0, 527, 569, 533, 562, 522, 554, 486, 543,
	581, 512, 551, 582, 0, 0, 0, 108, 109, 110,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 0,
	548, 576, 509, 550, 552, 590, 475, 545, 0, 479,
	482, 587, 572, 503, 504, 0, 0, 0, 0, 0,
	0, 0, 526, 534, 559, 520, 0, 0, 0, 0,
	0, 0, 1449, 0, 501, 0, 542, 0, 0, 0,
	483, 480, 0, 0, 0, 0, 524, 0, 0, 0,
	485, 0, 502, 560, 0, 473, 151, 564, 571, 521,
	315, 575, 519, 518, 578, 223, 0, 260, 154, 173,
	127, 168, 112, 123, 0, 153, 201, 232, 236, 568,
	498, 508, 135, 505, 234, 211, 276, 541, 213, 233,
	177, 266, 224, 275, 285, 286, 263, 283, 290, 251,
	116, 262, 274, 132, 245, 0, 0, 0, 118, 272,
	258, 189, 164, 165, 117, 0, 230, 141, 149, 137,
	203, 269, 270, 136, 293, 124, 282, 120, 125, 281,
	197, 265, 273, 190, 182, 119, 271, 188, 181, 170,
	145, 156, 221, 179, 222, 157, 193, 192, 194, 0,
	478, 0, 256, 279, 294, 129, 494, 264, 288, 289,
	0, 225, 130, 150, 144, 220, 148, 195, 126, 159,
	253, 169, 178, 229, 292, 210, 235, 133, 278, 254,
	490, 493, 488, 489, 536, 537, 583, 584, 585, 561,
	484, 0, 491, 492, 0, 566, 573, 574, 540, 111,
	121, 175, 291, 227, 147, 280, 474, 487, 140, 496,
	0, 0, 510, 515, 516, 528, 529, 530, 531, 532,
	539, 546, 547, 549, 555, 556, 557, 558, 563, 570,
	589, 113, 114, 122, 128, 134, 139, 143, 146, 152,
	155, 158, 160, 161, 162, 167, 180, 184, 185, 186,
	187, 198, 199, 200, 202, 205, 206, 207, 208, 209,
	212, 214, 215, 216, 217, 218, 219, 228, 231, 237,
	238, 239, 240, 241, 242, 244, 247, 248, 249, 250,
	257, 261, 267, 268, 277, 284, 287, 0, 0, 0,
	0, 115, 166, 183, 243, 246, 252, 259, 312, 313,
	314, 171, 0, 0, 0, 0, 506, 226, 196, 163,
	577, 565, 0, 523, 580, 495, 513, 588, 514, 517,
	553, 481, 535, 204, 511, 0, 499, 476, 507, 477,
	497, 525, 142, 172, 138, 567, 538, 579, 174, 0,
	500, 586, 176, 544, 0, 255, 191, 0, 0, 0,
	527, 569, 533, 562, 522, 554, 486, 543, 581, 512,
	551, 582, 0, 0, 0, 108, 109, 110, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 0, 548, 576,
	509, 550, 552, 590, 475, 545, 0, 479, 482, 587,
	572, 503, 504, 0, 0, 0, 0, 0, 0, 0,
	526, 534, 559, 520, 0, 0, 0, 0, 0, 0,
	1100, 0, 501, 0, 542, 0, 0, 0, 483, 480,
	0, 0, 0, 0, 524, 0, 0, 0, 485, 0,
	502, 560, 0, 473, 151, 564, 571, 521, 315, 575,
	519, 518, 578, 223, 0, 260, 154, 173, 127, 168,
	112, 123, 0, 153, 201, 232, 236, 568, 498, 508,
	135, 505, 234, 211, 276, 541, 213, 233, 177, 266,
	224, 275, 285, 286, 263, 283, 290, 251, 116, 262,
	274, 132, 245, 0, 0, 0, 118, 272, 258, 189,
	164, 165, 117, 0, 230, 141, 149, 137, 203, 269,
	270, 136, 293, 124, 282, 120, 125, 281, 197, 265,
	273, 190, 182, 119, 271, 188, 181, 170, 145, 156,
	221, 179, 222, 157, 193, 192, 194, 0, 478, 0,
	256, 279, 294, 129, 494, 264, 288, 289, 0, 225,
	130, 150, 144, 220, 148, 195, 126, 159, 253, 169,
	178, 229, 292, 210, 235, 133, 278, 254, 490, 493,
	488, 489, 536, 537, 583, 584, 585, 561, 484, 0,
	491, 492, 0, 566, 573, 574, 540, 111, 121, 175,
	291, 227, 147, 280, 474, 487, 140, 496, 0, 0,
	510, 515, 516, 528, 529, 530, 531, 532, 539, 546,
	547, 549, 555, 556, 557, 558, 563, 570, 589, 113,
	114, 122, 128, 134, 139, 143, 146, 152, 155, 158,
	160, 161, 162, 167, 180, 184, 185, 186, 187, 198,
	199, 200, 202, 205, 206, 207, 208, 209, 212, 214,
	215, 216, 217, 218, 219, 228, 231, 237, 238, 239,
	240, 241, 242, 244, 247, 248, 249, 250, 257, 261,
	267, 268, 277, 284, 287, 0, 0, 0, 0, 115,
	166, 183, 243, 246, 252, 259, 312, 313, 314, 171,
	0, 0, 0, 0, 506, 226, 196, 163, 577, 565,
	0, 523, 580, 495, 513, 588, 514, 517, 553, 481,
	535, 204, 511, 0, 499, 476, 507, 477, 497, 525,
	142, 172, 138, 567, 538, 579, 174, 0, 500, 586,
	176, 544, 0, 255, 191, 0, 0, 0, 527, 569,
	533, 562, 522, 554, 486, 543, 581, 512, 551, 582,
	0, 0, 0, 108, 109, 110, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 0, 548, 576, 509, 550,
	552, 590, 475, 545, 0, 479, 482, 587, 572, 503,
	504, 0, 0, 0, 0, 0, 0, 0, 526, 534,
	559, 520, 0, 0, 0, 0, 0, 0, 1061, 0,
	501, 0, 542, 0, 0, 0, 483, 480, 0, 0,
	0, 0, 524, 0, 0, 0, 485, 0, 502, 560,
	0, 473, 151, 564, 571, 521, 315, 575, 519, 518,
	578, 223, 0, 260, 154, 173, 127, 168, 112, 123,
	0, 153, 201, 232, 236, 568, 498, 508, 135, 505,
	234, 211, 276, 541, 213, 233, 177, 266, 224, 275,
	285, 286, 263, 283, 290, 251, 116, 262, 274, 132,
	245, 0, 0, 0, 118, 272, 258, 189, 164, 165,
	117, 0, 230, 141, 149, 137, 203, 269, 270, 136,
	293, 124, 282, 120, 125, 281, 197, 265, 273, 190,
	182, 119, 271, 188, 181, 170, 145, 156, 221, 179,
	222, 157, 193, 192, 194, 0, 478, 0, 256, 279,
	294, 129, 494, 264, 288, 289, 0, 225, 130, 150,
	144, 220, 148, 195, 126, 159, 253, 169, 178, 229,
	292, 210, 235, 133, 278, 254, 490, 493, 488, 489,
	536, 537, 583, 584, 585, 561, 484, 0, 491, 492,
	0, 566, 573, 574, 540, 111, 121, 175, 291, 227,
	147, 280, 474, 487, 140, 496, 0, 0, 510, 515,
	516, 528, 529, 530, 531, 532, 539, 546, 547, 549,
	555, 556, 557, 558, 563, 570, 589, 113, 114, 122,
	128, 134, 139, 143, 146, 152, 155, 158, 160, 161,
	162, 167, 180, 184, 185, 186, 187, 198, 199, 200,
	202, 205, 206, 207, 208, 209, 212, 214, 215, 216,
	217, 218, 219, 228, 231, 237, 238, 239, 240, 241,
	242, 244, 247, 248, 249, 250, 257, 261, 267, 268,
	277, 284, 287, 0, 0, 0, 0, 115, 166, 183,
	243, 246, 252, 259, 312, 313, 314, 171, 0, 0,
	0, 0, 506, 226, 196, 163, 577, 565, 0, 523,
	580, 495, 513, 588, 514, 517, 553, 481, 535, 204,
	511, 0, 499, 476, 507, 477, 497, 525, 142, 172,
	138, 567, 538, 579, 174, 0, 500, 586, 176, 544,
	0, 255, 191, 0, 0, 0, 527, 569, 533, 562,
	522, 554, 486, 543, 581, 512, 551, 582, 0, 0,
	0, 108, 109, 110, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 0, 548, 576, 509, 550, 552, 590,
	475, 545, 0, 479, 482, 587, 572, 503, 504, 0,
	0, 0, 0, 0, 0, 0, 526, 534, 559, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 501, 0,
	542, 0, 0, 0, 483, 480, 0, 0, 0, 0,
	524, 0, 0, 0, 485, 0, 502, 560, 0, 473,
	151, 564, 571, 521, 315, 575, 519, 518, 578, 223,
	0, 260, 154, 173, 127, 168, 112, 123, 0, 153,
	201, 232, 236, 568, 498, 508, 135, 505, 234, 211,
	276, 541, 213, 233, 177, 266, 224, 275, 285, 286,
	263, 283, 290, 251, 116, 262, 274, 132, 245, 0,
	0, 0, 118, 272, 258, 189, 164, 165, 117, 0,
	230, 141, 149, 137, 203, 269, 270, 136, 293, 124,
	282, 120, 125, 281, 197, 265, 273, 190, 182, 119,
	271, 188, 181, 170, 145, 156, 221, 179, 222, 157,
	193, 192, 194, 0, 478, 0, 256, 279, 294, 129,
	494, 264, 288, 289, 0, 225, 130, 150, 144, 220,
	148, 195, 126, 159, 253, 169, 178, 229, 292, 210,
	235, 133, 278, 254, 490, 493, 488, 489, 536, 537,
	583, 584, 585, 561, 484, 0, 491, 492, 0, 566,
	573, 574, 540, 111, 121, 175, 291, 227, 147, 280,
	474, 487, 140, 496, 0, 0, 510, 515, 516, 528,
	529, 530, 531, 532, 539, 546, 547, 549, 555, 556,
	557, 558, 563, 570, 589, 113, 114, 122, 128, 134,
	139, 143, 146, 152, 155, 158, 160, 161, 162, 167,
	180, 184, 185, 186, 187, 198, 199, 200, 202, 205,
	206, 207, 208, 209, 212, 214, 215, 216, 217, 218,
	219, 228, 231, 237, 238, 239, 240, 241, 242, 244,
	247, 248, 249, 250, 257, 261, 267, 268, 277, 284,
	287, 0, 0, 0, 0, 115, 166, 183, 243, 246,
	252, 259, 312, 313, 314, 171, 0, 0, 0, 0,
	506, 226, 196, 163, 577, 565, 0, 523, 580, 495,
	513, 588, 514, 517, 553, 481, 535, 204, 511, 0,
	499, 476, 507, 477, 497, 525, 142, 172, 138, 567,
	538, 579, 174, 0, 500, 586, 176, 544, 0, 255,
	191, 0, 0, 0, 527, 569, 533, 562, 522, 554,
	486, 543, 581, 512, 551, 582, 0, 0, 0, 108,
	109, 110, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 0, 548, 576, 509, 550, 552, 590, 475, 545,
	0, 479, 482, 587, 572, 503, 504, 0, 0, 0,
	0, 0, 0, 0, 526, 534, 559, 520, 0, 0,
	0, 0, 0, 0, 0, 0, 501, 0, 542, 0,
	0, 0, 483, 480, 0, 0, 0, 0, 524, 0,
	0, 0, 485, 0, 502, 560, 0, 473, 151, 564,
	571, 521, 315, 575, 519, 518, 578, 223, 0, 260,
	154, 173, 127, 168, 112, 123, 0, 153, 201, 232,
	236, 568, 498, 508, 135, 505, 234, 211, 276, 541,
	213, 233, 177, 266, 224, 275, 285, 286, 263, 283,
	290, 251, 116, 262, 274, 132, 245, 0, 0, 0,
	118, 272, 258, 189, 164, 165, 117, 0, 230, 141,
	149, 137, 203, 269, 270, 136, 293, 124, 282, 120,
	471, 281, 197, 265, 273, 190, 182, 119, 271, 188,
	181, 170, 145, 156, 221, 179, 222, 157, 193, 192,
	194, 0, 478, 0, 256, 279, 294, 129, 494, 264,
	288, 289, 0, 225, 130, 150, 144, 220, 148, 472,
	470, 159, 253, 169, 178, 229, 292, 210, 235, 133,
	278, 254, 490, 493, 488, 489, 536, 537, 583, 584,
	585, 561, 484, 0, 491, 492, 0, 566, 573, 574,
	540, 111, 121, 175, 291, 227, 147, 280, 474, 487,
	140, 496, 0, 0, 510, 515, 516, 528, 529, 530,
	531, 532, 539, 546, 547, 549, 555, 556, 557, 558,
	563, 570, 589, 113, 114, 122, 128, 134, 139, 143,
	146, 152, 155, 158, 160, 161, 162, 167, 180, 184,
	185, 186, 187, 198, 199, 200, 202, 205, 206, 207,
	208, 209, 212, 214, 215, 216, 217, 218, 219, 228,
	231, 237, 238, 239, 240, 241, 242, 244, 247, 248,
	249, 250, 257, 261, 267, 268, 277, 284, 287, 0,
	0, 0, 0, 115, 166, 183, 243, 246, 252, 259,
	312, 313, 314, 171, 0, 0, 0, 0, 506, 226,
	196, 163, 577, 565, 0, 523, 580, 495, 513, 588,
	514, 517, 553, 481, 535, 204, 511, 0, 499, 476,
	507, 477, 497, 525, 142, 172, 138, 567, 538, 579,
	174, 0, 500, 586, 176, 544, 0, 255, 191, 0,
	0, 0, 527, 569, 533, 562, 522, 554, 486, 543,
	581, 512, 551, 582, 0, 0, 0, 108, 109, 110,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 0,
	548, 576, 509, 550, 552, 590, 475, 545, 0, 479,
	482, 587, 572, 503, 504, 0, 0, 0, 0, 0,
	0, 0, 526, 534, 559, 520, 0, 0, 0, 0,
	0, 0, 0, 0, 501, 0, 542, 0, 0, 0,
	483, 480, 0, 0, 0, 0, 524, 0, 0, 0,
	485, 0, 502, 560, 0, 473, 151, 564, 571, 521,
	315, 575, 519, 518, 578, 223, 0, 260, 154, 173,
	127, 168, 112, 123, 0, 153, 201, 232, 236, 568,
	498, 508, 135, 505, 234, 211, 276, 541, 213, 233,
	177, 266, 224, 275, 285, 286, 263, 283, 290, 251,
	116, 262, 819, 132, 245, 0, 0, 0, 118, 272,
	258, 189, 164, 165, 117, 0, 230, 141, 149, 137,
	203, 269, 270, 136, 293, 124, 282, 120, 471, 281,
	197, 265, 273, 190, 182, 119, 271, 188, 181, 170,
	145, 156, 221, 179, 222, 157, 193, 192, 194, 0,
	478, 0, 256, 279, 294, 129, 494, 264, 288, 289,
	0, 225, 130, 150, 144, 220, 148, 472, 470, 159,
	253, 169, 178, 229, 292, 210, 235, 133, 278, 254,
	490, 493, 488, 489, 536, 537, 583, 584, 585, 561,
	484, 0, 491, 492, 0, 566, 573, 574, 540, 111,
	121, 175, 291, 227, 147, 280, 474, 487, 140, 496,
	0, 0, 510, 515, 516, 528, 529, 530, 531, 532,
	539, 546, 547, 549, 555, 556, 557, 558, 563, 570,
	589, 113, 114, 122, 128, 134, 139, 143, 146, 152,
	155, 158, 160, 161, 162, 167, 180, 184, 185, 186,
	187, 198, 199, 200, 202, 205, 206, 207, 208, 209,
	212, 214, 215, 216, 217, 218, 219, 228, 231, 237,
	238, 239, 240, 241, 242, 244, 247, 248, 249, 250,
	257, 261, 267, 268, 277, 284, 287, 0, 0, 0,
	0, 115, 166, 183, 243, 246, 252, 259, 312, 313,
	314, 171, 0, 0, 0, 0, 506, 226, 196, 163,
	577, 565, 0, 523, 580, 495, 513, 588, 514, 517,
	553, 481, 535, 204, 511, 0, 499, 476, 507, 477,
	497, 525, 142, 172, 138, 567, 538, 579, 174, 0,
	500, 586, 176, 544, 0, 255, 191, 0, 0, 0,
	527, 569, 533, 562, 522, 554, 486, 543, 581, 512,
	551, 582, 0, 0, 0, 108, 109, 110, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 0, 548, 576,
	509, 550, 552, 590, 475, 545, 0, 479, 482, 587,
	572, 503, 504, 0, 0, 0, 0, 0, 0, 0,
	526, 534, 559, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 501, 0, 542, 0, 0, 0, 483, 480,
	0, 0, 0, 0, 524, 0, 0, 0, 485, 0,
	502, 560, 0, 473, 151, 564, 571, 521, 315, 575,
	519, 518, 578, 223, 0, 260, 154, 173, 127, 168,
	112, 123, 0, 153, 201, 232, 236, 568, 498, 508,
	135, 505, 234, 211, 276, 541, 213, 233, 177, 266,
	224, 275, 285, 286, 263, 283, 290, 251, 116, 262,
	462, 132, 245, 0, 0, 0, 118, 272, 258, 189,
	164, 165, 117, 0, 230, 141, 149, 137, 203, 269,
	270, 136, 293, 124, 282, 120, 471, 281, 197, 265,
	273, 190, 182, 119, 271, 188, 181, 170, 145, 156,
	221, 179, 222, 157, 193, 192, 194, 0, 478, 0,
	256, 279, 294, 129, 494, 264, 288, 289, 0, 225,
	130, 150, 144, 220, 148, 472, 470, 465, 464, 169,
	178, 229, 292, 210, 235, 133, 278, 254, 490, 493,
	488, 489, 536, 537, 583, 584, 585, 561, 484, 0,
	491, 492, 0, 566, 573, 574, 540, 111, 121, 175,
	291, 227, 147, 280, 474, 487, 140, 496, 0, 0,
	510, 515, 516, 528, 529, 530, 531, 532, 539, 546,
	547, 549, 555, 556, 557, 558, 563, 570, 589, 113,
	114, 122, 128, 134, 139, 143, 146, 152, 155, 158,
	160, 161, 162, 167, 180, 184, 185, 186, 187, 198,
	199, 200, 202, 205, 206, 207, 208, 209, 212, 214,
	215, 216, 217, 218, 219, 228, 231, 237, 238, 239,
	240, 241, 242, 244, 247, 248, 249, 250, 257, 261,
	267, 268, 277, 284, 287, 0, 0, 0, 0, 115,
	166, 183, 243, 246, 252, 259, 312, 313, 314, 171,
	0, 0, 0, 0, 506, 226, 196, 163, 204, 0,
	0, 992, 0, 360, 0, 0, 0, 142, 172, 359,
	0, 0, 0, 174, 0, 993, 403, 176, 0, 0,
	255, 191, 0, 0, 0, 0, 0, 394, 395, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	108, 109, 110, 381, 380, 383, 384, 385, 386, 0,
	0, 131, 382, 387, 388, 389, 0, 0, 0, 0,
	357, 374, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 449, 0, 0, 0, 417,
	0, 373, 0, 0, 366, 367, 369, 368, 370, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	416, 0, 0, 315, 0, 0, 414, 0, 223, 0,
	260, 154, 173, 127, 168, 112, 123, 0, 153, 201,
	232, 236, 0, 0, 0, 135, 0, 234, 211, 276,
	0, 213, 233, 177, 266, 224, 275, 285, 286, 263,
	283, 290, 251, 116, 262, 274, 132, 245, 0, 0,
	0, 118, 272, 258, 189, 164, 165, 117, 0, 230,
	141, 149, 137, 203, 269, 270, 136, 293, 124, 282,
	120, 125, 281, 197, 265, 273, 190, 182, 119, 271,
	188, 181, 170, 145, 156, 221, 179, 222, 157, 193,
	192, 194, 0, 0, 0, 256, 279, 294, 129, 0,
	264, 288, 289, 0, 225, 130, 150, 144, 220, 148,
	195, 126, 159, 253, 169, 178, 229, 292, 210, 235,
	133, 278, 254, 404, 415, 410, 411, 408, 409, 407,
	406, 405, 418, 396, 397, 398, 399, 401, 0, 412,
	413, 400, 111, 121, 175, 291, 227, 147, 280, 0,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 114, 122, 128, 134, 139,
	143, 146, 152, 155, 158, 160, 161, 162, 167, 180,
	184, 185, 186, 187, 198, 199, 200, 202, 205, 206,
	207, 208, 209, 212, 214, 215, 216, 217, 218, 219,
	228, 231, 237, 238, 239, 240, 241, 242, 244, 247,
	248, 249, 250, 257, 261, 267, 268, 277, 284, 287,
	0, 0, 0, 0, 115, 166, 183, 243, 246, 252,
	259, 312, 313, 314, 171, 0, 0, 0, 204, 0,
	226, 196, 163, 360, 0, 0, 0, 142, 172, 359,
	0, 0, 0, 174, 0, 0, 403, 176, 0, 0,
	255, 191, 0, 0, 0, 0, 0, 394, 395, 0,
	0, 0, 0, 0, 0, 1110, 0, 68, 0, 0,
	108, 109, 110, 381, 380, 383, 384, 385, 386, 0,
	0, 131, 382, 387, 388, 389, 1111, 0, 0, 0,
	357, 374, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 0, 0, 0, 0, 417,
	0, 373, 0, 0, 366, 367, 369, 368, 370, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	416, 0, 0, 315, 0, 0, 414, 0, 223, 0,
	260, 154, 173, 127, 168, 112, 123, 0, 153, 201,
	232, 236, 0, 0, 0, 135, 0, 234, 211, 276,
	0, 213, 233, 177, 266, 224, 275, 285, 286, 263,
	283, 290, 251, 116, 262, 274, 132, 245, 0, 0,
	0, 118, 272, 258, 189, 164, 165, 117, 0, 230,
	141, 149, 137, 203, 269, 270, 136, 293, 124, 282,
	120, 125, 281, 197, 265, 273, 190, 182, 119, 271,
	188, 181, 170, 145, 156, 221, 179, 222, 157, 193,
	192, 194, 0, 0, 0, 256, 279, 294, 129, 0,
	264, 288, 289, 0, 225, 130, 150, 144, 220, 148,
	195, 126, 159, 253, 169, 178, 229, 292, 210, 235,
	133, 278, 254, 404, 415, 410, 411, 408, 409, 407,
	406, 405, 418, 396, 397, 398, 399, 401, 0, 412,
	413, 400, 111, 121, 175, 291, 227, 147, 280, 0,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 114, 122, 128, 134, 139,
	143, 146, 152, 155, 158, 160, 161, 162, 167, 180,
	184, 185, 186, 187, 198, 199, 200, 202, 205, 206,
	207, 208, 209, 212, 214, 215, 216, 217, 218, 219,
	228, 231, 237, 238, 239, 240, 241, 242, 244, 247,
	248, 249, 250, 257, 261, 267, 268, 277, 284, 287,
	0, 0, 0, 0, 115, 166, 183, 243, 246, 252,
	259, 312, 313, 314, 171, 0, 0, 0, 204, 0,
	226, 196, 163, 360, 0, 0, 0, 142, 172, 359,
	0, 0, 0, 174, 0, 0, 403, 176, 0, 0,
	255, 191, 0, 0, 0, 0, 0, 394, 395, 0,
	0, 0, 0, 0, 0, 1107, 0, 68, 0, 0,
	108, 109, 110, 381, 380, 383, 384, 385, 386, 0,
	0, 131, 382, 387, 388, 389, 1108, 0, 0, 0,
	357, 374, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 0, 0, 0, 0, 417,
	0, 373, 0, 0, 366, 367, 369, 368, 370, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	416, 0, 0, 315, 0, 0, 414, 0, 223, 0,
	260, 154, 173, 127, 168, 112, 123, 0, 153, 201,
	232, 236, 0, 0, 0, 135, 0, 234, 211, 276,
	0, 213, 233, 177, 266, 224, 275, 285, 286, 263,
	283, 290, 251, 116, 262, 274, 132, 245, 0, 0,
	0, 118, 272, 258, 189, 164, 165, 117, 0, 230,
	141, 149, 137, 203, 269, 270, 136, 293, 124, 282,
	120, 125, 281, 197, 265, 273, 190, 182, 119, 271,
	188, 181, 170, 145, 156, 221, 179, 222, 157, 193,
	192, 194, 0, 0, 0, 256, 279, 294, 129, 0,
	264, 288, 289, 0, 225, 130, 150, 144, 220, 148,
	195, 126, 159, 253, 169, 178, 229, 292, 210, 235,
	133, 278, 254, 404, 415, 410, 411, 408, 409, 407,
	406, 405, 418, 396, 397, 398, 399, 401, 0, 412,
	413, 400, 111, 121, 175, 291, 227, 147, 280, 0,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 114, 122, 128, 134, 139,
	143, 146, 152, 155, 158, 160, 161, 162, 167, 180,
	184, 185, 186, 187, 198, 199, 200, 202, 205, 206,
	207, 208, 209, 212, 214, 215, 216, 217, 218, 219,
	228, 231, 237, 238, 239, 240, 241, 242, 244, 247,
	248, 249, 250, 257, 261, 267, 268, 277, 284, 287,
	0, 0, 0, 0, 115, 166, 183, 243, 246, 252,
	259, 312, 313, 314, 171, 0, 0, 0, 204, 0,
	226, 196, 163, 360, 0, 0, 0, 142, 172, 359,
	0, 0, 0, 174, 0, 0, 403, 176, 0, 0,
	255, 191, 0, 0, 0, 0, 0, 394, 395, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 437,
	108, 109, 110, 381, 380, 383, 384, 385, 386, 0,
	0, 131, 382, 387, 388, 389, 0, 0, 0, 0,
	357, 374, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 0, 0, 0, 0, 417,
	0, 373, 0, 0, 366, 367, 369, 368, 370, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	416, 0, 0, 315, 0, 0, 414, 0, 223, 0,
	260, 154, 173, 127, 168, 112, 123, 0, 153, 201,
	232, 236, 0, 0, 0, 135, 0, 234, 211, 276,
	0, 213, 233, 177, 266, 224, 275, 285, 286, 263,
	283, 290, 251, 116, 262, 274, 132, 245, 0, 0,
	0, 118, 272, 258, 189, 164, 165, 117, 0, 230,
	141, 149, 137, 203, 269, 270, 136, 293, 124, 282,
	120, 125, 281, 197, 265, 273, 190, 182, 119, 271,
	188, 181, 170, 145, 156, 221, 179, 222, 157, 193,
	192, 194, 0, 0, 0, 256, 279, 294, 129, 0,
	264, 288, 289, 0, 225, 130, 150, 144, 220, 148,
	195, 126, 159, 253, 169, 178, 229, 292, 210, 235,
	133, 278, 254, 404, 415, 410, 411, 408, 409, 407,
	406, 405, 418, 396, 397, 398, 399, 401, 0, 412,
	413, 400, 111, 121, 175, 291, 227, 147, 280, 0,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 114, 122, 128, 134, 139,
	143, 146, 152, 155, 158, 160, 161, 162, 167, 180,
	184, 185, 186, 187, 198, 199, 200, 202, 205, 206,
	207, 208, 209, 212, 214, 215, 216, 217, 218, 219,
	228, 231, 237, 238, 239, 240, 241, 242, 244, 247,
	248, 249, 250, 257, 261, 267, 268, 277, 284, 287,
	0, 0, 0, 0, 115, 166, 183, 243, 246, 252,
	259, 312, 313, 314, 171, 0, 0, 0, 204, 0,
	226, 196, 163, 360, 0, 0, 0, 142, 172, 359,
	0, 0, 0, 174, 0, 0, 403, 176, 0, 0,
	255, 191, 0, 0, 0, 0, 0, 394, 395, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	108, 109, 110, 381, 380, 383, 384, 385, 386, 0,
	0, 131, 382, 387, 388, 389, 0, 0, 0, 0,
	357, 374, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 449, 0, 0, 0, 417,
	0, 373, 0, 0, 366, 367, 369, 368, 370, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	416, 0, 0, 315, 0, 0, 414, 0, 223, 0,
	260, 154, 173, 127, 168, 112, 123, 0, 153, 201,
	232, 236, 0, 0, 0, 135, 0, 234, 211, 276,
	0, 213, 233, 177, 266, 224, 275, 285, 286, 263,
	283, 290, 251, 116, 262, 274, 132, 245, 0, 0,
	0, 118, 272, 258, 189, 164, 165, 117, 0, 230,
	141, 149, 137, 203, 269, 270, 136, 293, 124, 282,
	120, 125, 281, 197, 265, 273, 190, 182, 119, 271,
	188, 181, 170, 145, 156, 221, 179, 222, 157, 193,
	192, 194, 0, 0, 0, 256, 279, 294, 129, 0,
	264, 288, 289, 0, 225, 130, 150, 144, 220, 148,
	195, 126, 159, 253, 169, 178, 229, 292, 210, 235,
	133, 278, 254, 404, 415, 410, 411, 408, 409, 407,
	406, 405, 418, 396, 397, 398, 399, 401, 0, 412,
	413, 400, 111, 121, 175, 291, 227, 147, 280, 0,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 114, 122, 128, 134, 139,
	143, 146, 152, 155, 158, 160, 161, 162, 167, 180,
	184, 185, 186, 187, 198, 199, 200, 202, 205, 206,
	207, 208, 209, 212, 214, 215, 216, 217, 218, 219,
	228, 231, 237, 238, 239, 240, 241, 242, 244, 247,
	248, 249, 250, 257, 261, 267, 268, 277, 284, 287,
	0, 0, 0, 0, 115, 166, 183, 243, 246, 252,
	259, 312, 313, 314, 171, 0, 0, 0, 204, 0,
	226, 196, 163, 360, 0, 0, 0, 142, 172, 359,
	0, 0, 0, 174, 0, 0, 403, 176, 0, 0,
	255, 191, 0, 0, 0, 0, 0, 394, 395, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	108, 109, 110, 381, 1010, 383, 384, 385, 386, 0,
	0, 131, 382, 387, 388, 389, 0, 0, 0, 0,
	357, 374, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 449, 0, 0, 0, 417,
	0, 373, 0, 0, 366, 367, 369, 368, 370, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	416, 0, 0, 315, 0, 0, 414, 0, 223, 0,
	260, 154, 173, 127, 168, 112, 123, 0, 153, 201,
	232, 236, 0, 0, 0, 135, 0, 234, 211, 276,
	0, 213, 233, 177, 266, 224, 275, 285, 286, 263,
	283, 290, 251, 116, 262, 274, 132, 245, 0, 0,
	0, 118, 272, 258, 189, 164, 165, 117, 0, 230,
	141, 149, 137, 203, 269, 270, 136, 293, 124, 282,
	120, 125, 281, 197, 265, 273, 190, 182, 119, 271,
	188, 181, 170, 145, 156, 221, 179, 222, 157, 193,
	192, 194, 0, 0, 0, 256, 279, 294, 129, 0,
	264, 288, 289, 0, 225, 130, 150, 144, 220, 148,
	195, 126, 159, 253, 169, 178, 229, 292, 210, 235,
	133, 278, 254, 404, 415, 410, 411, 408, 409, 407,
	406, 405, 418, 396, 397, 398, 399, 401, 0, 412,
	413, 400, 111, 121, 175, 291, 227, 147, 280, 0,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 114, 122, 128, 134, 139,
	143, 146, 152, 155, 158, 160, 161, 162, 167, 180,
	184, 185, 186, 187, 198, 199, 200, 202, 205, 206,
	207, 208, 209, 212, 214, 215, 216, 217, 218, 219,
	228, 231, 237, 238, 239, 240, 241, 242, 244, 247,
	248, 249, 250, 257, 261, 267, 268, 277, 284, 287,
	0, 0, 0, 0, 115, 166, 183, 243, 246, 252,
	259, 312, 313, 314, 171, 0, 0, 0, 204, 0,
	226, 196, 163, 360, 0, 0, 0, 142, 172, 359,
	0, 0, 0, 174, 0, 0, 403, 176, 0, 0,
	255, 191, 0, 0, 0, 0, 0, 394, 395, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	108, 109, 110, 381, 1007, 383, 384, 385, 386, 0,
	0, 131, 382, 387, 388, 389, 0, 0, 0, 0,
	357, 374, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 449, 0, 0, 0, 417,
	0, 373, 0, 0, 366, 367, 369, 368, 370, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	416, 0, 0, 315, 0, 0, 414, 0, 223, 0,
	260, 154, 173, 127, 168, 112, 123, 0, 153, 201,
	232, 236, 0, 0, 0, 135, 0, 234, 211, 276,
	0, 213, 233, 177, 266, 224, 275, 285, 286, 263,
	283, 290, 251, 116, 262, 274, 132, 245, 0, 0,
	0, 118, 272, 258, 189, 164, 165, 117, 0, 230,
	141, 149, 137, 203, 269, 270, 136, 293, 124, 282,
	120, 125, 281, 197, 265, 273, 190, 182, 119, 271,
	188, 181, 170, 145, 156, 221, 179, 222, 157, 193,
	192, 194, 0, 0, 0, 256, 279, 294, 129, 0,
	264, 288, 289, 0, 225, 130, 150, 144, 220, 148,
	195, 126, 159, 253, 169, 178, 229, 292, 210, 235,
	133, 278, 254, 404, 415, 410, 411, 408, 409, 407,
	406, 405, 418, 396, 397, 398, 399, 401, 0, 412,
	413, 400, 111, 121, 175, 291, 227, 147, 280, 0,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 114, 122, 128, 134, 139,
	143, 146, 152, 155, 158, 160, 161, 162, 167, 180,
	184, 185, 186, 187, 198, 199, 200, 202, 205, 206,
	207, 208, 209, 212, 214, 215, 216, 217, 218, 219,
	228, 231, 237, 238, 239, 240, 241, 242, 244, 247,
	248, 249, 250, 257, 261, 267, 268, 277, 284, 287,
	0, 0, 0, 0, 115, 166, 183, 243, 246, 252,
	259, 312, 313, 314, 171, 430, 0, 0, 0, 0,
	226, 196, 163, 0, 0, 0, 0, 204, 0, 0,
	0, 0, 360, 0, 0, 0, 142, 172, 359, 0,
	0, 0, 174, 0, 0, 403, 176, 0, 0, 255,
	191, 0, 0, 0, 0, 0, 394, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 0, 108,
	109, 110, 381, 380, 383, 384, 385, 386, 0, 0,
	131, 382, 387, 388, 389, 0, 0, 0, 0, 357,
	374, 0, 402, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 0, 0, 0, 0, 417, 0,
	373, 0, 0, 366, 367, 369, 368, 370, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 416,
	0, 0, 315, 0, 0, 414, 0, 223, 0, 260,
	154, 173, 127, 168, 112, 123, 0, 153, 201, 232,
	236, 0, 0, 0, 135, 0, 234, 211, 276, 0,
	213, 233, 177, 266, 224, 275, 285, 286, 263, 283,
	290, 251, 116, 262, 274, 132, 245, 0, 0, 0,
	118, 272, 258, 189, 164, 165, 117, 0, 230, 141,
	149, 137, 203, 269, 270, 136, 293, 124, 282, 120,
	125, 281, 197, 265, 273, 190, 182, 119, 271, 188,
	181, 170, 145, 156, 221, 179, 222, 157, 193, 192,
	194, 0, 0, 0, 256, 279, 294, 129, 0, 264,
	288, 289, 0, 225, 130, 150, 144, 220, 148, 195,
	126, 159, 253, 169, 178, 229, 292, 210, 235, 133,
	278, 254, 404, 415, 410, 411, 408, 409, 407, 406,
	405, 418, 396, 397, 398, 399, 401, 0, 412, 413,
	400, 111, 121, 175, 291, 227, 147, 280, 0, 0,
	140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 113, 114, 122, 128, 134, 139, 143,
	146, 152, 155, 158, 160, 161, 162, 167, 180, 184,
	185, 186, 187, 198, 199, 200, 202, 205, 206, 207,
	208, 209, 212, 214, 215, 216, 217, 218, 219, 228,
	231, 237, 238, 239, 240, 241, 242, 244, 247, 248,
	249, 250, 257, 261, 267, 268, 277, 284, 287, 0,
	0, 0, 0, 115, 166, 183, 243, 246, 252, 259,
	312, 313, 314, 171, 0, 0, 0, 204, 0, 226,
	196, 163, 360, 0, 0, 0, 142, 172, 359, 0,
	0, 0, 174, 0, 0, 403, 176, 0, 0, 255,
	191, 0, 0, 0, 0, 0, 394, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 0, 108,
	109, 110, 381, 380, 383, 384, 385, 386, 0, 0,
	131, 382, 387, 388, 389, 0, 0, 0, 0, 357,
	374, 0, 402, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 0, 0, 0, 0, 417, 0,
	373, 0, 0, 366, 367, 369, 368, 370, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 416,
	0, 0, 315, 0, 0, 414, 0, 223, 0, 260,
	154, 173, 127, 168, 112, 123, 0, 153, 201, 232,
	236, 0, 0, 0, 135, 0, 234, 211, 276, 0,
	213, 233, 177, 266, 224, 275, 285, 286, 263, 283,
	290, 251, 116, 262, 274, 132, 245, 0, 0, 0,
	118, 272, 258, 189, 164, 165, 117, 0, 230, 141,
	149, 137, 203, 269, 270, 136, 293, 124, 282, 120,
	125, 281, 197, 265, 273, 190, 182, 119, 271, 188,
	181, 170, 145, 156, 221, 179, 222, 157, 193, 192,
	194, 0, 0, 0, 256, 279, 294, 129, 0, 264,
	288, 289, 0, 225, 130, 150, 144, 220, 148, 195,
	126, 159, 253, 169, 178, 229, 292, 210, 235, 133,
	278, 254, 404, 415, 410, 411, 408, 409, 407, 406,
	405, 418, 396, 397, 398, 399, 401, 0, 412, 413,
	400, 111, 121, 175, 291, 227, 147, 280, 0, 0,
	140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 113, 114, 122, 128, 134, 139, 143,
	146, 152, 155, 158, 160, 161, 162, 167, 180, 184,
	185, 186, 187, 198, 199, 200, 202, 205, 206, 207,
	208, 209, 212, 214, 215, 216, 217, 218, 219, 228,
	231, 237, 238, 239, 240, 241, 242, 244, 247, 248,
	249, 250, 257, 261, 267, 268, 277, 284, 287, 0,
	0, 0, 0, 115, 166, 183, 243, 246, 252, 259,
	312, 313, 314, 171, 204, 0, 0, 0, 0, 226,
	196, 163, 0, 142, 172, 138, 0, 0, 0, 174,
	0, 0, 403, 176, 0, 0, 255, 191, 0, 0,
	0, 0, 0, 394, 395, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 108, 109, 110, 381,
	380, 383, 384, 385, 386, 0, 0, 131, 382, 387,
	388, 389, 0, 0, 0, 0, 0, 374, 0, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 0, 0, 0, 0, 417, 0, 373, 0, 0,
	366, 367, 369, 368, 370, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 416, 0, 0, 315,
	0, 0, 414, 0, 223, 0, 260, 154, 173, 127,
	168, 112, 123, 0, 153, 201, 232, 236, 0, 0,
	0, 135, 0, 234, 211, 276, 1723, 213, 233, 177,
	266, 224, 275, 285, 286, 263, 283, 290, 251, 116,
	262, 274, 132, 245, 0, 0, 0, 118, 272, 258,
	189, 164, 165, 117, 0, 230, 141, 149, 137, 203,
	269, 270, 136, 293, 124, 282, 120, 125, 281, 197,
	265, 273, 190, 182, 119, 271, 188, 181, 170, 145,
	156, 221, 179, 222, 157, 193, 192, 194, 0, 0,
	0, 256, 279, 294, 129, 0, 264, 288, 289, 0,
	225, 130, 150, 144, 220, 148, 195, 126, 159, 253,
	169, 178, 229, 292, 210, 235, 133, 278, 254, 404,
	415, 410, 411, 408, 409, 407, 406, 405, 418, 396,
	397, 398, 399, 401, 0, 412, 413, 400, 111, 121,
	175, 291, 227, 147, 280, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 114, 122, 128, 134, 139, 143, 146, 152, 155,
	158, 160, 161, 162, 167, 180, 184, 185, 186, 187,
	198, 199, 200, 202, 205, 206, 207, 208, 209, 212,
	214, 215, 216, 217, 218, 219, 228, 231, 237, 238,
	239, 240, 241, 242, 244, 247, 248, 249, 250, 257,
	261, 267, 268, 277, 284, 287, 0, 0, 0, 0,
	115, 166, 183, 243, 246, 252, 259, 312, 313, 314,
	171, 204, 0, 0, 0, 0, 226, 196, 163, 0,
	142, 172, 138, 0, 0, 0, 174, 0, 0, 403,
	176, 0, 0, 255, 191, 0, 0, 0, 0, 0,
	394, 395, 0, 0, 0, 0, 0, 0, 0, 0,
	68, 0, 437, 108, 109, 110, 381, 380, 383, 384,
	385, 386, 0, 0, 131, 382, 387, 388, 389, 0,
	0, 0, 0, 0, 374, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 0, 0,
	0, 0, 417, 0, 373, 0, 0, 366, 367, 369,
	368, 370, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 416, 0, 0, 315, 0, 0, 414,
	0, 223, 0, 260, 154, 173, 127, 168, 112, 123,
	0, 153, 201, 232, 236, 0, 0, 0, 135, 0,
	234, 211, 276, 0, 213, 233, 177, 266, 224, 275,
	285, 286, 263, 283, 290, 251, 116, 262, 274, 132,
	245, 0, 0, 0, 118, 272, 258, 189, 164, 165,
	117, 0, 230, 141, 149, 137, 203, 269, 270, 136,
	293, 124, 282, 120, 125, 281, 197, 265, 273, 190,
	182, 119, 271, 188, 181, 170, 145, 156, 221, 179,
	222, 157, 193, 192, 194, 0, 0, 0, 256, 279,
	294, 129, 0, 264, 288, 289, 0, 225, 130, 150,
	144, 220, 148, 195, 126, 159, 253, 169, 178, 229,
	292, 210, 235, 133, 278, 254, 404, 415, 410, 411,
	408, 409, 407, 406, 405, 418, 396, 397, 398, 399,
	401, 0, 412, 413, 400, 111, 121, 175, 291, 227,
	147, 280, 0, 0, 140, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 114, 122,
	128, 134, 139, 143, 146, 152, 155, 158, 160, 161,
	162, 167, 180, 184, 185, 186, 187, 198, 199, 200,
	202, 205, 206, 207, 208, 209, 212, 214, 215, 216,
	217, 218, 219, 228, 231, 237, 238, 239, 240, 241,
	242, 244, 247, 248, 249, 250, 257, 261, 267, 268,
	277, 284, 287, 0, 0, 0, 0, 115, 166, 183,
	243, 246, 252, 259, 312, 313, 314, 171, 204, 0,
	0, 0, 0, 226, 196, 163, 0, 142, 172, 138,
	0, 0, 0, 174, 0, 0, 403, 176, 0, 0,
	255, 191, 0, 0, 0, 0, 0, 394, 395, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	108, 109, 110, 381, 380, 383, 384, 385, 386, 0,
	0, 131, 382, 387, 388, 389, 0, 0, 0, 0,
	0, 374, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 0, 0, 0, 0, 417,
	0, 373, 0, 0, 366, 367, 369, 368, 370, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	416, 0, 0, 315, 0, 0, 414, 0, 223, 0,
	260, 154, 173, 127, 168, 112, 123, 0, 153, 201,
	232, 236, 0, 0, 0, 135, 0, 234, 211, 276,
	0, 213, 233, 177, 266, 224, 275, 285, 286, 263,
	283, 290, 251, 116, 262, 274, 132, 245, 0, 0,
	0, 118, 272, 258, 189, 164, 165, 117, 0, 230,
	141, 149, 137, 203, 269, 270, 136, 293, 124, 282,
	120, 125, 281, 197, 265, 273, 190, 182, 119, 271,
	188, 181, 170, 145, 156, 221, 179, 222, 157, 193,
	192, 194, 0, 0, 0, 256, 279, 294, 129, 0,
	264, 288, 289, 0, 225, 130, 150, 144, 220, 148,
	195, 126, 159, 253, 169, 178, 229, 292, 210, 235,
	133, 278, 254, 404, 415, 410, 411, 408, 409, 407,
	406, 405, 418, 396, 397, 398, 399, 401, 0, 412,
	413, 400, 111, 121, 175, 291, 227, 147, 280, 0,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 114, 122, 128, 134, 139,
	143, 146, 152, 155, 158, 160, 161, 162, 167, 180,
	184, 185, 186, 187, 198, 199, 200, 202, 205, 206,
	207, 208, 209, 212, 214, 215, 216, 217, 218, 219,
	228, 231, 237, 238, 239, 240, 241, 242, 244, 247,
	248, 249, 250, 257, 261, 267, 268, 277, 284, 287,
	0, 0, 0, 0, 115, 166, 183, 243, 246, 252,
	259, 312, 313, 314, 171, 204, 0, 0, 0, 0,
	226, 196, 163, 0, 142, 172, 138, 0, 0, 0,
	174, 0, 0, 403, 176, 0, 0, 255, 191, 0,
	0, 0, 0, 0, 394, 395, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 108, 109, 110,
	381, 722, 383, 384, 385, 386, 0, 0, 131, 382,
	387, 388, 389, 0, 0, 0, 0, 0, 374, 0,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 0, 0, 0, 0, 417, 0, 373, 0,
	0, 366, 367, 369, 368, 370, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 416, 0, 0,
	315, 0, 0, 414, 0, 223, 0, 260, 154, 173,
	127, 168, 112, 123, 0, 153, 201, 232, 236, 0,
	0, 0, 135, 0, 234, 211, 276, 0, 213, 233,
	177, 266, 224, 275, 285, 286, 263, 283, 290, 251,
	116, 262, 274, 132, 245, 0, 0, 0, 118, 272,
	258, 189, 164, 165, 117, 0, 230, 141, 149, 137,
	203, 269, 270, 136, 293, 124, 282, 120, 125, 281,
	197, 265, 273, 190, 182, 119, 271, 188, 181, 170,
	145, 156, 221, 179, 222, 157, 193, 192, 194, 0,
	0, 0, 256, 279, 294, 129, 0, 264, 288, 289,
	0, 225, 130, 150, 144, 220, 148, 195, 126, 159,
	253, 169, 178, 229, 292, 210, 235, 133, 278, 254,
	404, 415, 410, 411, 408, 409, 407, 406, 405, 418,
	396, 397, 398, 399, 401, 0, 412, 413, 400, 111,
	121, 175, 291, 227, 147, 280, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 114, 122, 128, 134, 139, 143, 146, 152,
	155, 158, 160, 161, 162, 167, 180, 184, 185, 186,
	187, 198, 199, 200, 202, 205, 206, 207, 208, 209,
	212, 214, 215, 216, 217, 218, 219, 228, 231, 237,
	238, 239, 240, 241, 242, 244, 247, 248, 249, 250,
	257, 261, 267, 268, 277, 284, 287, 0, 0, 0,
	0, 115, 166, 183, 243, 246, 252, 259, 312, 313,
	314, 171, 204, 0, 0, 0, 0, 226, 196, 163,
	0, 142, 172, 138, 0, 0, 0, 174, 0, 0,
	0, 176, 0, 0, 255, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 108, 109, 110, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 687, 686, 696, 697, 689, 690, 691,
	692, 693, 694, 695, 688, 0, 0, 698, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 0, 0, 0, 315, 0, 0,
	0, 0, 223, 0, 260, 154, 173, 127, 168, 112,
	123, 0, 153, 201, 232, 236, 0, 0, 0, 135,
	0, 234, 211, 276, 0, 213, 233, 177, 266, 224,
	275, 285, 286, 263, 283, 290, 251, 116, 262, 274,
	132, 245, 0, 0, 0, 118, 272, 258, 189, 164,
	165, 117, 0, 230, 141, 149, 137, 203, 269, 270,
	136, 293, 124, 282, 120, 125, 281, 197, 265, 273,
	190, 182, 119, 271, 188, 181, 170, 145, 156, 221,
	179, 222, 157, 193, 192, 194, 0, 0, 0, 256,
	279, 294, 129, 0, 264, 288, 289, 0, 225, 130,
	150, 144, 220, 148, 195, 126, 159, 253, 169, 178,
	229, 292, 210, 235, 133, 278, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 121, 175, 291,
	227, 147, 280, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 114,
	122, 128, 134, 139, 143, 146, 152, 155, 158, 160,
	161, 162, 167, 180, 184, 185, 186, 187, 198, 199,
	200, 202, 205, 206, 207, 208, 209, 212, 214, 215,
	216, 217, 218, 219, 228, 231, 237, 238, 239, 240,
	241, 242, 244, 247, 248, 249, 250, 257, 261, 267,
	268, 277, 284, 287, 0, 0, 0, 0, 115, 166,
	183, 243, 246, 252, 259, 312, 313, 314, 171, 204,
	0, 0, 0, 791, 226, 196, 163, 0, 142, 172,
	138, 0, 0, 0, 174, 0, 0, 0, 176, 0,
	0, 255, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 108, 109, 110, 0, 793, 0, 0, 0, 0,
	678, 0, 131, 0, 0, 0, 0, 0, 674, 675,
	673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 0, 0, 315, 0, 0, 0, 0, 223,
	0, 260, 154, 173, 127, 168, 112, 123, 0, 153,
	201, 232, 236, 0, 0, 0, 135, 0, 234, 211,
	276, 0, 213, 233, 177, 266, 224, 275, 285, 286,
	263, 283, 290, 251, 116, 262, 274, 132, 245, 0,
	0, 0, 118, 272, 258, 189, 164, 165, 117, 0,
	230, 141, 149, 137, 203, 269, 270, 136, 293, 124,
	282, 120, 125, 281, 197, 265, 273, 190, 182, 119,
	271, 188, 181, 170, 145, 156, 221, 179, 222, 157,
	193, 192, 194, 0, 0, 0, 256, 279, 294, 129,
	0, 264, 288, 289, 0, 225, 130, 150, 144, 220,
	148, 195, 126, 159, 253, 169, 178, 229, 292, 210,
	235, 133, 278, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 121, 175, 291, 227, 147, 280,
	0, 0, 140, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 114, 122, 128, 134,
	139, 143, 146, 152, 155, 158, 160, 161, 162, 167,
	180, 184, 185, 186, 187, 198, 199, 200, 202, 205,
	206, 207, 208, 209, 212, 214, 215, 216, 217, 218,
	219, 228, 231, 237, 238, 239, 240, 241, 242, 244,
	247, 248, 249, 250, 257, 261, 267, 268, 277, 284,
	287, 0, 0, 0, 0, 115, 166, 183, 243, 246,
	252, 259, 312, 313, 314, 171, 204, 0, 0, 0,
	0, 226, 196, 163, 0, 142, 172, 138, 0, 0,
	0, 174, 0, 0, 0, 176, 0, 0, 255, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 108, 109,
	110, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	0, 0, 0, 0, 0, 95, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 98, 99,
	0, 94, 0, 0, 0, 101, 223, 0, 260, 154,
	173, 127, 168, 112, 123, 0, 153, 201, 232, 236,
	0, 0, 0, 135, 0, 234, 211, 276, 0, 213,
	233, 177, 266, 224, 275, 285, 286, 263, 283, 290,
	251, 116, 262, 274, 132, 245, 0, 0, 0, 118,
	272, 258, 189, 164, 165, 117, 0, 230, 141, 149,
	137, 203, 269, 270, 136, 293, 124, 282, 120, 125,
	281, 197, 265, 273, 190, 182, 119, 271, 188, 181,
	170, 145, 156, 221, 179, 222, 157, 193, 192, 194,
	0, 0, 0, 256, 279, 294, 129, 0, 264, 288,
	289, 0, 225, 130, 150, 144, 220, 148, 195, 126,
	159, 253, 169, 178, 229, 292, 210, 235, 133, 278,
	254, 0, 97, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 121, 175, 291, 227, 147, 280, 0, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 114, 122, 128, 134, 139, 143, 146,
	152, 155, 158, 160, 161, 162, 167, 180, 184, 185,
	186, 187, 198, 199, 200, 202, 205, 206, 207, 208,
	209, 212, 214, 215, 216, 217, 218, 219, 228, 231,
	237, 238, 239, 240, 241, 242, 244, 247, 248, 249,
	250, 257, 261, 267, 268, 277, 284, 287, 0, 0,
	0, 35, 115, 166, 183, 243, 246, 252, 259, 103,
	104, 105, 171, 204, 0, 0, 0, 0, 226, 196,
	163, 0, 142, 172, 138, 0, 0, 0, 174, 0,
	0, 0, 176, 0, 0, 255, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 108, 109, 110, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 0, 0, 315, 0,
	0, 0, 0, 223, 0, 260, 154, 173, 127, 168,
	112, 123, 0, 153, 201, 232, 236, 0, 0, 0,
	135, 0, 234, 211, 276, 0, 213, 233, 177, 266,
	224, 275, 285, 286, 263, 283, 290, 251, 116, 262,
	274, 132, 245, 0, 0, 0, 118, 272, 258, 189,
	164, 165, 117, 0, 230, 141, 149, 137, 203, 269,
	270, 136, 293, 124, 282, 120, 125, 281, 197, 265,
	273, 190, 182, 119, 271, 188, 181, 170, 145, 156,
	221, 179, 222, 157, 193, 192, 194, 0, 0, 0,
	256, 279, 294, 129, 0, 264, 288, 289, 0, 225,
	130, 150, 144, 220, 148, 195, 126, 159, 253, 169,
	178, 229, 292, 210, 235, 133, 278, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 121, 175,
	291, 227, 147, 280, 0, 0, 140, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 113,
	114, 122, 128, 134, 139, 143, 146, 152, 155, 158,
	160, 161, 162, 167, 180, 184, 185, 186, 187, 198,
	199, 200, 202, 205, 206, 207, 208, 209, 212, 214,
	215, 216, 217, 218, 219, 228, 231, 237, 238, 239,
	240, 241, 242, 244, 247, 248, 249, 250, 257, 261,
	267, 268, 277, 284, 287, 0, 0, 0, 0, 115,
	166, 183, 243, 246, 252, 259, 312, 313, 314, 808,
	0, 0, 0, 0, 64, 226, 196, 163, 204, 0,
	0, 0, 1087, 0, 0, 0, 0, 142, 172, 138,
	0, 0, 0, 174, 0, 0, 0, 176, 0, 0,
	255, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	108, 109, 110, 0, 1089, 0, 0, 0, 0, 0,
	0, 131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 0, 315, 0, 0, 0, 0, 223, 0,
	260, 154, 173, 127, 168, 112, 123, 0, 153, 201,
	232, 236, 0, 0, 0, 135, 0, 234, 211, 276,
	0, 213, 233, 177, 266, 224, 275, 285, 286, 263,
	283, 290, 251, 116, 262, 274, 132, 245, 0, 0,
	0, 118, 272, 258, 189, 164, 165, 117, 0, 230,
	141, 149, 137, 203, 269, 270, 136, 293, 124, 282,
	120, 125, 281, 197, 265, 273, 190, 182, 119, 271,
	188, 181, 170, 145, 156, 221, 179, 222, 157, 193,
	192, 194, 0, 0, 0, 256, 279, 294, 129, 0,
	264, 288, 289, 0, 225, 130, 150, 144, 220, 148,
	195, 126, 159, 253, 169, 178, 229, 292, 210, 235,
	133, 278, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 121, 175, 291, 227, 147, 280, 0,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 114, 122, 128, 134, 139,
	143, 146, 152, 155, 158, 160, 161, 162, 167, 180,
	184, 185, 186, 187, 198, 199, 200, 202, 205, 206,
	207, 208, 209, 212, 214, 215, 216, 217, 218, 219,
	228, 231, 237, 238, 239, 240, 241, 242, 244, 247,
	248, 249, 250, 257, 261, 267, 268, 277, 284, 287,
	0, 0, 0, 35, 115, 166, 183, 243, 246, 252,
	259, 312, 313, 314, 171, 204, 0, 0, 0, 0,
	226, 196, 163, 0, 142, 172, 138, 0, 0, 0,
	174, 0, 0, 0, 176, 0, 0, 255, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 108, 109, 110,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 0,
	315, 0, 0, 0, 0, 223, 0, 260, 154, 173,
	127, 168, 112, 123, 0, 153, 201, 232, 236, 0,
	0, 0, 135, 0, 234, 211, 276, 0, 213, 233,
	177, 266, 224, 275, 285, 286, 263, 283, 290, 251,
	116, 262, 274, 132, 245, 0, 0, 0, 118, 272,
	258, 189, 164, 165, 117, 0, 230, 141, 149, 137,
	203, 269, 270, 136, 293, 124, 282, 120, 125, 281,
	197, 265, 273, 190, 182, 119, 271, 188, 181, 170,
	145, 156, 221, 179, 222, 157, 193, 192, 194, 0,
	0, 0, 256, 279, 294, 129, 0, 264, 288, 289,
	0, 225, 130, 150, 144, 220, 148, 195, 126, 159,
	253, 169, 178, 229, 292, 210, 235, 133, 278, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 111,
	121, 175, 291, 227, 147, 280, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 114, 122, 128, 134, 139, 143, 146, 152,
	155, 158, 160, 161, 162, 167, 180, 184, 185, 186,
	187, 198, 199, 200, 202, 205, 206, 207, 208, 209,
	212, 214, 215, 216, 217, 218, 219, 228, 231, 237,
	238, 239, 240, 241, 242, 244, 247, 248, 249, 250,
	257, 261, 267, 268, 277, 284, 287, 0, 0, 0,
	0, 115, 166, 183, 243, 246, 252, 259, 312, 313,
	314, 171, 204, 0, 0, 0, 1087, 226, 196, 163,
	0, 142, 172, 138, 0, 0, 0, 174, 0, 0,
	0, 176, 0, 0, 255, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 108, 109, 110, 0, 1089, 0,
	0, 0, 0, 0, 0, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 0, 0, 0, 315, 0, 0,
	0, 0, 223, 0, 260, 154, 173, 127, 168, 112,
	123, 0, 153, 201, 232, 236, 0, 0, 0, 135,
	0, 234, 211, 276, 0, 1091, 233, 177, 266, 224,
	275, 285, 286, 263, 283, 290, 251, 116, 262, 274,
	132, 245, 0, 0, 0, 118, 272, 258, 189, 164,
	165, 117, 0, 230, 141, 149, 137, 203, 269, 270,
	136, 293, 124, 282, 120, 125, 281, 197, 265, 273,
	190, 182, 119, 271, 188, 181, 170, 145, 156, 221,
	179, 222, 157, 193, 192, 194, 0, 0, 0, 256,
	279, 294, 129, 0, 264, 288, 289, 0, 225, 130,
	150, 144, 220, 148, 195, 126, 159, 253, 169, 178,
	229, 292, 210, 235, 133, 278, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 121, 175, 291,
	227, 147, 280, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 114,
	122, 128, 134, 139, 143, 146, 152, 155, 158, 160,
	161, 162, 167, 180, 184, 185, 186, 187, 198, 199,
	200, 202, 205, 206, 207, 208, 209, 212, 214, 215,
	216, 217, 218, 219, 228, 231, 237, 238, 239, 240,
	241, 242, 244, 247, 248, 249, 250, 257, 261, 267,
	268, 277, 284, 287, 0, 0, 0, 0, 115, 166,
	183, 243, 246, 252, 259, 312, 313, 314, 171, 204,
	0, 0, 0, 0, 226, 196, 163, 0, 142, 172,
	138, 0, 0, 0, 174, 0, 0, 0, 176, 0,
	0, 255, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 108, 109, 110, 0, 0, 1053, 0, 0, 1054,
	0, 0, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 0, 0, 315, 0, 0, 0, 0, 223,
	0, 260, 154, 173, 127, 168, 112, 123, 0, 153,
	201, 232, 236, 0, 0, 0, 135, 0, 234, 211,
	276, 0, 213, 233, 177, 266, 224, 275, 285, 286,
	263, 283, 290, 251, 116, 262, 274, 132, 245, 0,
	0, 0, 118, 272, 258, 189, 164, 165, 117, 0,
	230, 141, 149, 137, 203, 269, 270, 136, 293, 124,
	282, 120, 125, 281, 197, 265, 273, 190, 182, 119,
	271, 188, 181, 170, 145, 156, 221, 179, 222, 157,
	193, 192, 194, 0, 0, 0, 256, 279, 294, 129,
	0, 264, 288, 289, 0, 225, 130, 150, 144, 220,
	148, 195, 126, 159, 253, 169, 178, 229, 292, 210,
	235, 133, 278, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 121, 175, 291, 227, 147, 280,
	0, 0, 140, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 114, 122, 128, 134,
	139, 143, 146, 152, 155, 158, 160, 161, 162, 167,
	180, 184, 185, 186, 187, 198, 199, 200, 202, 205,
	206, 207, 208, 209, 212, 214, 215, 216, 217, 218,
	219, 228, 231, 237, 238, 239, 240, 241, 242, 244,
	247, 248, 249, 250, 257, 261, 267, 268, 277, 284,
	287, 0, 0, 0, 0, 115, 166, 183, 243, 246,
	252, 259, 312, 313, 314, 171, 204, 0, 0, 0,
	0, 226, 196, 163, 0, 142, 172, 138, 0, 0,
	0, 174, 0, 0, 0, 176, 0, 0, 255, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 437, 108, 109,
	110, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 0,
	0, 315, 0, 0, 0, 0, 223, 0, 260, 154,
	173, 127, 168, 112, 123, 0, 153, 201, 232, 236,
	0, 0, 0, 135, 0, 234, 211, 276, 0, 213,
	233, 177, 266, 224, 275, 285, 286, 263, 283, 290,
	251, 116, 262, 274, 132, 245, 0, 0, 0, 118,
	272, 258, 189, 164, 165, 117, 0, 230, 141, 149,
	137, 203, 269, 270, 136, 293, 124, 282, 120, 125,
	281, 197, 265, 273, 190, 182, 119, 271, 188, 181,
	170, 145, 156, 221, 179, 222, 157, 193, 192, 194,
	0, 0, 0, 256, 279, 294, 129, 0, 264, 288,
	289, 0, 225, 130, 150, 144, 220, 148, 195, 126,
	159, 253, 169, 178, 229, 292, 210, 235, 133, 278,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 121, 175, 291, 227, 147, 280, 0, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 114, 122, 128, 134, 139, 143, 146,
	152, 155, 158, 160, 161, 162, 167, 180, 184, 185,
	186, 187, 198, 199, 200, 202, 205, 206, 207, 208,
	209, 212, 214, 215, 216, 217, 218, 219, 228, 231,
	237, 238, 239, 240, 241, 242, 244, 247, 248, 249,
	250, 257, 261, 267, 268, 277, 284, 287, 0, 0,
	0, 0, 115, 166, 183, 243, 246, 252, 259, 312,
	313, 314, 171, 204, 0, 0, 0, 0, 226, 196,
	163, 0, 142, 172, 138, 0, 0, 0, 174, 0,
	0, 0, 176, 0, 0, 255, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 108, 109, 110, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 0, 0, 315, 0,
	0, 0, 0, 223, 0, 260, 154, 173, 127, 168,
	112, 123, 0, 153, 201, 232, 236, 0, 0, 0,
	135, 0, 234, 211, 276, 0, 213, 233, 177, 266,
	224, 275, 285, 286, 263, 283, 290, 251, 116, 262,
	274, 132, 245, 0, 0, 0, 118, 272, 258, 189,
	164, 165, 117, 0, 230, 141, 149, 137, 203, 269,
	270, 136, 293, 124, 282, 120, 125, 281, 197, 265,
	273, 190, 182, 119, 271, 188, 181, 170, 145, 156,
	221, 179, 222, 157, 193, 192, 194, 0, 0, 0,
	256, 279, 294, 129, 0, 264, 288, 289, 0, 225,
	130, 150, 144, 220, 148, 195, 126, 159, 253, 169,
	178, 229, 292, 210, 235, 133, 278, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 121, 175,
	291, 227, 147, 280, 0, 0, 140, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 113,
	114, 122, 128, 134, 139, 143, 146, 152, 155, 158,
	160, 161, 162, 167, 180, 184, 185, 186, 187, 198,
	199, 200, 202, 205, 206, 207, 208, 209, 212, 214,
	215, 216, 217, 218, 219, 228, 231, 237, 238, 239,
	240, 241, 242, 244, 247, 248, 249, 250, 257, 261,
	267, 268, 277, 284, 287, 0, 0, 0, 0, 115,
	166, 183, 243, 246, 252, 259, 312, 313, 314, 808,
	204, 0, 0, 0, 0, 226, 196, 163, 0, 142,
	172, 138, 0, 0, 0, 174, 0, 0, 0, 176,
	0, 0, 255, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 109, 110, 0, 1089, 0, 0, 0,
	0, 0, 0, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 0, 315, 0, 0, 0, 0,
	223, 0, 260, 154, 173, 127, 168, 112, 123, 0,
	153, 201, 232, 236, 0, 0, 0, 135, 0, 234,
	211, 276, 0, 213, 233, 177, 266, 224, 275, 285,
	286, 263, 283, 290, 251, 116, 262, 274, 132, 245,
	0, 0, 0, 118, 272, 258, 189, 164, 165, 117,
	0, 230, 141, 149, 137, 203, 269, 270, 136, 293,
	124, 282, 120, 125, 281, 197, 265, 273, 190, 182,
	119, 271, 188, 181, 170, 145, 156, 221, 179, 222,
	157, 193, 192, 194, 0, 0, 0, 256, 279, 294,
	129, 0, 264, 288, 289, 0, 225, 130, 150, 144,
	220, 148, 195, 126, 159, 253, 169, 178, 229, 292,
	210, 235, 133, 278, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 121, 175, 291, 227, 147,
	280, 0, 0, 140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 114, 122, 128,
	134, 139, 143, 146, 152, 155, 158, 160, 161, 162,
	167, 180, 184, 185, 186, 187, 198, 199, 200, 202,
	205, 206, 207, 208, 209, 212, 214, 215, 216, 217,
	218, 219, 228, 231, 237, 238, 239, 240, 241, 242,
	244, 247, 248, 249, 250, 257, 261, 267, 268, 277,
	284, 287, 0, 0, 0, 0, 115, 166, 183, 243,
	246, 252, 259, 312, 313, 314, 171, 204, 0, 0,
	0, 0, 226, 196, 163, 0, 142, 172, 138, 0,
	0, 0, 174, 0, 0, 0, 176, 0, 0, 255,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 0, 108,
	109, 110, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	0, 0, 315, 0, 0, 0, 0, 223, 0, 260,
	154, 173, 127, 168, 112, 123, 0, 153, 201, 232,
	236, 0, 0, 0, 135, 0, 234, 211, 276, 0,
	213, 233, 177, 266, 224, 275, 285, 286, 263, 283,
	290, 251, 116, 262, 274, 132, 245, 0, 0, 0,
	118, 272, 258, 189, 164, 165, 117, 0, 230, 141,
	149, 137, 203, 269, 270, 136, 293, 124, 282, 120,
	125, 281, 197, 265, 273, 190, 182, 119, 271, 188,
	181, 170, 145, 156, 221, 179, 222, 157, 193, 192,
	194, 0, 0, 0, 256, 279, 294, 129, 0, 264,
	288, 289, 0, 225, 130, 150, 144, 220, 148, 195,
	126, 159, 253, 169, 178, 229, 292, 210, 235, 133,
	278, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 111, 121, 175, 291, 227, 147, 280, 0, 0,
	140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 113, 114, 122, 128, 134, 139, 143,
	146, 152, 155, 158, 160, 161, 162, 167, 180, 184,
	185, 186, 187, 198, 199, 200, 202, 205, 206, 207,
	208, 209, 212, 214, 215, 216, 217, 218, 219, 228,
	231, 237, 238, 239, 240, 241, 242, 244, 247, 248,
	249, 250, 257, 261, 267, 268, 277, 284, 287, 0,
	0, 0, 0, 115, 166, 183, 243, 246, 252, 259,
	312, 313, 314, 171, 204, 0, 0, 0, 0, 226,
	196, 163, 0, 142, 172, 138, 0, 0, 0, 174,
	0, 0, 0, 176, 0, 0, 255, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 108, 109, 110, 0,
	1213, 0, 0, 0, 0, 0, 0, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 315,
	0, 0, 0, 0, 223, 0, 260, 154, 173, 127,
	168, 112, 123, 0, 153, 201, 232, 236, 0, 0,
	0, 135, 0, 234, 211, 276, 0, 213, 233, 177,
	266, 224, 275, 285, 286, 263, 283, 290, 251, 116,
	262, 274, 132, 245, 0, 0, 0, 118, 272, 258,
	189, 164, 165, 117, 0, 230, 141, 149, 137, 203,
	269, 270, 136, 293, 124, 282, 120, 125, 281, 197,
	265, 273, 190, 182, 119, 271, 188, 181, 170, 145,
	156, 221, 179, 222, 157, 193, 192, 194, 0, 0,
	0, 256, 279, 294, 129, 0, 264, 288, 289, 0,
	225, 130, 150, 144, 220, 148, 195, 126, 159, 253,
	169, 178, 229, 292, 210, 235, 133, 278, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 121,
	175, 291, 227, 147, 280, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 114, 122, 128, 134, 139, 143, 146, 152, 155,
	158, 160, 161, 162, 167, 180, 184, 185, 186, 187,
	198, 199, 200, 202, 205, 206, 207, 208, 209, 212,
	214, 215, 216, 217, 218, 219, 228, 231, 237, 238,
	239, 240, 241, 242, 244, 247, 248, 249, 250, 257,
	261, 267, 268, 277, 284, 287, 0, 0, 0, 0,
	115, 166, 183, 243, 246, 252, 259, 312, 313, 314,
	171, 204, 0, 0, 0, 0, 226, 196, 163, 796,
	142, 172, 138, 0, 0, 0, 174, 0, 0, 0,
	176, 0, 0, 255, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 108, 109, 110, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 0, 0, 315, 0, 0, 0,
	0, 223, 0, 260, 154, 173, 127, 168, 112, 123,
	0, 153, 201, 232, 236, 0, 0, 0, 135, 0,
	234, 211, 276, 0, 213, 233, 177, 266, 224, 275,
	285, 286, 263, 283, 290, 251, 116, 262, 274, 132,
	245, 0, 0, 0, 118, 272, 258, 189, 164, 165,
	117, 0, 230, 141, 149, 137, 203, 269, 270, 136,
	293, 124, 282, 120, 125, 281, 197, 265, 273, 190,
	182, 119, 271, 188, 181, 170, 145, 156, 221, 179,
	222, 157, 193, 192, 194, 0, 0, 0, 256, 279,
	294, 129, 0, 264, 288, 289, 0, 225, 130, 150,
	144, 220, 148, 195, 126, 159, 253, 169, 178, 229,
	292, 210, 235, 133, 278, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 111, 121, 175, 291, 227,
	147, 280, 0, 0, 140, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 114, 122,
	128, 134, 139, 143, 146, 152, 155, 158, 160, 161,
	162, 167, 180, 184, 185, 186, 187, 198, 199, 200,
	202, 205, 206, 207, 208, 209, 212, 214, 215, 216,
	217, 218, 219, 228, 231, 237, 238, 239, 240, 241,
	242, 244, 247, 248, 249, 250, 257, 261, 267, 268,
	277, 284, 287, 0, 0, 0, 0, 115, 166, 183,
	243, 246, 252, 259, 312, 313, 314, 171, 204, 0,
	0, 0, 0, 226, 196, 163, 0, 142, 172, 138,
	0, 0, 0, 174, 0, 0, 0, 176, 0, 0,
	255, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	108, 109, 110, 0, 793, 0, 0, 0, 0, 0,
	0, 131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 0, 315, 0, 0, 0, 0, 223, 0,
	260, 154, 173, 127, 168, 112, 123, 0, 153, 201,
	232, 236, 0, 0, 0, 135, 0, 234, 211, 276,
	0, 213, 233, 177, 266, 224, 275, 285, 286, 263,
	283, 290, 251, 116, 262, 274, 132, 245, 0, 0,
	0, 118, 272, 258, 189, 164, 165, 117, 0, 230,
	141, 149, 137, 203, 269, 270, 136, 293, 124, 282,
	120, 125, 281, 197, 265, 273, 190, 182, 119, 271,
	188, 181, 170, 145, 156, 221, 179, 222, 157, 193,
	192, 194, 0, 0, 0, 256, 279, 294, 129, 0,
	264, 288, 289, 0, 225, 130, 150, 144, 220, 148,
	195, 126, 159, 253, 169, 178, 229, 292, 210, 235,
	133, 278, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 121, 175, 291, 227, 147, 280, 0,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 114, 122, 128, 134, 139,
	143, 146, 152, 155, 158, 160, 161, 162, 167, 180,
	184, 185, 186, 187, 198, 199, 200, 202, 205, 206,
	207, 208, 209, 212, 214, 215, 216, 217, 218, 219,
	228, 231, 237, 238, 239, 240, 241, 242, 244, 247,
	248, 249, 250, 257, 261, 267, 268, 277, 284, 287,
	0, 0, 0, 0, 115, 166, 183, 243, 246, 252,
	259, 312, 313, 314, 171, 204, 0, 0, 0, 0,
	226, 196, 163, 0, 142, 172, 830, 0, 0, 0,
	174, 0, 0, 0, 176, 0, 0, 255, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 109, 110,
	0, 829, 0, 0, 0, 0, 0, 0, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 0,
	315, 0, 0, 0, 0, 223, 0, 260, 154, 173,
	127, 168, 112, 123, 0, 153, 201, 232, 236, 0,
	0, 0, 135, 0, 234, 211, 276, 0, 213, 233,
	177, 266, 224, 275, 285, 286, 263, 283, 290, 251,
	116, 262, 274, 132, 245, 0, 0, 0, 118, 272,
	258, 189, 164, 165, 117, 0, 230, 141, 149, 137,
	203, 269, 270, 136, 293, 124, 282, 120, 125, 281,
	197, 265, 273, 190, 182, 119, 271, 188, 181, 170,
	145, 156, 221, 179, 222, 157, 193, 192, 194, 0,
	0, 0, 256, 279, 294, 129, 0, 264, 288, 289,
	0, 225, 130, 150, 144, 220, 148, 195, 126, 159,
	253, 169, 178, 229, 292, 210, 235, 133, 278, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 111,
	121, 175, 291, 227, 147, 280, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 114, 122, 128, 134, 139, 143, 146, 152,
	155, 158, 160, 161, 162, 167, 180, 184, 185, 186,
	187, 198, 199, 200, 202, 205, 206, 207, 208, 209,
	212, 214, 215, 216, 217, 218, 219, 228, 231, 237,
	238, 239, 240, 241, 242, 244, 247, 248, 249, 250,
	257, 261, 267, 268, 277, 284, 287, 0, 0, 0,
	0, 115, 166, 183, 243, 246, 252, 259, 312, 313,
	314, 171, 0, 454, 0, 0, 0, 226, 196, 163,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	172, 138, 0, 0, 0, 174, 0, 0, 0, 176,
	0, 0, 255, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 109, 110, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 0, 315, 0, 0, 0, 0,
	223, 0, 260, 154, 173, 127, 168, 112, 123, 0,
	153, 201, 232, 236, 0, 0, 0, 135, 0, 234,
	211, 276, 0, 213, 233, 177, 266, 224, 275, 285,
	286, 263, 283, 290, 251, 116, 262, 274, 132, 245,
	0, 0, 0, 118, 272, 258, 189, 164, 165, 117,
	0, 230, 141, 149, 137, 203, 269, 270, 136, 293,
	124, 282, 120, 125, 281, 197, 265, 273, 190, 182,
	119, 271, 188, 181, 170, 145, 156, 221, 179, 222,
	157, 193, 192, 194, 0, 0, 0, 256, 279, 294,
	129, 0, 264, 288, 289, 0, 225, 130, 150, 144,
	220, 148, 195, 126, 159, 253, 169, 178, 229, 292,
	210, 235, 133, 278, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 121, 175, 291, 227, 147,
	280, 0, 0, 140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 114, 122, 128,
	134, 139, 143, 146, 152, 155, 158, 160, 161, 162,
	167, 180, 184, 185, 186, 187, 198, 199, 200, 202,
	205, 206, 207, 208, 209, 212, 214, 215, 216, 217,
	218, 219, 228, 231, 237, 238, 239, 240, 241, 242,
	244, 247, 248, 249, 250, 257, 261, 267, 268, 277,
	284, 287, 0, 0, 0, 0, 115, 166, 183, 243,
	246, 252, 259, 312, 313, 314, 171, 204, 0, 0,
	0, 0, 226, 196, 163, 0, 142, 172, 138, 0,
	0, 0, 174, 0, 0, 0, 176, 0, 0, 255,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 108,
	109, 110, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	307, 0, 315, 0, 0, 0, 0, 223, 0, 260,
	154, 173, 127, 168, 112, 123, 0, 153, 201, 232,
	236, 0, 0, 0, 135, 0, 234, 211, 276, 0,
	213, 233, 177, 266, 224, 275, 285, 286, 263, 283,
	290, 251, 116, 262, 274, 132, 245, 0, 0, 0,
	118, 272, 258, 189, 164, 165, 117, 0, 230, 141,
	149, 137, 203, 269, 270, 136, 293, 124, 282, 120,
	125, 281, 197, 265, 273, 190, 182, 119, 271, 188,
	181, 170, 145, 156, 221, 179, 222, 157, 193, 192,
	194, 0, 0, 0, 256, 279, 294, 129, 0, 264,
	288, 289, 0, 225, 130, 150, 144, 220, 148, 195,
	126, 159, 253, 169, 178, 229, 292, 210, 235, 133,
	278, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 111, 121, 175, 291, 227, 147, 280, 0, 0,
	140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 113, 114, 122, 128, 134, 139, 143,
	146, 152, 155, 158, 160, 161, 162, 167, 180, 184,
	185, 186, 187, 198, 199, 200, 202, 205, 206, 207,
	208, 209, 212, 214, 215, 216, 217, 218, 219, 228,
	231, 237, 238, 239, 240, 241, 242, 244, 247, 248,
	249, 250, 257, 261, 267, 268, 277, 284, 287, 0,
	0, 0, 0, 115, 166, 183, 243, 246, 252, 259,
	312, 313, 314, 171, 204, 0, 0, 0, 0, 226,
	196, 163, 0, 142, 172, 138, 0, 0, 0, 174,
	0, 0, 0, 176, 0, 0, 255, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 108, 109, 110, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 315,
	0, 0, 0, 0, 223, 0, 260, 154, 173, 127,
	168, 112, 123, 0, 153, 201, 232, 236, 0, 0,
	0, 135, 0, 234, 211, 276, 0, 213, 233, 177,
	266, 224, 275, 285, 286, 263, 283, 290, 251, 116,
	262, 274, 132, 245, 0, 0, 0, 118, 272, 258,
	189, 164, 165, 117, 0, 230, 141, 149, 137, 203,
	269, 270, 136, 293, 124, 282, 120, 125, 281, 197,
	265, 273, 190, 182, 119, 271, 188, 181, 170, 145,
	156, 221, 179, 222, 157, 193, 192, 194, 0, 0,
	0, 256, 279, 294, 129, 0, 264, 288, 289, 0,
	225, 130, 150, 144, 220, 148, 195, 126, 159, 253,
	169, 178, 229, 292, 210, 235, 133, 278, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 121,
	175, 291, 227, 147, 280, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 114, 122, 128, 134, 139, 143, 146, 152, 155,
	158, 160, 161, 162, 167, 180, 184, 185, 186, 187,
	198, 199, 200, 202, 205, 206, 207, 208, 209, 212,
	214, 215, 216, 217, 218, 219, 228, 231, 237, 238,
	239, 240, 241, 242, 244, 247, 248, 249, 250, 257,
	261, 267, 268, 277, 284, 287, 0, 0, 0, 0,
	115, 166, 183, 243, 246, 252, 259, 312, 313, 314,
	171, 0, 0, 0, 0, 0, 226, 196, 163,
}

var yyPact = [...]int{
	2705, -1000, -293, 1141, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1084, 748, -1000, -1000, -1000, -1000, -1000,
	-1000, 320, 13298, 62, 189, 39, 18669, 188, -7, 19026,
	-1000, 73, -1000, 60, 19026, 68, -14, -1000, -1000, -17,
	-18, -1000, 10799, -264, -1000, 479, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 867, 1058, 1050,
	1082, 658, 1118, -1000, 9350, 145, 145, 18312, 7545, -1000,
	-1000, 526, 19026, 178, 19026, -101, 167, 132, 132, 132,
	184, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 181, 19026, 595, 595, 292,
	-1000, 19026, 137, 595, 137, 137, 137, 19026, -1000, 242,
	-1000, -1000, -1000, -1000, -1000, -1000, 19026, 595, 1015, 416,
	116, 4899, -1000, 270, -1000, 4899, 82, 4899, -19, 1094,
	83, 42, -1000, 595, -38, -1000, -1000, -1000, -1000, -1000,
	-1000, 155, -1000, -1000, 19026, -30, 157, 370, -1000, -1000,
	-1000, -1000, -1000, -1000, 635, 705, -1000, 10799, 1690, 692,
	692, -1000, -1000, 219, -1000, -1000, 11870, 11870, 11870, 11870,
	11870, 11870, 11870, 11870, 11870, 12227, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	692, 241, -1000, 10439, 692, 692, 692, 692, 692, 692,
	692, 692, 10799, 692, 692, 692, 692, 692, 692, 692,
	692, 692, 692, 692, 692, 692, 692, 692, 692, -1000,
	-1000, -263, -279, 19026, -1000, 19026, 553, 1084, -1000, 748,
	-1000, -1000, -1000, 1024, 10799, 10799, 1084, -1000, 986, 9350,
	-1000, -1000, 1040, -1000, -1000, -1000, -1000, 445, 1110, -1000,
	12941, 240, 17233, 15805, 19026, 809, 675, -1000, -1000, 231,
	825, 7167, -39, -1000, -1000, -1000, 195, 17947, -1000, -1000,
	-1000, 1014, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 795, 19026, -1000, 364, -1000, 595, 1055, -32, 19026,
	595, 376, 595, 19026, 132, 19026, 4899, 4899, 4899, 91,
	128, 119, 19026, 823, 154, 19026, 1039, 934, 19026, 595,
	595, -1000, 6411, -1000, 4899, 416, -1000, 551, 10799, 4899,
	4899, 4899, 19026, 4899, 4899, -1000, -1000, -1000, 412, 388,
	-1000, -1000, -1000, -1000, -1000, 4899, 4899, -1000, 1107, 368,
	-1000, -1000, -1000, -1000, 10799, 316, -1000, 921, -1000, -1000,
	-37, 67, -1000, 19026, -1000, 1141, -1000, -1000, -1000, -107,
	-1000, -1000, 10799, 10799, 10799, 10799, 399, 453, -1000, 332,
	11870, 444, 311, 11870, 11870, 11870, 11870, 11870, 11870, 11870,
	11870, 11870, 11870, 11870, 11870, 11870, 11870, 11870, 580, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 595, -1000, 1139,
	763, 763, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 12584, -1000, 7910, 6411, 658, 793, 1084, 9350, 9350,
	10799, 10799, 10070, 9710, 9350, 1007, 346, 705, 19026, -1000,
	-1000, 11513, -1000, -1000, -1000, -1000, -1000, 570, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 19026, 19026, 9350, 9350, 9350,
	9350, 9350, 595, 595, 595, 786, 563, -1000, -1000, 1050,
	658, 1040, -1000, 1135, 300, 581, 818, -1000, 691, 1050,
	15091, 871, -1000, 1040, -1000, -1000, -1000, 19026, 453, -1000,
	-1000, 17590, -1000, -1000, 6033, 103, 19026, -1000, 737, 935,
	-1000, -1000, -1000, -1000, 1052, 13655, 14020, 14734, 692, 103,
	814, 15805, 19026, -1000, -1000, 15805, 19026, 5655, 6789, -39,
	-1000, 779, -1000, -49, -45, 8630, 8270, 220, -1000, -1000,
	-1000, -1000, 4521, 343, 609, 409, -6, -1000, -1000, -1000,
	874, -1000, 874, 874, 874, 874, 27, 27, 27, 27,
	-1000, -1000, -1000, -1000, -1000, 894, 893, -1000, 874, 874,
	874, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 890,
	890, 890, 877, 877, 901, 748, 19026, 163, -1000, 1044,
	4899, 1037, 4899, -1000, 19026, 113, -1000, -1000, -1000, 19026,
	19026, 19026, 19026, 19026, 210, 19026, 19026, 813, -1000, 19026,
	4899, -1000, -1000, 229, -1000, -1000, -1000, -1000, -1000, 705,
	-1000, -1000, -1000, -1000, -1000, -1000, 19026, -1000, -1000, 19026,
	-1000, 17233, -1000, -1000, 19026, 416, 19026, 19026, 705, -1000,
	550, 19026, -1000, 19026, -1000, 16876, -1000, -1000, -1000, -1000,
	705, 332, 574, 523, -1000, -1000, 516, -1000, -1000, -1000,
	2036, -1000, -1000, -1000, -1000, 444, 11870, 11870, 11870, 336,
	2036, 2008, 812, 1305, 260, 389, 389, 262, 262, 262,
	262, 262, 421, 421, -1000, -1000, -1000, 570, -1000, -1000,
	-1000, 570, 9350, 9350, 802, 692, 224, -1000, 867, -1000,
	-1000, 1050, 766, 766, 593, 623, 342, 1102, 766, 326,
	1100, 766, 766, 9350, -1000, -1000, 381, -1000, 10799, 570,
	-1000, 223, -1000, 1083, 798, 797, 766, 570, 570, 766,
	766, -259, -1000, 778, -1000, -1000, 621, -1000, 369, -1000,
	1024, -1000, -1000, 983, 10799, 10799, 10799, -1000, -1000, -1000,
	1024, 1070, -1000, 991, 990, 1092, 9350, 15805, 1040, -1000,
	-1000, -1000, 222, 869, 692, -1000, 19026, 15805, 16519, 16519,
	15805, 16519, -1000, 962, 957, -1000, 947, 945, 972, 19026,
	-1000, 785, 570, 658, 13655, -1000, -1000, 16162, -1000, -1000,
	232, 692, 9350, 1092, 15805, 654, -1000, 654, -1000, 207,
	-1000, -1000, 779, -39, -48, -1000, -1000, -1000, -1000, 705,
	-1000, -1000, 705, -1000, 716, 740, 4143, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 888, 595, -1000, 1026, 264, 328,
	595, 1023, -1000, -1000, -1000, 1017, -1000, 403, -9, -1000,
	-1000, 477, 27, 27, -1000, -1000, 220, 1000, 220, 220,
	220, 548, 548, -1000, -1000, -1000, -1000, 475, -1000, -1000,
	-1000, 474, -1000, 920, 19026, 1141, 1043, 19026, 748, -1000,
	-1000, -1000, -1000, -1000, 566, 566, 279, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 102, 885,
	-1000, -1000, -1000, -1000, 56, 90, 153, -1000, 4899, -1000,
	6411, 368, 416, 886, 368, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 336, 2036,
	1993, -1000, 11870, 11870, -1000, -1000, 766, 766, 9350, 6411,
	1084, 1024, -1000, -1000, 156, 580, 156, 11870, 11870, -1000,
	11870, 11870, -1000, -112, 764, 365, -1000, 10799, 651, -1000,
	6411, -1000, 11870, 11870, -1000, -1000, -1000, -1000, -1000, 546,
	-1000, -1000, -1000, -1000, -1000, 563, -1000, -1000, 341, -1000,
	763, -1000, 981, 705, 705, -1000, -1000, 19026, -1000, -1000,
	-1000, -1000, 1090, 10799, -1000, 715, -1000, 5277, 919, 19026,
	692, 1141, 14377, 19026, 774, -1000, 337, 935, 884, 917,
	1045, -1000, -1000, -1000, -1000, 954, -1000, 932, -1000, -1000,
	-1000, -1000, -1000, -1000, 658, -1000, -1000, 177, 173, 158,
	19026, 570, 1084, 654, -1000, -1000, 269, -1000, -1000, -53,
	-71, -1000, -1000, -1000, 4521, -1000, 4521, 19026, 118, -1000,
	595, 595, -1000, -1000, 879, 914, 11870, -1000, -1000, -1000,
	589, 220, 220, -1000, 304, -1000, -1000, -1000, 756, -1000,
	752, 677, 745, 19026, -1000, 748, 1041, 1141, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 19026, -1000, -1000, -1000, -1000,
	-1000, 19026, -120, 595, 19026, 19026, 19026, 19026, -1000, 205,
	416, -1000, 416, 19026, 416, -1000, 11870, 2036, 2036, -1000,
	-1000, 570, -1000, 1050, -1000, 570, 874, 874, -1000, 874,
	877, -1000, 874, 47, 874, 43, 570, 570, 1736, 1644,
	1514, 1109, 692, -106, -1000, 705, 10799, -1000, 1920, 1816,
	541, -1000, 763, -1000, -1000, -1000, 1088, 1071, 705, -1000,
	-1000, 1029, 668, 620, -1000, -1000, 8990, 735, 203, 713,
	-1000, 1092, 19026, 10799, -1000, -1000, 10799, 876, -1000, 10799,
	-1000, -1000, -1000, 1084, 692, 692, 692, 713, -1000, 1050,
	-1000, -1000, -1000, -1000, 4143, -1000, 703, -1000, 874, -1000,
	-1000, -1000, 19026, 4, 1128, 2036, -1000, -1000, -1000, -1000,
	-1000, 27, 534, 27, 472, -1000, 470, 4899, 1141, 748,
	-1000, -1000, -1000, -1000, 1031, -1000, 6411, -1000, -1000, 832,
	899, -1000, -1000, 6411, -1000, -1000, 700, -1000, -1000, 2036,
	-1000, 1024, -1000, -1000, 182, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 11870, 11870, 11870, 11870, 11870, 1050, 532,
	705, 11870, 11870, -1000, -1000, -1000, 10799, 10799, 1021, -1000,
	692, -1000, 922, 19026, 19026, -1000, 19026, 1084, -1000, 705,
	705, 19026, 705, 15448, 19026, 19026, 14020, -1000, 213, 19026,
	-1000, 694, 249, -1000, -70, 220, -1000, 220, 579, 577,
	-1000, 1141, 692, 661, -1000, 334, 19026, 19026, -1000, -1000,
	19026, -1000, -1000, -1000, 1083, 1083, 1083, 1083, 31, 570,
	-1000, 1083, 1083, 705, 635, 1120, -1000, 692, 1141, 193,
	-1000, -1000, 1050, 689, 685, -1000, 685, 685, 232, 213,
	-1000, 595, 333, 501, -1000, 115, 406, 1020, -1000, 1019,
	-1000, -1000, -1000, -1000, -1000, 101, 6411, 4521, 679, -1000,
	-1000, -1000, -1000, -1000, -1000, 570, 107, -125, -1000, -1000,
	-1000, 19026, 620, 19026, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 468, -1000, -1000, 19026, -1000, 488, -1000, -1000,
	637, -1000, 19026, -1000, -1000, 885, -1000, 969, -117, -131,
	615, -1000, -1000, 831, -1000, -1000, 101, 989, -120, -1000,
	967, -1000, 19026, -1000, 98, -1000, -122, 632, 96, -126,
	905, 692, -150, 904, -1000, 1098, 11156, -1000, -1000, 1111,
	246, 246, 1083, 570, -1000, -1000, -1000, 122, 538, -1000,
	-1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1431, 1430, 63, 65, 60, 1428, 1427, 1426, 123,
	122, 114, 1424, 1423, 1422, 1421, 1420, 1416, 1403, 1401,
	1400, 1399, 1393, 1390, 1389, 1388, 1387, 1384, 1383, 1382,
	1381, 1380, 1379, 1149, 1371, 1367, 1366, 1365, 1362, 80,
	1360, 83, 1359, 1358, 1357, 1356, 1353, 1352, 1351, 1348,
	1346, 39, 271, 42, 67, 1344, 57, 1496, 34, 78,
	70, 53, 1343, 1334, 35, 1333, 1332, 81, 1331, 1330,
	54, 1328, 1327, 61, 66, 75, 1326, 12, 16, 1325,
	1324, 1323, 1320, 30, 2325, 1318, 1316, 14, 1315, 1312,
	111, 1311, 1310, 69, 33, 11, 28, 23, 1309, 73,
	1308, 6, 1307, 59, 1306, 1305, 1304, 1302, 22, 1295,
	58, 1292, 19, 68, 1291, 7, 1290, 102, 29, 24,
	8, 1289, 1287, 21, 79, 48, 77, 1286, 85, 1284,
	1283, 595, 1282, 952, 41, 1281, 1279, 125, 49, 1276,
	126, 82, 1274, 1273, 1270, 1269, 62, 923, 1928, 26,
	76, 1266, 1262, 1261, 2548, 71, 52, 15, 1260, 1259,
	1257, 32, 406, 44, 1255, 1254, 38, 1250, 1248, 1247,
	1244, 1242, 1241, 1239, 18, 1238, 1237, 1235, 36, 20,
	1234, 1233, 72, 25, 1228, 1227, 1226, 51, 74, 1224,
	1223, 46, 1207, 84, 27, 1205, 1203, 1202, 1200, 1198,
	40, 17, 1197, 13, 1195, 10, 1194, 31, 1181, 4,
	1178, 9, 1177, 3, 0, 1174, 5, 1172, 1166, 45,
	1, 1163, 2, 37, 1159, 1156, 1155, 87, 1154, 1151,
	1550, 1050, 86, 1147, 97,
}

var yyR1 = [...]int{
	0, 228, 229, 229, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 214, 214, 214, 217, 218,
	20, 3, 3, 3, 3, 2, 2, 8, 4, 5,
	5, 9, 9, 42, 42, 10, 11, 11, 11, 11,
	232, 232, 67, 67, 68, 68, 117, 117, 12, 13,
	13, 126, 126, 125, 125, 125, 127, 127, 127, 127,
	164, 164, 129, 129, 128, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 38, 38, 32, 32, 32, 32,
	35, 35, 35, 35, 35, 35, 50, 50, 50, 216,
	216, 215, 213, 213, 212, 212, 211, 21, 21, 196,
	198, 198, 197, 197, 197, 197, 188, 167, 167, 167,
	167, 170, 170, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 169, 169, 169, 169, 169, 171, 171, 171,
	171, 171, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 173, 173, 173,
	173, 173, 173, 173, 173, 187, 187, 174, 174, 182,
	182, 183, 183, 183, 180, 180, 181, 181, 184, 184,
	184, 176, 176, 177, 177, 185, 185, 178, 178, 178,
	179, 179, 179, 186, 186, 186, 186, 186, 175, 175,
	189, 189, 206, 206, 205, 205, 205, 34, 195, 195,
	202, 202, 202, 202, 202, 192, 192, 192, 193, 193,
	191, 191, 194, 194, 204, 204, 203, 190, 190, 207,
	207, 207, 207, 221, 222, 220, 220, 220, 220, 220,
	199, 199, 199, 200, 200, 200, 201, 201, 201, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	210, 208, 208, 209, 209, 16, 22, 22, 17, 17,
	17, 17, 17, 18, 18, 23, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 135, 135, 137,
	137, 133, 133, 136, 136, 134, 134, 134, 138, 138,
	138, 139, 139, 165, 165, 165, 25, 25, 27, 27,
	28, 29, 29, 159, 159, 160, 160, 30, 31, 43,
	43, 43, 43, 43, 43, 45, 45, 45, 7, 7,
	7, 7, 44, 44, 44, 6, 6, 26, 26, 26,
	26, 19, 233, 39, 40, 40, 41, 41, 41, 47,
	47, 47, 46, 46, 46, 53, 53, 55, 55, 55,
	55, 55, 56, 56, 56, 56, 56, 56, 52, 52,
	54, 54, 54, 54, 54, 151, 151, 151, 150, 150,
	58, 58, 59, 59, 60, 60, 60, 63, 61, 61,
	61, 61, 100, 76, 76, 116, 116, 115, 115, 118,
	118, 62, 62, 62, 62, 64, 64, 65, 65, 66,
	66, 158, 158, 157, 157, 157, 156, 156, 69, 69,
	69, 71, 70, 70, 70, 70, 72, 72, 74, 74,
	73, 73, 73, 73, 75, 77, 77, 77, 77, 77,
	78, 78, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 132, 132, 80, 80, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 92, 92, 92, 92, 92,
	92, 81, 81, 81, 81, 81, 81, 81, 51, 51,
	93, 93, 93, 227, 227, 99, 94, 94, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 91, 88, 88, 88, 88, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	86, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 87, 234, 234, 90,
	89, 89, 89, 89, 89, 89, 89, 48, 48, 48,
	48, 48, 163, 163, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 166, 166, 166, 104, 104, 49,
	49, 102, 102, 103, 105, 105, 101, 101, 101, 83,
	83, 83, 83, 83, 83, 83, 83, 85, 85, 85,
	106, 106, 107, 107, 108, 108, 109, 109, 110, 111,
	111, 111, 112, 112, 112, 112, 113, 113, 113, 82,
	82, 82, 82, 114, 114, 114, 114, 119, 119, 95,
	95, 97, 97, 96, 98, 120, 120, 123, 121, 121,
	121, 124, 124, 124, 124, 124, 124, 124, 122, 122,
	122, 153, 153, 153, 130, 130, 140, 140, 141, 141,
	131, 131, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 143, 143, 143, 144, 144, 145, 145, 145,
	152, 152, 148, 148, 149, 149, 154, 154, 155, 155,
	223, 224, 225, 225, 226, 226, 226, 33, 36, 36,
	37, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 230, 231, 161,
	162, 162, 162,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
	2, 4, 6, 6, 7, 4, 6, 5, 8, 1,
	3, 7, 8, 1, 1, 10, 8, 7, 6, 6,
	1, 1, 1, 3, 1, 3, 0, 4, 3, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 2, 2, 8, 5, 7,
	6, 8, 5, 5, 0, 1, 4, 5, 7, 4,
	5, 5, 4, 4, 4, 3, 1, 1, 1, 0,
	2, 1, 0, 2, 1, 3, 3, 4, 5, 4,
	2, 4, 1, 3, 3, 3, 8, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 1, 4, 4, 2, 2, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 0, 1,
	2, 0, 2, 0, 3, 0, 1, 0, 3, 3,
	0, 2, 2, 0, 2, 1, 2, 1, 0, 2,
	5, 4, 1, 2, 2, 3, 2, 2, 0, 1,
	2, 3, 3, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 3, 2, 3, 1, 10,
	11, 11, 12, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 3, 1, 2, 3, 1, 1, 1, 6,
	7, 7, 7, 7, 4, 5, 4, 4, 7, 5,
	5, 5, 12, 7, 5, 9, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	7, 1, 3, 8, 8, 3, 3, 5, 4, 6,
	5, 4, 4, 3, 2, 3, 4, 4, 3, 4,
	4, 4, 4, 4, 4, 3, 2, 7, 2, 3,
	4, 3, 7, 5, 4, 2, 4, 4, 3, 3,
	5, 2, 6, 4, 3, 7, 4, 1, 1, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 2, 1, 1, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 5, 3, 2, 2, 3,
	3, 2, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 2, 3, 5, 0, 1, 2, 1, 1,
	0, 2, 1, 3, 1, 1, 1, 2, 1, 3,
	3, 3, 3, 3, 7, 0, 3, 1, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 5, 7, 3, 0, 5, 4, 5, 5,
	0, 2, 1, 3, 3, 3, 2, 3, 2, 1,
	2, 0, 3, 1, 1, 3, 3, 4, 4, 5,
	3, 4, 5, 6, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 1, 2, 3, 1, 3, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 3, 2, 1,
	1, 1, 1, 4, 4, 5, 5, 6, 4, 4,
	6, 6, 6, 8, 8, 8, 8, 9, 8, 5,
	4, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 8, 8, 0, 2, 3,
	4, 4, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 2, 3, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 0, 2, 0, 3, 1, 3, 2, 0,
	1, 1, 0, 2, 4, 4, 0, 2, 4, 2,
	1, 5, 4, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 1, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 0, 1, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 0, 1, 0, 1, 3, 5, 2, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -228, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -23, -24, -25, -27, -28,
	-29, -30, -31, -6, -26, -19, -20, -32, -35, -33,
	-34, -36, -37, -4, -230, 6, 7, -42, 9, 10,
	30, -21, 123, 124, 126, 125, 159, 127, 152, 53,
	173, 174, 176, 177, 178, 179, -45, 157, 158, 31,
	32, 129, 34, -38, 379, 370, 380, 381, 57, 8,
	262, 154, 153, 25, 382, -229, 383, -41, 5, -108,
	15, -3, -39, -233, -39, -39, -39, -39, -39, -196,
	-198, 57, 96, -145, 133, 77, -128, 254, 130, 131,
	-129, 137, -148, 371, 372, 373, -214, -147, 60, 61,
	62, 272, 145, 304, 305, 364, 173, 187, 181, 208,
	200, 273, 306, 146, 198, 201, 241, 143, 307, 228,
	235, 71, 176, 250, 308, 155, 196, 192, 29, 309,
	281, 190, 27, 310, 237, 213, 311, 277, 239, 191,
	236, 129, 312, 148, 141, 313, 214, 218, 314, 242,
	315, 316, 317, 382, 185, 186, 365, 318, 144, 244,
	212, 374, 28, 142, 33, 274, 37, 163, 245, 216,
	319, 211, 207, 366, 320, 321, 322, 323, 210, 184,
	206, 41, 220, 219, 221, 240, 381, 203, 324, 325,
	326, 149, 327, 193, 18, 328, 329, 330, 331, 332,
	248, 158, 333, 161, 334, 335, 336, 337, 338, 339,
	238, 215, 217, 138, 165, 234, 380, 276, 340, 246,
	189, 341, 150, 162, 157, 249, 151, 342, 343, 344,
	345, 346, 347, 367, 348, 177, 368, 349, 350, 351,
	352, 172, 369, 243, 252, 40, 225, 353, 183, 370,
	140, 354, 174, 169, 230, 204, 164, 355, 356, 194,
	195, 209, 182, 205, 175, 166, 159, 357, 251, 226,
	278, 202, 199, 170, 358, 167, 168, 359, 231, 232,
	171, 275, 247, 197, 227, -131, 133, 254, 130, 232,
	135, 131, 131, 132, 133, 254, 130, 131, -73, -154,
	-214, -147, 371, 372, 373, 133, 131, 114, 201, 241,
	123, 229, 237, -137, 238, 165, -165, 131, -133, 228,
	231, 232, 171, 364, 175, 239, 243, 242, 233, -154,
	175, -159, 180, -148, 178, -133, -43, 360, 127, -161,
	-161, 230, 230, -161, -94, -57, -79, 80, -84, 29,
	23, -83, -80, -101, -98, -99, 114, 115, 117, 116,
	118, 103, 104, 111, 81, 119, -88, -86, -87, -89,
	64, 63, 72, 65, 66, 67, 68, 73, 74, 75,
	-148, -154, -96, -230, 47, 48, 263, 264, 265, 266,
	271, 267, 83, 36, 253, 261, 260, 259, 257, 258,
	255, 256, 269, 270, 136, 254, 130, 109, 262, -214,
	-147, 364, 376, -39, 65, -39, -39, -5, -4, -230,
	6, 20, 21, -112, 17, 16, -231, 59, -47, -55,
	42, 43, -56, 21, 35, 46, 44, -40, -54, 105,
	-57, -154, -131, -131, 11, -67, -68, -73, -75, -154,
	-121, -164, 175, -124, 243, 242, -149, -122, -148, -146,
	241, 201, 240, 128, 279, 79, 22, 24, 223, 82,
	114, 16, 83, 113, 263, 123, 51, 280, 255, 256,
	253, 265, 266, 254, 229, 10, 282, 25, 153, 21,
	35, 107, 125, 86, 87, 156, 379, 23, 154, 75,
	285, 19, 54, 11, 13, 286, 287, 14, 136, 135,
	98, 132, 49, 8, 119, 26, 95, 45, 288, 289,
	290, 291, 292, 47, 96, 17, 257, 258, 31, 293,
	271, 160, 109, 52, 38, 80, 294, 295, 73, 296,
	76, 55, 77, 15, 50, 297, 298, 299, 300, 97,
	126, 262, 48, 301, 130, 6, 268, 30, 152, 46,
	302, 131, 85, 269, 270, 134, 74, 5, 137, 32,
	9, 53, 56, 259, 260, 261, 36, 84, 12, 303,
	78, -197, 96, -188, -214, -73, 132, -73, 262, 133,
	-141, 136, -141, -141, 131, 131, -73, -214, -214, 123,
	125, 128, 55, -22, -73, -140, 136, -214, -140, -140,
	-140, -73, 120, -73, -214, 30, -138, 96, 12, 254,
	-214, 165, 131, 166, 133, -162, -230, -149, -192, -214,
	8, 132, 33, 144, -162, 169, 170, -162, -136, -135,
	235, 236, 230, 234, 12, 170, 230, 168, -194, -214,
	244, 134, -148, -137, -7, -3, -10, -9, -11, 88,
	-161, -161, 58, 79, 77, 78, 95, -227, 69, -57,
	-81, 98, 80, 96, 97, 82, 100, 99, 110, 103,
	104, 105, 106, 107, 108, 109, 101, 102, 113, 88,
	89, 90, 91, 92, 93, 94, -132, -230, -99, -230,
	121, 122, -84, -84, -84, -84, -84, -84, -84, -84,
	-84, -84, 64, -230, 120, -2, -94, -4, -230, -230,
	-230, -230, -230, -230, -230, -230, -104, -57, -230, -234,
	-90, -230, -234, -90, -234, -90, -234, -230, -234, -90,
	-234, -90, -234, -234, -90, -230, -230, -230, -230, -230,
	-230, -230, 366, 367, 377, 378, -73, -73, 64, -108,
	-3, -39, -113, 19, 31, -57, -109, -110, -57, -108,
	38, -52, -54, -56, 42, 43, 70, 11, -227, -151,
	-150, 22, -148, 64, 120, -74, 26, -73, -59, -60,
	-61, -62, -63, -76, -100, -230, -91, -73, 374, -73,
	-67, -232, 58, 11, 56, -232, 58, 120, 58, 175,
	-124, -126, -125, 244, 246, 88, 134, -153, -148, 64,
	29, 30, 59, 58, -73, -167, -170, -172, -171, -173,
	-168, -169, 198, 199, 114, 202, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 30, 155, 194, 195,
	196, 197, 214, 215, 216, 217, 218, 219, 220, 221,
	181, 200, 273, 182, 183, 184, 185, 186, 187, 189,
	190, 191, 192, 193, -214, 22, 133, -128, 371, -73,
	-214, 80, -214, -73, -141, -73, -162, -162, -162, 167,
	167, 131, 131, 172, -73, 58, 134, -67, 23, 55,
	-73, -214, -214, -155, -154, -146, -162, -138, 64, -57,
	-162, -162, -162, -73, -162, -162, -193, 11, 98, -193,
	-138, -39, -162, -162, 11, -134, 11, 98, -57, -139,
	96, 55, 245, -160, 178, -73, 212, 361, 362, 363,
	-57, -57, -57, -57, -92, 73, 80, 74, 75, 69,
	-84, -93, -96, -99, 69, 98, 96, 97, 82, -84,
	-84, -84, -84, -84, -84, -84, -84, -84, -84, -84,
	-84, -84, -84, -84, -163, -214, 64, -214, -83, -83,
	-148, -53, 21, 35, -52, -149, -155, -146, -41, -231,
	-231, -108, -52, -52, -57, -57, -101, 64, -52, -101,
	64, -52, -52, -46, 21, 35, -102, -103, 84, -101,
	-148, -154, -231, -84, -148, -148, -52, -53, -53, -52,
	-52, -194, -194, -214, -214, 64, -226, -223, -217, 61,
	-112, -231, 9, 98, 58, 18, 58, -111, 24, 25,
	-112, -85, -148, 65, 68, -58, 58, 11, -56, -73,
	-150, 105, -155, -117, 161, -73, 30, 58, -69, -71,
	-70, -72, 45, 49, 51, 46, 47, 48, 52, -158,
	22, -59, -33, -3, -230, -157, -156, 22, -154, 64,
	-157, 161, -230, -117, 56, -59, -73, -59, -75, -154,
	105, -124, -126, 58, 245, 247, 248, 55, 76, -57,
	55, 76, -57, -179, 113, -199, -200, -201, -149, 64,
	65, -188, -189, -190, -202, 147, -207, 138, 140, 137,
	-191, 148, 132, 28, 59, -184, 73, 80, -180, 226,
	-174, 57, -174, -174, -174, -174, -178, 201, -178, -178,
	-178, 57, 57, -174, -174, -174, -182, 57, -182, -182,
	-183, 57, -183, -152, 56, -3, -73, 133, 22, -162,
	23, -162, -73, -142, 128, 125, 126, -210, 124, 223,
	201, 71, 29, 15, 263, 161, 278, -214, 162, -73,
	-73, -73, -73, -73, 128, 125, -73, -73, -73, -162,
	120, -73, -73, -74, -73, -138, -154, -154, 64, -73,
	-148, -44, -148, 64, 73, 74, 75, -93, -84, -84,
	-84, -51, 156, 79, -231, -231, -52, -52, -230, 120,
	-5, -112, -231, -231, 58, 56, 22, 11, 11, -231,
	11, 11, -231, -231, -52, -105, -103, 86, -57, -231,
	120, -231, 58, 58, -231, -231, -231, -231, -231, -50,
	365, 369, 368, -214, 64, 58, -225, -224, -218, 62,
	88, -113, 40, -57, -57, -110, -113, -130, 19, 11,
	36, 36, -78, 12, -54, -59, -56, 120, -82, 30,
	36, -3, -230, -230, -120, -123, -101, -60, -61, -61,
	-60, -61, 45, 45, 45, 50, 45, 50, 45, -70,
	-154, -231, -231, -231, -3, -156, -77, 53, 135, 54,
	-230, -53, -78, -59, -78, -78, 120, -125, -127, 249,
	246, 252, -214, 64, 58, -201, 88, 57, -214, 28,
	-191, -191, -194, -194, 28, -176, 29, 73, -181, 227,
	65, -178, -178, -179, 30, -179, -179, -179, -187, 64,
	-187, 65, 65, 55, -148, 22, -73, -3, -161, -219,
	143, 139, 147, 148, 141, 60, 61, 62, 132, 28,
	138, 140, 161, 137, -219, -143, -144, 134, 22, 132,
	28, 161, -216, 56, 167, 223, 167, 134, -162, -155,
	-134, -138, -116, 57, -134, -51, 79, -84, -84, -231,
	-231, -53, -149, -108, -113, -166, 114, 198, 155, 196,
	192, 212, 203, 225, 194, 226, -163, -166, -84, -84,
	-84, -84, 272, -108, 87, -57, 85, -149, -84, -84,
	64, -223, 88, -83, 41, -73, -106, 13, -57, 105,
	-119, 55, -120, -95, -97, -96, -230, -114, -148, -118,
	-148, -58, 58, 88, -65, -64, 55, 56, -66, 55,
	-64, 45, 45, -231, 132, 132, 132, -118, -231, -108,
	-78, 246, 250, 251, -200, -201, -204, -203, -148, -207,
	-194, -194, 57, -177, 55, -84, 59, -179, -179, -214,
	114, 59, 58, 59, 58, 59, 58, -73, -3, 22,
	-161, -161, -73, -161, -148, -213, 275, -215, -214, -148,
	-148, -148, -73, 120, -138, -138, -115, -148, -138, -84,
	-231, -112, -231, -174, -174, -174, -183, -174, 186, -174,
	186, -231, -231, 19, 19, 19, 19, -230, -49, 268,
	-57, 58, 58, 64, -83, -107, 14, 16, 27, -119,
	58, -231, -231, 58, 120, -231, 58, -78, -123, -57,
	-57, 57, -57, -230, -230, -230, -231, -112, 59, 58,
	-174, -115, -185, 223, 9, -178, 64, -178, 65, 65,
	-162, -3, 26, -212, -211, -149, 57, 56, -155, 59,
	58, -113, -178, -214, -84, -84, -84, -84, -84, -112,
	64, -84, -84, -57, -94, 28, -97, 36, -3, -148,
	-148, -148, -108, -115, -115, -231, -115, -115, -157, -206,
	-205, 56, 142, 71, -203, 59, -186, 138, 28, 137,
	-87, -179, -179, 59, 59, -230, 58, 88, -115, -73,
	-148, -231, -231, -231, -231, -48, 98, 275, -231, -231,
	-231, 9, -95, 120, -112, 59, -231, -231, -231, -77,
	-205, -214, -195, 88, 64, 150, -175, 71, 28, 28,
	-208, -209, 161, -211, -201, 59, -231, 273, 52, 276,
	-120, -148, 65, -73, 64, -231, 58, -148, -216, 41,
	274, 277, 57, -209, 36, -213, 41, -115, 163, 275,
	59, 164, 276, -221, -222, 55, -230, 277, -222, 55,
	10, 9, -84, 160, -220, 151, 146, 149, 30, -220,
	-231, -231, 145, 29, 73,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 664, 0, 392, 392, 392, 392, 392,
	392, 0, 737, 720, 0, 0, 0, 0, -2, 357,
	358, 0, 360, -2, 0, 0, -2, 1069, 1069, 0,
	0, 1069, 0, 0, 392, 0, 392, 392, 1067, 53,
	54, 375, 376, 377, 95, 1, 3, 0, 396, 672,
	0, 0, -2, 394, 0, 720, 720, 0, 0, 85,
	86, 0, 0, 0, 1056, 0, 0, 718, 718, 718,
	0, 738, 739, -2, -2, -2, 742, 743, 35, 36,
	37, 879, 880, 881, 882, 883, 884, 885, 886, 887,
	888, 889, 890, 891, 892, 893, 894, 895, 896, 897,
	898, 899, 900, 901, 902, 903, 904, 905, 906, 907,
	908, 909, 910, 911, 912, 913, 914, 915, 916, 917,
	918, 919, 920, 921, 922, 923, 924, 925, 926, 927,
	928, 929, 930, 931, 932, 933, 934, 935, 936, 937,
	938, 939, 940, 941, 942, 943, 944, 945, 946, 947,
	948, 949, 950, 951, 952, 953, 954, 955, 957, 958,
	959, 960, 961, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 1057, 1058, 1059, 1060, 1061,
	1062, 1063, 1064, 1065, 1066, 0, 0, 0, 0, 0,
	721, 0, 716, 0, 716, 716, 716, 0, 304, 480,
	746, 747, 956, 1034, 1035, 1056, 0, 0, 0, 348,
	0, 1070, 316, 0, 318, 1070, 0, 1070, 0, 325,
	0, 0, 331, 232, 0, 340, 354, 355, 342, 356,
	359, 0, 364, 367, 0, 339, 0, 0, 374, 387,
	388, 1069, 1069, 391, 40, 536, 492, 0, 499, -2,
	0, 538, 539, 540, 541, 542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 569, 570, 571, 572,
	649, 650, 651, 652, 653, 654, 655, 656, 503, 504,
	646, 0, 694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 637, 0, 607, 607, 607, 607, 607, 607,
	607, 607, 0, 0, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 217, 758, 0, 664, 49, 0,
	392, 397, 398, 676, 0, 0, 664, 1068, 0, 0,
	-2, -2, 408, 414, 415, 416, 417, 393, 0, 420,
	425, 0, 0, 0, 0, 0, 0, 62, 64, 480,
	68, 0, 1045, 698, -2, -2, 0, 0, 744, 745,
	-2, 893, -2, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 794, 795, 796, 797,
	798, 799, 800, 801, 802, 803, 804, 805, 806, 807,
	808, 809, 810, 811, 812, 813, 814, 815, 816, 817,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 839, 840, 841, 842, 843, 844, 845, 846, 847,
	848, 849, 850, 851, 852, 853, 854, 855, 856, 857,
	858, 859, 860, 861, 862, 863, 864, 865, 866, 867,
	868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
	878, 0, 0, 122, 0, 120, 0, 0, 0, 0,
	0, 0, 0, 0, 718, 0, 1070, 1070, 1070, 0,
	0, 0, 0, 295, 0, 0, 0, 0, 0, 0,
	0, 303, 0, 305, 1070, 348, 308, 0, 0, 1070,
	1070, 1070, 0, 1070, 1070, 315, 1071, 1072, 0, 348,
	392, 225, 226, 227, 319, 1070, 1070, 321, 0, 345,
	343, 344, 337, 338, 0, 351, 328, 329, 334, 233,
	0, 365, 368, 0, 386, 378, 379, 380, 381, 0,
	389, 390, 0, 0, 0, 0, 0, 498, 533, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 521,
	522, 523, 524, 525, 526, 527, 500, 0, 514, 0,
	0, 0, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 0, 568, 405, 0, 0, 0, 664, 0, 0,
	0, 0, 0, 0, 0, 402, 0, 638, 0, 591,
	599, 0, 592, 600, 593, 601, 594, 0, 595, 602,
	596, 603, 597, 598, 604, 0, 0, 0, 405, 405,
	0, 0, 232, 232, 0, 105, 754, 759, 760, 672,
	0, 407, 41, 0, 0, 673, 665, 666, 669, 672,
	0, 430, 418, 409, 412, 413, 395, 0, -2, 422,
	426, 0, 428, 429, 0, 66, 0, 479, 0, 432,
	434, 435, 436, 438, 461, 0, 463, 463, 939, -2,
	0, 0, 0, 60, 61, 0, 0, 0, 0, 1045,
	699, 70, 71, 0, 0, 0, 0, 200, 711, 712,
	713, 709, 250, 0, 0, 188, 184, 128, 129, 130,
	177, 132, 177, 177, 177, 177, 197, 197, 197, 197,
	160, 161, 162, 163, 164, 0, 0, 147, 177, 177,
	177, 151, 167, 168, 169, 170, 171, 172, 173, 174,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 179,
	179, 179, 181, 181, 740, 0, 0, 0, 84, 0,
	1070, 0, 1070, 117, 0, 0, 264, 266, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 717, 0,
	1070, 301, 302, 481, 748, 749, 306, 307, 349, 350,
	309, 310, 311, 312, 313, 314, 0, 228, 229, 0,
	333, 0, 320, 324, 0, 348, 0, 0, 326, 327,
	0, 0, 336, 0, 366, 382, 370, 371, 372, 373,
	537, 493, 494, 495, 497, 515, 0, 517, 519, 534,
	505, 506, 530, 531, 532, 0, 0, 0, 0, 528,
	510, 0, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 557, 622, 623, 0, 555, 556,
	567, 0, 0, 0, 406, 647, 0, -2, 0, 535,
	693, 672, 0, 0, 0, 0, 540, 649, 0, 540,
	649, 0, 0, 0, 403, 404, 644, 641, 0, 0,
	646, 0, 608, 0, 0, 0, 0, 0, 0, 0,
	0, 96, 99, 102, 103, 104, 752, 755, 0, 38,
	676, 50, 677, 0, 0, 0, 0, 668, 670, 671,
	676, 0, 657, 0, 0, 490, 0, 0, 410, 47,
	427, 423, 0, 0, 0, 478, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 471, 0, 0, 0, 0,
	462, 0, 0, 0, 0, 437, 464, 0, 466, 467,
	485, 982, 405, 490, 0, 490, 63, 490, 65, 0,
	484, 700, 69, 0, 0, 74, 75, 701, 702, 703,
	704, 705, 706, 707, 0, 119, 251, 253, 256, 257,
	258, 123, 124, 125, 0, 0, 238, 0, 0, 232,
	232, 0, 230, 231, 121, 191, 189, 0, 186, 185,
	131, 0, 197, 197, 154, 155, 200, 0, 200, 200,
	200, 0, 0, 148, 149, 150, 142, 0, 143, 144,
	145, 0, 146, 0, 0, 88, 0, 0, 0, 92,
	719, 93, 118, 1069, 0, 0, 732, 265, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 0, 109,
	269, 271, 270, 274, 0, 0, 0, 296, 1070, 300,
	0, 345, 348, 445, 345, 323, 346, 347, 352, 330,
	362, 385, 383, 384, 516, 518, 520, 507, 528, 511,
	0, 508, 0, 0, 502, 574, 0, 0, 405, 0,
	664, 676, 578, 579, 0, 0, 0, 0, 0, 615,
	0, 0, 616, 0, 664, 0, 642, 0, 0, 590,
	0, 609, 0, 0, 610, 611, 612, 613, 614, 97,
	106, 107, 108, 100, 101, 0, 757, 753, 0, 39,
	0, 43, 0, 674, 675, 667, 42, 0, 714, 715,
	658, 659, 660, 0, 419, 431, 411, 0, 687, 0,
	0, 680, 0, 0, 430, 695, 0, 433, 457, 459,
	0, 454, 469, 470, 472, 0, 474, 0, 476, 477,
	439, 440, 441, 442, 0, 465, 443, 0, 0, 0,
	0, 0, 664, 490, 58, 59, 0, 72, 73, 0,
	0, 79, 201, 202, 0, 254, 0, 0, 0, 220,
	232, 232, 223, 224, 0, 193, 0, 190, 127, 187,
	0, 200, 200, 156, 0, 157, 158, 159, 0, 175,
	0, 0, 0, 0, 741, 0, 0, 90, 259, 1069,
	276, 277, 278, 279, 280, 281, 282, 283, 284, 285,
	286, 287, 288, 289, 1069, 0, 1069, 733, 734, 735,
	736, 0, 112, 0, 0, 0, 0, 0, 299, 482,
	348, 332, 348, 0, 348, 509, 0, 529, 512, 575,
	576, 0, 648, 672, 45, 0, 177, 177, 627, 177,
	181, 630, 177, 632, 177, 635, 0, 0, 0, 0,
	0, 0, 0, 639, 589, 645, 0, 647, 0, 0,
	0, 756, 0, 750, 678, 44, 662, 0, 491, 424,
	51, 0, 687, 679, 689, 691, 0, 0, 683, 0,
	449, 490, 0, 0, 451, 458, 0, 0, 452, 0,
	453, 473, 475, -2, 0, 0, 0, 0, 573, 672,
	57, 76, 77, 78, 252, 255, 0, 234, 177, 237,
	221, 222, 0, 195, 0, 192, 178, 152, 153, 198,
	199, 197, 0, 197, 0, 182, 0, 1070, 89, 0,
	260, 261, 262, 263, 0, 268, 0, 110, 111, 0,
	0, 273, 297, 0, 317, 335, 0, 447, 322, 513,
	577, 676, 580, 624, 197, 628, 629, 631, 633, 634,
	636, 582, 581, 0, 0, 0, 0, 0, 672, 0,
	643, 0, 0, 98, 751, 48, 0, 0, 0, 52,
	0, 692, 0, 0, 0, 67, 0, 664, 696, 697,
	455, 0, 460, 0, 0, 0, 463, 56, 211, 0,
	236, 0, 203, 196, 0, 200, 176, 200, 0, 0,
	87, 91, 0, 113, 114, 0, 0, 0, 483, 446,
	0, 46, 625, 626, 0, 0, 0, 0, 617, 0,
	640, 0, 0, 663, 661, 0, 690, 0, 682, 685,
	684, 450, 672, 0, 0, 487, 0, 0, 485, 210,
	212, 0, 218, 0, 235, 0, 208, 0, 205, 207,
	194, 165, 166, 180, 183, 0, 0, 0, 0, 275,
	448, 583, 585, 584, 586, 0, 0, 0, 588, 605,
	606, 0, 681, 0, 55, 456, 486, 488, 489, 444,
	213, 214, 0, 219, 216, 0, 126, 0, 204, 206,
	0, 291, 0, 115, 116, 109, 587, 0, 0, 0,
	688, 686, 215, 0, 209, 290, 0, 0, 112, 618,
	0, 621, 0, 292, 0, 272, 619, 0, 0, 0,
	239, 0, 0, 240, 241, 0, 0, 620, 242, 0,
	0, 0, 0, 0, 243, 245, 246, 0, 0, 244,
	293, 294, 247, 248, 249,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 81, 3, 3, 3, 108, 100, 3,
	57, 59, 105, 103, 58, 104, 120, 106, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 383,
	89, 88, 90, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 110, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 99, 3, 111,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 82, 83, 84, 85,
	86, 87, 91, 92, 93, 94, 95, 96, 97, 98,
	101, 102, 107, 109, 112, 113, 114, 115, 116, 117,
	118, 119, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:375
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:380
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:381
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:385
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:418
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:424
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:428
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:432
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:438
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:444
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:450
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 41:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:456
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:464
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:468
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].str, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].str)
		}
	case 44:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:472
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 45:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:495
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:503
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].str, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].str)
		}
	case 47:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:509
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:517
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereStr, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingStr, yyDollar[8].expr))
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:523
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:527
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:534
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:546
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:558
		{
			yyVAL.str = InsertStr
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:562
		{
			yyVAL.str = ReplaceStr
		}
	case 55:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:568
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit}
		}
	case 56:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:574
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 57:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:578
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:582
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:586
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:591
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:592
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:596
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:600
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:606
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:610
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:615
		{
			yyVAL.partitions = nil
		}
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:619
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:625
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 69:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:631
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Characteristics: yyDollar[5].characteristics}
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:635
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:641
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:645
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:651
		{
			yyVAL.characteristic = &IsolationLevel{Level: string(yyDollar[3].str)}
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:655
		{
			yyVAL.characteristic = &AccessMode{Mode: TxReadWrite}
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:659
		{
			yyVAL.characteristic = &AccessMode{Mode: TxReadOnly}
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:665
		{
			yyVAL.str = RepeatableRead
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:669
		{
			yyVAL.str = ReadCommitted
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:673
		{
			yyVAL.str = ReadUncommitted
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:677
		{
			yyVAL.str = Serializable
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:683
		{
			yyVAL.str = SessionStr
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:687
		{
			yyVAL.str = GlobalStr
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:693
		{
			yyVAL.str = TempStr
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:697
		{
			yyVAL.str = TemporaryStr
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:703
		{
			yyVAL.str = MaterializedStr
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:709
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:714
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:720
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName}
		}
	case 88:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:725
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[3].tableName.ToViewName(), SelectStatement: yyDollar[5].selStmt}
		}
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:729
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[5].tableName.ToViewName(), SelectStatement: yyDollar[7].selStmt, OrReplace: true}
		}
	case 90:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:733
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[4].tableName.ToViewName(), SelectStatement: yyDollar[6].selStmt, Modifier: yyDollar[2].str}
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:737
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[6].tableName.ToViewName(), SelectStatement: yyDollar[8].selStmt, OrReplace: true, Modifier: yyDollar[4].str}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:741
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].colIdent.String()), IfNotExists: notExists}
		}
	case 93:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:749
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].colIdent.String()), IfNotExists: notExists}
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:758
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:762
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:768
		{
			yyVAL.statement = &Auth{SessionAuth: yyDollar[1].boolVal, Provider: yyDollar[4].str}
		}
	case 97:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:773
		{
			yyVAL.statement = &Auth{SessionAuth: yyDollar[1].boolVal, Provider: yyDollar[4].str, Type: yyDollar[5].str}
		}
	case 98:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:778
		{
			yyVAL.statement = &Auth{SessionAuth: yyDollar[1].boolVal, Provider: yyDollar[4].str, Type: yyDollar[5].str, KeyFilePath: string(yyDollar[6].bytes), KeyEnvVar: string(yyDollar[7].bytes)}
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:783
		{
			yyVAL.statement = &AuthRevoke{SessionAuth: yyDollar[1].boolVal, Provider: yyDollar[4].str}
		}
	case 100:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:789
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes), ProviderId: yyDollar[4].colIdent.GetRawVal(), ProviderVersion: yyDollar[5].colIdent.GetRawVal()}
		}
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:794
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes), ProviderId: yyDollar[4].colIdent.GetRawVal(), ProviderVersion: string(yyDollar[5].bytes)}
		}
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:799
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes), ProviderId: yyDollar[4].colIdent.GetRawVal()}
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:804
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes), ProviderId: yyDollar[4].colIdent.GetRawVal()}
		}
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:809
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes), ProviderId: string(yyDollar[4].bytes)}
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:814
		{
			yyVAL.statement = &Registry{ActionType: string(yyDollar[3].bytes)}
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:820
		{
			yyVAL.str = InteractiveStr
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:824
		{
			yyVAL.str = ServiceAccountStr
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:828
		{
			yyVAL.str = ServiceAccountStr
		}
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:834
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:838
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:844
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:849
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:854
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:860
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:865
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:871
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:877
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName, IfNotExists: notExists}
			setDDL(yylex, yyVAL.ddl)
		}
	case 118:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:886
		{
			var notExists bool
			if yyDollar[4].byt != 0 {
				notExists = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: notExists, Modifier: yyDollar[2].str}
			setDDL(yylex, yyVAL.ddl)
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:897
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:904
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:908
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:914
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:919
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:923
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:927
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 126:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:933
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolVal
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolVal
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].sqlVal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:944
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:955
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:960
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:966
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:970
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:974
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:978
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:982
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:986
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:990
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:994
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1010
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1022
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1028
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1036
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1040
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1044
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1048
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1052
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1058
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1062
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1066
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1070
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1074
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1078
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1082
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1086
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1090
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1094
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1098
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1102
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1106
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1110
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 166:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1115
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1121
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1125
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1129
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1133
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1137
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1141
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1145
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1149
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1155
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1160
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1165
		{
			yyVAL.sqlVal = nil
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1169
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1174
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 180:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1178
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1186
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1190
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 183:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1196
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1204
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1208
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1213
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1217
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1223
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1227
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1231
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1236
		{
			yyVAL.optVal = nil
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1240
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1245
		{
			yyVAL.optVal = nil
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1249
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1254
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1258
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1263
		{
			yyVAL.str = ""
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1267
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1271
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1276
		{
			yyVAL.str = ""
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1280
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1284
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1289
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1293
		{
			yyVAL.colKeyOpt = ColKeyPrimary
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1297
		{
			yyVAL.colKeyOpt = ColKey
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1301
		{
			yyVAL.colKeyOpt = ColKeyUniqueKey
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1305
		{
			yyVAL.colKeyOpt = ColKeyUnique
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1310
		{
			yyVAL.sqlVal = nil
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1314
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1320
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1324
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1330
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1334
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1340
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].colIdent.String())}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1344
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1349
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1355
		{
			yyVAL.statement = &Sleep{Duration: NewIntVal(yyDollar[2].bytes)}
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1361
		{
			yyVAL.str = ""
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1365
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1371
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1375
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1379
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1383
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1387
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1393
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1397
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1401
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1408
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1412
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1418
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1422
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1427
		{
			yyVAL.str = ""
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1431
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1437
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1441
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1447
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1453
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1457
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 239:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1464
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 240:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1468
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 241:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1472
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 242:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1476
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1482
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1488
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1502
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1506
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1510
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1515
		{
			yyVAL.str = ""
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1523
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.str = yyDollar[1].str
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1535
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1539
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1545
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1549
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1553
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 259:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1559
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 260:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1563
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 261:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1567
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 262:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1571
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 263:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1576
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1581
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1585
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1589
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1593
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 268:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1597
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1609
		{
			yyVAL.statement = &DDL{
				Action: DropVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 270:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1619
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1623
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 272:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1627
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 273:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1640
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1650
		{
			yyVAL.statement = &DDL{Action: AddSequenceStr, Table: yyDollar[5].tableName}
		}
	case 275:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1654
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncStr,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 290:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1683
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1689
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1693
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 293:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1699
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 294:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1703
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1709
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1715
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1719
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1727
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 299:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1735
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName}
		}
	case 300:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1740
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: exists}
		}
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1748
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1752
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1758
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1762
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1767
		{
			yyVAL.statement = &OtherRead{}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1773
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String())}
		}
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1778
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Type: CharsetStr, ShowTablesOpt: showTablesOpt}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1783
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1788
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1793
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String())}
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1797
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1801
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1805
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1809
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1813
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1817
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 317:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1821
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1826
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1830
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1834
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1838
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1842
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1847
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1857
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1861
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1865
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: yyDollar[4].expr}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1869
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Scope: string(yyDollar[2].bytes), Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1874
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1878
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1882
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1886
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 332:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1890
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[6].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].colIdent.String()), OnTable: yyDollar[5].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1907
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].colIdent.String()), ShowTablesOpt: showTablesOpt}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1912
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Scope: yyDollar[3].str}
		}
	case 335:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1917
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Comments: Comments(yyDollar[4].bytes2), Type: string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, ShowTablesOpt: showTablesOpt, Columns: yyDollar[6].columns}
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1923
		{
			yyVAL.statement = &Show{Type: "TRANSACTION_ISOLATION_LEVEL"}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1929
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1933
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1939
		{
			yyVAL.str = ""
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1943
		{
			yyVAL.str = "extended "
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1949
		{
			yyVAL.str = ""
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1953
		{
			yyVAL.str = "full "
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1959
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1963
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1969
		{
			yyVAL.str = ""
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1973
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1977
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1983
		{
			yyVAL.showFilter = nil
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1987
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1991
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1997
		{
			yyVAL.showFilter = nil
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2001
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2007
		{
			yyVAL.str = ""
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.str = SessionStr
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.str = GlobalStr
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2021
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.statement = &Begin{}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2035
		{
			yyVAL.statement = &Begin{}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.statement = &Commit{}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2047
		{
			yyVAL.statement = &Rollback{}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2051
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2056
		{
			yyVAL.empty = struct{}{}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2058
		{
			yyVAL.empty = struct{}{}
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2061
		{
			yyVAL.empty = struct{}{}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2063
		{
			yyVAL.empty = struct{}{}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2068
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2074
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2079
		{
			yyVAL.str = ""
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2083
		{
			yyVAL.str = JSONStr
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2087
		{
			yyVAL.str = TreeStr
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2091
		{
			yyVAL.str = VitessStr
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2095
		{
			yyVAL.str = TraditionalStr
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2099
		{
			yyVAL.str = AnalyzeStr
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2105
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2109
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2113
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2119
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2123
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2127
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2131
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2136
		{
			yyVAL.str = ""
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2140
		{
			yyVAL.str = ""
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2150
		{
			yyVAL.statement = &DescribeTable{Full: string(yyDollar[2].str), Extended: string(yyDollar[3].str), Table: yyDollar[4].tableName}
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2154
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2160
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2164
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2168
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2172
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2178
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2182
		{
			setAllowComments(yylex, true)
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2186
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2192
		{
			yyVAL.bytes2 = nil
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2196
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.str = UnionStr
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2206
		{
			yyVAL.str = UnionAllStr
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2210
		{
			yyVAL.str = UnionDistinctStr
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2215
		{
			yyVAL.str = ""
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2219
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.str = SQLCacheStr
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2228
		{
			yyVAL.str = ""
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2232
		{
			yyVAL.str = DistinctStr
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2236
		{
			yyVAL.str = DistinctStr
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2241
		{
			yyVAL.selectExprs = nil
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2245
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2250
		{
			yyVAL.strs = nil
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2254
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2258
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2262
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2266
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2272
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2276
		{
			yyVAL.str = SQLCacheStr
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2280
		{
			yyVAL.str = DistinctStr
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2284
		{
			yyVAL.str = DistinctStr
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2288
		{
			yyVAL.str = StraightJoinHint
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2292
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2298
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2302
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2308
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			concatamer := ListArgConcatamer(yyDollar[2].listArgsConcat)
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: NewColIdent(concatamer.String())}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2317
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2321
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2325
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2330
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2334
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2338
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2345
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2350
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2354
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2360
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2364
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2375
		{
			yyVAL.tableExpr = &TableValuedFuncTableExpr{FuncExpr: yyDollar[1].expr, As: yyDollar[2].tableIdent}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2381
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2385
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2389
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2393
		{
			exec := yyDollar[2].statement.(*Exec)
			yyVAL.tableExpr = &ExecSubquery{Exec: exec}
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2400
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2406
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 444:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2410
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2415
		{
			yyVAL.columns = nil
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2419
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2426
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2430
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2436
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2440
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2453
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2457
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2461
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2465
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2471
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2473
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2477
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2479
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2483
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2485
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2488
		{
			yyVAL.empty = struct{}{}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.empty = struct{}{}
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2493
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2497
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2501
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2508
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2514
		{
			yyVAL.str = JoinStr
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2518
		{
			yyVAL.str = JoinStr
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2522
		{
			yyVAL.str = JoinStr
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2528
		{
			yyVAL.str = StraightJoinStr
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2534
		{
			yyVAL.str = LeftJoinStr
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2538
		{
			yyVAL.str = LeftOuterJoinStr
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2542
		{
			yyVAL.str = RightJoinStr
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2546
		{
			yyVAL.str = RightOuterJoinStr
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2552
		{
			yyVAL.str = NaturalJoinStr
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2556
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2566
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2570
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2576
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2580
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2584
		{
			yyVAL.tableName = TableName{QualifierSecond: yyDollar[1].tableIdent, Qualifier: yyDollar[3].tableIdent, Name: yyDollar[5].tableIdent}
		}
	case 483:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2588
		{
			yyVAL.tableName = TableName{QualifierThird: yyDollar[1].tableIdent, QualifierSecond: yyDollar[3].tableIdent, Qualifier: yyDollar[5].tableIdent, Name: yyDollar[7].tableIdent}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2594
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2599
		{
			yyVAL.indexHints = nil
		}
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2603
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2607
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr}
		}
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2611
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2615
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2620
		{
			yyVAL.expr = nil
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2624
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2630
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2634
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2638
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2642
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2646
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2650
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2654
		{
			yyVAL.expr = &UnaryCastConcatamerExpr{Expr: yyDollar[1].expr, CastConcatamer: ListArgConcatamer(yyDollar[2].listArgsConcat)}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2658
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2662
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2668
		{
			yyVAL.str = ""
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2672
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2678
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2682
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2688
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2692
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2696
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2700
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2704
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2708
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2712
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2716
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 513:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2720
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2724
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2730
		{
			yyVAL.str = IsNullStr
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2734
		{
			yyVAL.str = IsNotNullStr
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2738
		{
			yyVAL.str = IsTrueStr
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2742
		{
			yyVAL.str = IsNotTrueStr
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2746
		{
			yyVAL.str = IsFalseStr
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2750
		{
			yyVAL.str = IsNotFalseStr
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2756
		{
			yyVAL.str = EqualStr
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2760
		{
			yyVAL.str = LessThanStr
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2764
		{
			yyVAL.str = GreaterThanStr
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2768
		{
			yyVAL.str = LessEqualStr
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2772
		{
			yyVAL.str = GreaterEqualStr
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2776
		{
			yyVAL.str = NotEqualStr
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2780
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2785
		{
			yyVAL.expr = nil
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2789
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2795
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2799
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2803
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2808
		{
			yyVAL.listArgsConcat = []ListArg{ListArg(yyDollar[1].bytes)}
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2812
		{
			yyVAL.listArgsConcat = append(yyDollar[1].listArgsConcat, ListArg(yyDollar[2].bytes))
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2818
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2824
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2828
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2834
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2838
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2842
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2846
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2850
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2854
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2858
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2862
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2866
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2870
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2874
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2878
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2882
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2886
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2890
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2894
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2898
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2902
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2906
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2910
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2914
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2918
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2922
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Str, Expr: yyDollar[2].expr}
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2926
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2930
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Str, Expr: yyDollar[2].expr}
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2934
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2942
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2956
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2960
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2964
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2972
		{
			inputStr := string(yyDollar[2].bytes)
			stringList := strings.Split(inputStr, " ")
			if len(stringList) != 2 {
				yylex.Error("the interval string '" + inputStr + "' is not valid")
				return 1
			}
			stringExpr := NewStrVal([]byte(stringList[0]))
			yyVAL.expr = &IntervalExpr{Expr: stringExpr, Unit: stringList[1]}
		}
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2989
		{
			yyVAL.expr = &FuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2999
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3003
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3007
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 577:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3011
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3021
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3025
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 580:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3029
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3033
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3037
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 583:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3041
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 584:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3045
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 585:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3049
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 586:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3053
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 587:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3057
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3061
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3065
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3069
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3079
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3083
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3087
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3092
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3097
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3102
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3108
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3113
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3118
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3122
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3126
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3131
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3136
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3141
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 605:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3145
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 606:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3149
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3159
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3169
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3173
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3177
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3181
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3185
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3189
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3193
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3199
		{
			yyVAL.str = ""
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3203
		{
			yyVAL.str = BooleanModeStr
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3207
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 620:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3211
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3215
		{
			yyVAL.str = QueryExpansionStr
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3221
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3225
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3231
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3235
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3239
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3243
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3247
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3251
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3257
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3261
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3265
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3269
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3273
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3277
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3281
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3286
		{
			yyVAL.expr = nil
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3290
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3295
		{
			yyVAL.str = string("")
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3299
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3305
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3309
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3315
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3320
		{
			yyVAL.expr = nil
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3324
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3330
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3334
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 648:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3338
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3344
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3348
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3352
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3356
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3360
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3364
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3368
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3372
		{
			yyVAL.expr = &NullVal{}
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3378
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3387
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3391
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3396
		{
			yyVAL.exprs = nil
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3400
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3405
		{
			yyVAL.expr = nil
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3409
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3414
		{
			yyVAL.orderBy = nil
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3418
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3424
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3428
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3434
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3439
		{
			yyVAL.str = AscScr
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3443
		{
			yyVAL.str = AscScr
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3447
		{
			yyVAL.str = DescScr
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3452
		{
			yyVAL.limit = nil
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3456
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3460
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3464
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3469
		{
			yyVAL.str = ""
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3473
		{
			yyVAL.str = ForUpdateStr
		}
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3477
		{
			yyVAL.str = ShareModeStr
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3490
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3494
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3498
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3502
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3508
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3512
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3516
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3520
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3525
		{
			yyVAL.updateExprs = nil
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3529
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3535
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3539
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3545
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3549
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3555
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3561
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3571
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3575
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3581
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3587
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3591
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].str
			yyVAL.setExprs = SetExprs{yyDollar[2].setExpr}
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3596
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3602
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("on"))}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3606
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("off"))}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3610
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3614
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("on"))}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3618
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("off"))}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3622
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3626
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3633
		{
			yyVAL.bytes = []byte("charset")
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3640
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3644
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3648
		{
			yyVAL.expr = &Default{}
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3657
		{
			yyVAL.byt = 0
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3659
		{
			yyVAL.byt = 1
		}
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3662
		{
			yyVAL.byt = 0
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3664
		{
			yyVAL.byt = 1
		}
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3667
		{
			yyVAL.str = ""
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3669
		{
			yyVAL.str = IgnoreStr
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3673
		{
			yyVAL.empty = struct{}{}
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3675
		{
			yyVAL.empty = struct{}{}
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3677
		{
			yyVAL.empty = struct{}{}
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3679
		{
			yyVAL.empty = struct{}{}
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3681
		{
			yyVAL.empty = struct{}{}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3683
		{
			yyVAL.empty = struct{}{}
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3685
		{
			yyVAL.empty = struct{}{}
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3687
		{
			yyVAL.empty = struct{}{}
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3689
		{
			yyVAL.empty = struct{}{}
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3691
		{
			yyVAL.empty = struct{}{}
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3694
		{
			yyVAL.empty = struct{}{}
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3696
		{
			yyVAL.empty = struct{}{}
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3698
		{
			yyVAL.empty = struct{}{}
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3702
		{
			yyVAL.empty = struct{}{}
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3704
		{
			yyVAL.empty = struct{}{}
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3707
		{
			yyVAL.empty = struct{}{}
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3709
		{
			yyVAL.empty = struct{}{}
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3711
		{
			yyVAL.empty = struct{}{}
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3714
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3716
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3720
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3724
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3731
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3737
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3741
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3748
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3754
		{
			yyVAL.execVarDef = NewExecVarDef(yyDollar[1].colIdent, yyDollar[3].expr)
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3760
		{
			yyVAL.execVarDef = NewExecVarDef(yyDollar[1].colIdent, yyDollar[3].expr)
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3766
		{
			yyVAL.execVarDefOpt = nil
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3768
		{
			rv := yyDollar[1].execVarDef
			yyVAL.execVarDefOpt = &rv
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3774
		{
			yyVAL.execVarDefs = nil
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3776
		{
			yyVAL.execVarDefs = []ExecVarDef{yyDollar[1].execVarDef}
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3780
		{
			yyVAL.execVarDefs = append(yyDollar[1].execVarDefs, yyDollar[3].execVarDef)
		}
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3787
		{
			yyVAL.statement = NewExec(yyDollar[2].bytes2, yyDollar[3].tableName, yyDollar[4].execVarDefs, yyDollar[5].execVarDefOpt)
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3793
		{
			yyVAL.statement = NewPurge(yyDollar[2].bytes2, TableName{}, true)
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3797
		{
			yyVAL.statement = NewPurge(yyDollar[2].bytes2, yyDollar[3].tableName, false)
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3803
		{
			yyVAL.statement = NewNativeQuery(yyDollar[2].bytes2, string(yyDollar[3].bytes))
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4136
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4145
		{
			decNesting(yylex)
		}
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4150
		{
			skipToEnd(yylex)
		}
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4155
		{
			skipToEnd(yylex)
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4159
		{
			skipToEnd(yylex)
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4163
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
